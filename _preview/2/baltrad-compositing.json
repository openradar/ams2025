{"version":1,"kind":"Notebook","sha256":"7f8ab46c62cd497cb379092b8a1b997d3a425e07ab54760d1178050923b66b41","slug":"baltrad-compositing","location":"/notebooks/baltrad/baltrad_short_course/4_BALTRAD_Compositing.ipynb","dependencies":[],"frontmatter":{"title":"Compositing","content_includes_title":false,"authors":[{"nameParsed":{"literal":"Alfonso Ladino","given":"Alfonso","family":"Ladino"},"name":"Alfonso Ladino","orcid":"0000-0001-8081-7827","github":"aladinor","id":"contributors-myst-generated-uid-0"},{"nameParsed":{"literal":"Anna del Moral Méndez","given":"Anna","non_dropping_particle":"del","family":"Moral Méndez"},"name":"Anna del Moral Méndez","orcid":"0000-0002-5015-840X","id":"contributors-myst-generated-uid-1"},{"nameParsed":{"literal":"Brenda Javornik","given":"Brenda","family":"Javornik"},"name":"Brenda Javornik","orcid":"0009-0004-9266-9293","github":"leavesntwigs","id":"contributors-myst-generated-uid-2"},{"nameParsed":{"literal":"Daniel Michelson","given":"Daniel","family":"Michelson"},"name":"Daniel Michelson","orcid":"0000-0003-3222-9881","github":"DanielMichelson","id":"contributors-myst-generated-uid-3"},{"nameParsed":{"literal":"Daniel Wolfensberger","given":"Daniel","family":"Wolfensberger"},"name":"Daniel Wolfensberger","orcid":"0009-0006-1419-0556","github":"wolfidan","id":"contributors-myst-generated-uid-4"},{"nameParsed":{"literal":"Gionata Ghiggi","given":"Gionata","family":"Ghiggi"},"name":"Gionata Ghiggi","orcid":"0000-0002-0818-0865","github":"ghiggi","id":"contributors-myst-generated-uid-5"},{"nameParsed":{"literal":"Jen DeHart","given":"Jen","family":"DeHart"},"name":"Jen DeHart","orcid":"0000-0001-8536-4927","github":"jcdehart","id":"contributors-myst-generated-uid-6"},{"nameParsed":{"literal":"Jordi Figueras i Ventura","given":"Jordi Figueras","non_dropping_particle":"i","family":"Ventura"},"name":"Jordi Figueras i Ventura","orcid":"0000-0002-4949-422X","github":"jfigui","id":"contributors-myst-generated-uid-7"},{"nameParsed":{"literal":"Julian Giles","given":"Julian","family":"Giles"},"name":"Julian Giles","orcid":"0000-0001-8134-008X","github":"JulianGiles","id":"contributors-myst-generated-uid-8"},{"nameParsed":{"literal":"Kai Mühlbauer","given":"Kai","family":"Mühlbauer"},"name":"Kai Mühlbauer","orcid":"0000-0001-6599-1034","github":"kmuehlbauer","id":"contributors-myst-generated-uid-9"},{"nameParsed":{"literal":"Maxwell Grover","given":"Maxwell","family":"Grover"},"name":"Maxwell Grover","orcid":"0000-0002-0370-8974","github":"mgrover1","id":"contributors-myst-generated-uid-10"},{"nameParsed":{"literal":"Mike Dixon","given":"Mike","family":"Dixon"},"name":"Mike Dixon","orcid":"0000-0002-9597-9113","github":"mike-dixon","id":"contributors-myst-generated-uid-11"},{"nameParsed":{"literal":"Robert Jackson","given":"Robert","family":"Jackson"},"name":"Robert Jackson","orcid":"0000-0003-2518-1234","github":"rcjackson","id":"contributors-myst-generated-uid-12"},{"nameParsed":{"literal":"Scott Collis","given":"Scott","family":"Collis"},"name":"Scott Collis","orcid":"0000-0002-2303-687X","github":"scollis","id":"contributors-myst-generated-uid-13"},{"nameParsed":{"literal":"Ting-Yu Cha","given":"Ting-Yu","family":"Cha"},"name":"Ting-Yu Cha","orcid":"0000-0002-6292-8483","github":"tingyucha","id":"contributors-myst-generated-uid-14"}],"open_access":true,"license":{"content":{"id":"Apache-2.0","url":"https://opensource.org/licenses/Apache-2.0","name":"Apache License 2.0","free":true,"osi":true},"code":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true}},"github":"https://github.com/openradar/erad2024","copyright":"2024","abbreviations":{"ARM":"Atmospheric Radiation Measurement","NCAR":"National Center for Atmospheric Research"},"settings":{"output_matplotlib_strings":"remove"},"numbering":{"title":{"offset":2}},"exports":[{"format":"ipynb","filename":"4_BALTRAD_Compositing.ipynb","url":"/ams2025/_preview/2/build/4_BALTRAD_Compositin-0e86e60e8eee9f0f8b8d595468d35df8.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"This exercise builds on output from the parallel processing exercise. It does not address how projections and navigation is dealt with in BALTRAD. This should be addressed in a separate exercise.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"PiKm2WRKtz"}],"key":"dqVUOy2Tnr"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"The Cartesian product area used in this exercise is pre-configured and looked up from a registry.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"uwEZEOQDVn"}],"key":"sA7snfTYWH"}],"key":"bRnUtEOLvm"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Rudimentary composite","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"p9sX6E7nep"}],"identifier":"rudimentary-composite","label":"Rudimentary composite","html_id":"rudimentary-composite","implicit":true,"key":"Klv704Gn5j"}],"key":"ThB1ZmeQRm"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-06-25T20:15:30.593196Z","iopub.status.busy":"2025-06-25T20:15:30.592732Z","iopub.status.idle":"2025-06-25T20:15:30.982310Z","shell.execute_reply":"2025-06-25T20:15:30.981739Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"%matplotlib inline\nimport glob, time\nimport matplotlib\nimport _raveio, _rave\nimport _pycomposite, compositing\nimport warnings\n\nwarnings.filterwarnings(\"ignore\")  # Suppress SyntaxWarning from Python2 code\n\ngenerator = compositing.compositing()\ngenerator.filenames = glob.glob(\"data/se*.h5\")","key":"nQyQf9yxQc"},{"type":"output","id":"cs3HF1zpSw-RaAVvygVEJ","data":[],"key":"X63TSUvaoI"}],"key":"FSq43ENDaT"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-06-25T20:15:30.984667Z","iopub.status.busy":"2025-06-25T20:15:30.984441Z","iopub.status.idle":"2025-06-25T20:15:42.498817Z","shell.execute_reply":"2025-06-25T20:15:42.498255Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Run with all defaults to a pre-configured area that uses the Google Maps projection.\n# First two arguments are product date and time. These are taken from the last input file if not specified.\nbefore = time.time()\ncomp = generator.generate(None, None, area=\"swegmaps_2000\")\nafter = time.time()\n\nrio = _raveio.new()\nrio.object = comp\nrio.save(\"data/comp_pcappi1000m.h5\")\n\nprint(\"Compositing took %3.2f seconds\" % (after - before))","key":"JZtjxraDeh"},{"type":"output","id":"t49OiSBUH777AFqKm7JxN","data":[{"name":"stderr","output_type":"stream","text":"--- Logging error ---\nTraceback (most recent call last):\n  File \"/srv/conda/envs/notebook/lib/python3.11/logging/handlers.py\", line 1000, in emit\n    self.socket.send(msg)\nOSError: [Errno 9] Bad file descriptor\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/srv/conda/envs/notebook/lib/python3.11/logging/handlers.py\", line 875, in _connect_unixsocket\n    self.socket.connect(address)\nFileNotFoundError: [Errno 2] No such file or directory\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/srv/conda/envs/notebook/lib/python3.11/logging/handlers.py\", line 1003, in emit\n    self._connect_unixsocket(self.address)\n  File \"/srv/conda/envs/notebook/lib/python3.11/logging/handlers.py\", line 886, in _connect_unixsocket\n    self.socket.connect(address)\nFileNotFoundError: [Errno 2] No such file or directory\nCall stack:\n  File \"<frozen runpy>\", line 198, in _run_module_as_main\n  File \"<frozen runpy>\", line 88, in _run_code\n  File \"/srv/conda/envs/notebook/lib/python3.11/site-packages/ipykernel_launcher.py\", line 18, in <module>\n    app.launch_new_instance()\n  File \"/srv/conda/envs/notebook/lib/python3.11/site-packages/traitlets/config/application.py\", line 1053, in launch_instance\n    app.start()\n  File \"/srv/conda/envs/notebook/lib/python3.11/site-packages/ipykernel/kernelapp.py\", line 739, in start\n    self.io_loop.start()\n  File \"/srv/conda/envs/notebook/lib/python3.11/site-packages/tornado/platform/asyncio.py\", line 205, in start\n    self.asyncio_loop.run_forever()\n  File \"/srv/conda/envs/notebook/lib/python3.11/asyncio/base_events.py\", line 604, in run_forever\n    self._run_once()\n  File \"/srv/conda/envs/notebook/lib/python3.11/asyncio/base_events.py\", line 1909, in _run_once\n    handle._run()\n  File \"/srv/conda/envs/notebook/lib/python3.11/asyncio/events.py\", line 80, in _run\n    self._context.run(self._callback, *self._args)\n  File \"/srv/conda/envs/notebook/lib/python3.11/site-packages/ipykernel/kernelbase.py\", line 545, in dispatch_queue\n    await self.process_one()\n  File \"/srv/conda/envs/notebook/lib/python3.11/site-packages/ipykernel/kernelbase.py\", line 534, in process_one\n    await dispatch(*args)\n  File \"/srv/conda/envs/notebook/lib/python3.11/site-packages/ipykernel/kernelbase.py\", line 437, in dispatch_shell\n    await result\n  File \"/srv/conda/envs/notebook/lib/python3.11/site-packages/ipykernel/ipkernel.py\", line 362, in execute_request\n    await super().execute_request(stream, ident, parent)\n  File \"/srv/conda/envs/notebook/lib/python3.11/site-packages/ipykernel/kernelbase.py\", line 778, in execute_request\n    reply_content = await reply_content\n  File \"/srv/conda/envs/notebook/lib/python3.11/site-packages/ipykernel/ipkernel.py\", line 449, in do_execute\n    res = shell.run_cell(\n  File \"/srv/conda/envs/notebook/lib/python3.11/site-packages/ipykernel/zmqshell.py\", line 549, in run_cell\n    return super().run_cell(*args, **kwargs)\n  File \"/srv/conda/envs/notebook/lib/python3.11/site-packages/IPython/core/interactiveshell.py\", line 3024, in run_cell\n    result = self._run_cell(\n  File \"/srv/conda/envs/notebook/lib/python3.11/site-packages/IPython/core/interactiveshell.py\", line 3079, in _run_cell\n    result = runner(coro)\n  File \"/srv/conda/envs/notebook/lib/python3.11/site-packages/IPython/core/async_helpers.py\", line 129, in _pseudo_sync_runner\n    coro.send(None)\n  File \"/srv/conda/envs/notebook/lib/python3.11/site-packages/IPython/core/interactiveshell.py\", line 3284, in run_cell_async\n    has_raised = await self.run_ast_nodes(code_ast.body, cell_name,\n  File \"/srv/conda/envs/notebook/lib/python3.11/site-packages/IPython/core/interactiveshell.py\", line 3466, in run_ast_nodes\n    if await self.run_code(code, result, async_=asy):\n  File \"/srv/conda/envs/notebook/lib/python3.11/site-packages/IPython/core/interactiveshell.py\", line 3526, in run_code\n    exec(code_obj, self.user_global_ns, self.user_ns)\n  File \"/ipykernel_942/102283892.py\", line 4, in <module>\n    comp = generator.generate(None, None, area=\"swegmaps_2000\")\n  File \"/srv/conda/envs/notebook/rave/Lib/compositing.py\", line 135, in generate\n    return self._generate(dd, dt, area)\n  File \"/srv/conda/envs/notebook/rave/Lib/compositing.py\", line 263, in _generate\n    logger.info(\"Using legacy compositing\")\nMessage: 'Using legacy compositing'\nArguments: ()\n"},{"name":"stdout","output_type":"stream","text":"Compositing took 11.48 seconds\n"}],"key":"zj3r7sA9d8"}],"key":"IV23Vj9g8v"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Tweak the plotter from earlier exercises","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"hNDVNDBc2U"}],"identifier":"tweak-the-plotter-from-earlier-exercises","label":"Tweak the plotter from earlier exercises","html_id":"tweak-the-plotter-from-earlier-exercises","implicit":true,"key":"JRAYsnfJTT"}],"key":"RjmBcFhyBt"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-06-25T20:15:42.500918Z","iopub.status.busy":"2025-06-25T20:15:42.500723Z","iopub.status.idle":"2025-06-25T20:15:42.506932Z","shell.execute_reply":"2025-06-25T20:15:42.506419Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Two color palettes, one used in GoogleMapsPlugin, and the other from RAVE\nfrom GmapColorMap import dbzh as dbzp\n\n\n# Convert a 768-list palette to a matplotlib colorlist\ndef make_colorlist(pal):\n    colorlist = []\n    for i in range(0, len(pal), 3):\n        colorlist.append([pal[i] / 255.0, pal[i + 1] / 255.0, pal[i + 2] / 255.0])\n    return colorlist\n\n\n# Convert lists to colormaps\ndbzcl = make_colorlist(dbzp)\n\n# Then create a simple plotter\nimport matplotlib.pyplot as plt\n\nStringType = type(\"\")\n\n\ndef plot(data, colorlist=dbzcl, title=\"Composite\"):\n    mini, maxi = data.shape.index(min(data.shape)), data.shape.index(max(data.shape))\n    figsize = (20, 16)  # if mini == 0 else (12,8)\n    fig = plt.figure(figsize=figsize)\n    plt.title(title)\n    clist = (\n        colorlist\n        if type(colorlist) == StringType\n        else matplotlib.colors.ListedColormap(colorlist)\n    )\n    plt.imshow(data, cmap=clist, clim=(0, 255))\n    plt.colorbar(shrink=float(data.shape[mini]) / data.shape[maxi])","key":"XVP5nQTuZy"},{"type":"output","id":"9wGocmvFtAg4hw0qMxLQd","data":[],"key":"Ndr1VAodKK"}],"key":"omwCk9DqNv"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-06-25T20:15:42.509352Z","iopub.status.busy":"2025-06-25T20:15:42.508886Z","iopub.status.idle":"2025-06-25T20:15:43.107213Z","shell.execute_reply":"2025-06-25T20:15:43.106589Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"plot(\n    comp.getParameter(\"DBZH\").getData(),\n    title=\"Default composite: DBZH 1000 m Pseudo-CAPPI, nearest radar\",\n)","key":"t82jE2MlLE"},{"type":"output","id":"rno1wY7U-lxDSRgdme5Jt","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"45562c37e49612f7c0335c3129c4a07b","path":"/ams2025/_preview/2/build/45562c37e49612f7c0335c3129c4a07b.png"},"text/plain":{"content":"<Figure size 2000x1600 with 2 Axes>","content_type":"text/plain"}}}],"key":"hnuRXZMM15"}],"key":"tAqiFuCP4U"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Maximum reflectivity, lowest pixel, add QC chain","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"BKw5sp3ZjX"}],"identifier":"maximum-reflectivity-lowest-pixel-add-qc-chain","label":"Maximum reflectivity, lowest pixel, add QC chain","html_id":"maximum-reflectivity-lowest-pixel-add-qc-chain","implicit":true,"key":"r7Iomr5B44"}],"key":"gR7xDylJ4n"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-06-25T20:15:43.111131Z","iopub.status.busy":"2025-06-25T20:15:43.110915Z","iopub.status.idle":"2025-06-25T20:16:08.891175Z","shell.execute_reply":"2025-06-25T20:16:08.890588Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"generator.product = _rave.Rave_ProductType_MAX\ngenerator.selection_method = _pycomposite.SelectionMethod_HEIGHT\ngenerator.detectors = [\n    \"ropo\",\n    \"beamb\",\n    \"radvol-att\",\n    \"radvol-broad\",\n    \"rave-overshooting\",\n    \"qi-total\",\n]\nbefore = time.time()\ncomp = generator.generate(None, None, area=\"swegmaps_2000\")\nafter = time.time()\nrio.object = comp\nrio.save(\"data/comp_max.h5\")\nprint(\"Compositing took %3.2f seconds\" % (after - before))","key":"cQRv5qoFYS"},{"type":"output","id":"ME4gTlMNJ4Gc0pb5-TuSk","data":[{"name":"stderr","output_type":"stream","text":"--- Logging error ---\nTraceback (most recent call last):\n  File \"/srv/conda/envs/notebook/lib/python3.11/logging/handlers.py\", line 1000, in emit\n    self.socket.send(msg)\nOSError: [Errno 9] Bad file descriptor\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/srv/conda/envs/notebook/lib/python3.11/logging/handlers.py\", line 875, in _connect_unixsocket\n    self.socket.connect(address)\nFileNotFoundError: [Errno 2] No such file or directory\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/srv/conda/envs/notebook/lib/python3.11/logging/handlers.py\", line 1003, in emit\n    self._connect_unixsocket(self.address)\n  File \"/srv/conda/envs/notebook/lib/python3.11/logging/handlers.py\", line 886, in _connect_unixsocket\n    self.socket.connect(address)\nFileNotFoundError: [Errno 2] No such file or directory\nCall stack:\n  File \"<frozen runpy>\", line 198, in _run_module_as_main\n  File \"<frozen runpy>\", line 88, in _run_code\n  File \"/srv/conda/envs/notebook/lib/python3.11/site-packages/ipykernel_launcher.py\", line 18, in <module>\n    app.launch_new_instance()\n  File \"/srv/conda/envs/notebook/lib/python3.11/site-packages/traitlets/config/application.py\", line 1053, in launch_instance\n    app.start()\n  File \"/srv/conda/envs/notebook/lib/python3.11/site-packages/ipykernel/kernelapp.py\", line 739, in start\n    self.io_loop.start()\n  File \"/srv/conda/envs/notebook/lib/python3.11/site-packages/tornado/platform/asyncio.py\", line 205, in start\n    self.asyncio_loop.run_forever()\n  File \"/srv/conda/envs/notebook/lib/python3.11/asyncio/base_events.py\", line 604, in run_forever\n    self._run_once()\n  File \"/srv/conda/envs/notebook/lib/python3.11/asyncio/base_events.py\", line 1909, in _run_once\n    handle._run()\n  File \"/srv/conda/envs/notebook/lib/python3.11/asyncio/events.py\", line 80, in _run\n    self._context.run(self._callback, *self._args)\n  File \"/srv/conda/envs/notebook/lib/python3.11/site-packages/ipykernel/kernelbase.py\", line 545, in dispatch_queue\n    await self.process_one()\n  File \"/srv/conda/envs/notebook/lib/python3.11/site-packages/ipykernel/kernelbase.py\", line 534, in process_one\n    await dispatch(*args)\n  File \"/srv/conda/envs/notebook/lib/python3.11/site-packages/ipykernel/kernelbase.py\", line 437, in dispatch_shell\n    await result\n  File \"/srv/conda/envs/notebook/lib/python3.11/site-packages/ipykernel/ipkernel.py\", line 362, in execute_request\n    await super().execute_request(stream, ident, parent)\n  File \"/srv/conda/envs/notebook/lib/python3.11/site-packages/ipykernel/kernelbase.py\", line 778, in execute_request\n    reply_content = await reply_content\n  File \"/srv/conda/envs/notebook/lib/python3.11/site-packages/ipykernel/ipkernel.py\", line 449, in do_execute\n    res = shell.run_cell(\n  File \"/srv/conda/envs/notebook/lib/python3.11/site-packages/ipykernel/zmqshell.py\", line 549, in run_cell\n    return super().run_cell(*args, **kwargs)\n  File \"/srv/conda/envs/notebook/lib/python3.11/site-packages/IPython/core/interactiveshell.py\", line 3024, in run_cell\n    result = self._run_cell(\n  File \"/srv/conda/envs/notebook/lib/python3.11/site-packages/IPython/core/interactiveshell.py\", line 3079, in _run_cell\n    result = runner(coro)\n  File \"/srv/conda/envs/notebook/lib/python3.11/site-packages/IPython/core/async_helpers.py\", line 129, in _pseudo_sync_runner\n    coro.send(None)\n  File \"/srv/conda/envs/notebook/lib/python3.11/site-packages/IPython/core/interactiveshell.py\", line 3284, in run_cell_async\n    has_raised = await self.run_ast_nodes(code_ast.body, cell_name,\n  File \"/srv/conda/envs/notebook/lib/python3.11/site-packages/IPython/core/interactiveshell.py\", line 3466, in run_ast_nodes\n    if await self.run_code(code, result, async_=asy):\n  File \"/srv/conda/envs/notebook/lib/python3.11/site-packages/IPython/core/interactiveshell.py\", line 3526, in run_code\n    exec(code_obj, self.user_global_ns, self.user_ns)\n  File \"/ipykernel_942/4106185503.py\", line 12, in <module>\n    comp = generator.generate(None, None, area=\"swegmaps_2000\")\n  File \"/srv/conda/envs/notebook/rave/Lib/compositing.py\", line 135, in generate\n    return self._generate(dd, dt, area)\n  File \"/srv/conda/envs/notebook/rave/Lib/compositing.py\", line 263, in _generate\n    logger.info(\"Using legacy compositing\")\nMessage: 'Using legacy compositing'\nArguments: ()\n"},{"name":"stdout","output_type":"stream","text":"Compositing took 25.57 seconds\n"}],"key":"Uoy80OMQjm"}],"key":"zl65nNgOhu"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-06-25T20:16:08.893482Z","iopub.status.busy":"2025-06-25T20:16:08.893103Z","iopub.status.idle":"2025-06-25T20:16:09.481064Z","shell.execute_reply":"2025-06-25T20:16:09.480493Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"plot(comp.getParameter(\"DBZH\").getData(), title=\"Maximum reflectivity, lowest pixel\")","key":"Ciw26ewSmp"},{"type":"output","id":"B0z7ExTbwn5KjJVNFDj-A","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"17ae35039f19bfdb36425887eee597f5","path":"/ams2025/_preview/2/build/17ae35039f19bfdb36425887eee597f5.png"},"text/plain":{"content":"<Figure size 2000x1600 with 2 Axes>","content_type":"text/plain"}}}],"key":"Et65Tzs2NI"}],"key":"AvY96g4yUW"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot correspondong total quality index","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"oQ1I2akVoU"}],"identifier":"plot-correspondong-total-quality-index","label":"Plot correspondong total quality index","html_id":"plot-correspondong-total-quality-index","implicit":true,"key":"QRIBiC8Wl8"}],"key":"ZJJsUp6ApN"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-06-25T20:16:09.487079Z","iopub.status.busy":"2025-06-25T20:16:09.486850Z","iopub.status.idle":"2025-06-25T20:16:10.195511Z","shell.execute_reply":"2025-06-25T20:16:10.194578Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"dbzh = comp.getParameter(\"DBZH\")\nqitot = dbzh.getQualityFieldByHowTask(\"pl.imgw.quality.qi_total\")\nplot(qitot.getData(), \"binary\", \"Total quality index\")","key":"IjkxOHbSu5"},{"type":"output","id":"nl-a3qulwrXyjGjy4NhtO","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"fbe633baa9c2e60c8c698af4f5e5000c","path":"/ams2025/_preview/2/build/fbe633baa9c2e60c8c698af4f5e5000c.png"},"text/plain":{"content":"<Figure size 2000x1600 with 2 Axes>","content_type":"text/plain"}}}],"key":"CPwfyup4FV"}],"key":"IsyBpEmgQ7"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Now use “total quality” as the compositing criterion","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Rl8UUBKc8w"}],"identifier":"now-use-total-quality-as-the-compositing-criterion","label":"Now use “total quality” as the compositing criterion","html_id":"now-use-total-quality-as-the-compositing-criterion","implicit":true,"key":"OGQsytXrVr"}],"key":"zx0zmGs6NA"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-06-25T20:16:10.205828Z","iopub.status.busy":"2025-06-25T20:16:10.204681Z","iopub.status.idle":"2025-06-25T20:16:53.662468Z","shell.execute_reply":"2025-06-25T20:16:53.661615Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"generator.qitotal_field = \"pl.imgw.quality.qi_total\"\nbefore = time.time()\ncomp = generator.generate(None, None, area=\"swegmaps_2000\")\nafter = time.time()\nrio.object = comp\nrio.save(\"data/comp_qitotal.h5\")\nprint(\"Compositing took %3.2f seconds\" % (after - before))","key":"RggKDJOTNp"},{"type":"output","id":"nZlc8cRmpVrzdmDbramq2","data":[{"name":"stderr","output_type":"stream","text":"--- Logging error ---\nTraceback (most recent call last):\n  File \"/srv/conda/envs/notebook/lib/python3.11/logging/handlers.py\", line 1000, in emit\n    self.socket.send(msg)\nOSError: [Errno 9] Bad file descriptor\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/srv/conda/envs/notebook/lib/python3.11/logging/handlers.py\", line 875, in _connect_unixsocket\n    self.socket.connect(address)\nFileNotFoundError: [Errno 2] No such file or directory\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/srv/conda/envs/notebook/lib/python3.11/logging/handlers.py\", line 1003, in emit\n    self._connect_unixsocket(self.address)\n  File \"/srv/conda/envs/notebook/lib/python3.11/logging/handlers.py\", line 886, in _connect_unixsocket\n    self.socket.connect(address)\nFileNotFoundError: [Errno 2] No such file or directory\nCall stack:\n  File \"<frozen runpy>\", line 198, in _run_module_as_main\n  File \"<frozen runpy>\", line 88, in _run_code\n  File \"/srv/conda/envs/notebook/lib/python3.11/site-packages/ipykernel_launcher.py\", line 18, in <module>\n    app.launch_new_instance()\n  File \"/srv/conda/envs/notebook/lib/python3.11/site-packages/traitlets/config/application.py\", line 1053, in launch_instance\n    app.start()\n  File \"/srv/conda/envs/notebook/lib/python3.11/site-packages/ipykernel/kernelapp.py\", line 739, in start\n    self.io_loop.start()\n  File \"/srv/conda/envs/notebook/lib/python3.11/site-packages/tornado/platform/asyncio.py\", line 205, in start\n    self.asyncio_loop.run_forever()\n  File \"/srv/conda/envs/notebook/lib/python3.11/asyncio/base_events.py\", line 604, in run_forever\n    self._run_once()\n  File \"/srv/conda/envs/notebook/lib/python3.11/asyncio/base_events.py\", line 1909, in _run_once\n    handle._run()\n  File \"/srv/conda/envs/notebook/lib/python3.11/asyncio/events.py\", line 80, in _run\n    self._context.run(self._callback, *self._args)\n  File \"/srv/conda/envs/notebook/lib/python3.11/site-packages/ipykernel/kernelbase.py\", line 545, in dispatch_queue\n    await self.process_one()\n  File \"/srv/conda/envs/notebook/lib/python3.11/site-packages/ipykernel/kernelbase.py\", line 534, in process_one\n    await dispatch(*args)\n  File \"/srv/conda/envs/notebook/lib/python3.11/site-packages/ipykernel/kernelbase.py\", line 437, in dispatch_shell\n    await result\n  File \"/srv/conda/envs/notebook/lib/python3.11/site-packages/ipykernel/ipkernel.py\", line 362, in execute_request\n    await super().execute_request(stream, ident, parent)\n  File \"/srv/conda/envs/notebook/lib/python3.11/site-packages/ipykernel/kernelbase.py\", line 778, in execute_request\n    reply_content = await reply_content\n  File \"/srv/conda/envs/notebook/lib/python3.11/site-packages/ipykernel/ipkernel.py\", line 449, in do_execute\n    res = shell.run_cell(\n  File \"/srv/conda/envs/notebook/lib/python3.11/site-packages/ipykernel/zmqshell.py\", line 549, in run_cell\n    return super().run_cell(*args, **kwargs)\n  File \"/srv/conda/envs/notebook/lib/python3.11/site-packages/IPython/core/interactiveshell.py\", line 3024, in run_cell\n    result = self._run_cell(\n  File \"/srv/conda/envs/notebook/lib/python3.11/site-packages/IPython/core/interactiveshell.py\", line 3079, in _run_cell\n    result = runner(coro)\n  File \"/srv/conda/envs/notebook/lib/python3.11/site-packages/IPython/core/async_helpers.py\", line 129, in _pseudo_sync_runner\n    coro.send(None)\n  File \"/srv/conda/envs/notebook/lib/python3.11/site-packages/IPython/core/interactiveshell.py\", line 3284, in run_cell_async\n    has_raised = await self.run_ast_nodes(code_ast.body, cell_name,\n  File \"/srv/conda/envs/notebook/lib/python3.11/site-packages/IPython/core/interactiveshell.py\", line 3466, in run_ast_nodes\n    if await self.run_code(code, result, async_=asy):\n  File \"/srv/conda/envs/notebook/lib/python3.11/site-packages/IPython/core/interactiveshell.py\", line 3526, in run_code\n    exec(code_obj, self.user_global_ns, self.user_ns)\n  File \"/ipykernel_942/3132186426.py\", line 3, in <module>\n    comp = generator.generate(None, None, area=\"swegmaps_2000\")\n  File \"/srv/conda/envs/notebook/rave/Lib/compositing.py\", line 135, in generate\n    return self._generate(dd, dt, area)\n  File \"/srv/conda/envs/notebook/rave/Lib/compositing.py\", line 263, in _generate\n    logger.info(\"Using legacy compositing\")\nMessage: 'Using legacy compositing'\nArguments: ()\n"},{"name":"stdout","output_type":"stream","text":"Compositing took 43.26 seconds\n"}],"key":"qFzBe7lrIi"}],"key":"t3N34Wd4s5"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-06-25T20:16:53.664860Z","iopub.status.busy":"2025-06-25T20:16:53.664670Z","iopub.status.idle":"2025-06-25T20:16:54.240861Z","shell.execute_reply":"2025-06-25T20:16:54.240332Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"plot(comp.getParameter(\"DBZH\").getData(), title=\"Maximum reflectivity, quality-based\")","key":"HziQiYehd7"},{"type":"output","id":"rsQnHtcybaYdkz24mxM8g","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"c3e68461a67ac22c8208e60a3034fb64","path":"/ams2025/_preview/2/build/c3e68461a67ac22c8208e60a3034fb64.png"},"text/plain":{"content":"<Figure size 2000x1600 with 2 Axes>","content_type":"text/plain"}}}],"key":"wi33refY3S"}],"key":"VyN7g7dJja"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-06-25T20:16:54.246524Z","iopub.status.busy":"2025-06-25T20:16:54.246351Z","iopub.status.idle":"2025-06-25T20:16:54.829912Z","shell.execute_reply":"2025-06-25T20:16:54.829310Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"plot(\n    comp.getParameter(\"DBZH\")\n    .getQualityFieldByHowTask(\"pl.imgw.quality.qi_total\")\n    .getData(),\n    \"binary\",\n    \"Total quality index\",\n)","key":"iMQqikxtYn"},{"type":"output","id":"lqiZsU-zUszmf029voEEJ","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"eeca0a2597247b0a2c45675dda27d395","path":"/ams2025/_preview/2/build/eeca0a2597247b0a2c45675dda27d395.png"},"text/plain":{"content":"<Figure size 2000x1600 with 2 Axes>","content_type":"text/plain"}}}],"key":"eMcdGSSuOf"}],"key":"fAMCwtKafT"}],"key":"KcJBIIJkQf"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Parallel processing","url":"/baltrad-parallel-processing","group":"BALTRAD"},"next":{"title":"Rain Rate retrieval with Py-ART","url":"/baltrad-pyart-rain-rate-example","group":"BALTRAD"}}},"domain":"http://localhost:3000"}