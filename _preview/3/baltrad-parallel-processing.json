{"version":1,"kind":"Notebook","sha256":"3169706ea0fbf7448f9a7e12ad130289f51ee9d60314f8550b7b36aac322c46f","slug":"baltrad-parallel-processing","location":"/notebooks/baltrad/baltrad_short_course/3_BALTRAD_parallel_processing.ipynb","dependencies":[],"frontmatter":{"title":"Parallel processing","content_includes_title":false,"authors":[{"nameParsed":{"literal":"Alfonso Ladino","given":"Alfonso","family":"Ladino"},"name":"Alfonso Ladino","orcid":"0000-0001-8081-7827","github":"aladinor","id":"contributors-myst-generated-uid-0"},{"nameParsed":{"literal":"Anna del Moral Méndez","given":"Anna","non_dropping_particle":"del","family":"Moral Méndez"},"name":"Anna del Moral Méndez","orcid":"0000-0002-5015-840X","id":"contributors-myst-generated-uid-1"},{"nameParsed":{"literal":"Brenda Javornik","given":"Brenda","family":"Javornik"},"name":"Brenda Javornik","orcid":"0009-0004-9266-9293","github":"leavesntwigs","id":"contributors-myst-generated-uid-2"},{"nameParsed":{"literal":"Daniel Michelson","given":"Daniel","family":"Michelson"},"name":"Daniel Michelson","orcid":"0000-0003-3222-9881","github":"DanielMichelson","id":"contributors-myst-generated-uid-3"},{"nameParsed":{"literal":"Daniel Wolfensberger","given":"Daniel","family":"Wolfensberger"},"name":"Daniel Wolfensberger","orcid":"0009-0006-1419-0556","github":"wolfidan","id":"contributors-myst-generated-uid-4"},{"nameParsed":{"literal":"Gionata Ghiggi","given":"Gionata","family":"Ghiggi"},"name":"Gionata Ghiggi","orcid":"0000-0002-0818-0865","github":"ghiggi","id":"contributors-myst-generated-uid-5"},{"nameParsed":{"literal":"Jen DeHart","given":"Jen","family":"DeHart"},"name":"Jen DeHart","orcid":"0000-0001-8536-4927","github":"jcdehart","id":"contributors-myst-generated-uid-6"},{"nameParsed":{"literal":"Jordi Figueras i Ventura","given":"Jordi Figueras","non_dropping_particle":"i","family":"Ventura"},"name":"Jordi Figueras i Ventura","orcid":"0000-0002-4949-422X","github":"jfigui","id":"contributors-myst-generated-uid-7"},{"nameParsed":{"literal":"Julian Giles","given":"Julian","family":"Giles"},"name":"Julian Giles","orcid":"0000-0001-8134-008X","github":"JulianGiles","id":"contributors-myst-generated-uid-8"},{"nameParsed":{"literal":"Kai Mühlbauer","given":"Kai","family":"Mühlbauer"},"name":"Kai Mühlbauer","orcid":"0000-0001-6599-1034","github":"kmuehlbauer","id":"contributors-myst-generated-uid-9"},{"nameParsed":{"literal":"Maxwell Grover","given":"Maxwell","family":"Grover"},"name":"Maxwell Grover","orcid":"0000-0002-0370-8974","github":"mgrover1","id":"contributors-myst-generated-uid-10"},{"nameParsed":{"literal":"Mike Dixon","given":"Mike","family":"Dixon"},"name":"Mike Dixon","orcid":"0000-0002-9597-9113","github":"mike-dixon","id":"contributors-myst-generated-uid-11"},{"nameParsed":{"literal":"Robert Jackson","given":"Robert","family":"Jackson"},"name":"Robert Jackson","orcid":"0000-0003-2518-1234","github":"rcjackson","id":"contributors-myst-generated-uid-12"},{"nameParsed":{"literal":"Scott Collis","given":"Scott","family":"Collis"},"name":"Scott Collis","orcid":"0000-0002-2303-687X","github":"scollis","id":"contributors-myst-generated-uid-13"},{"nameParsed":{"literal":"Ting-Yu Cha","given":"Ting-Yu","family":"Cha"},"name":"Ting-Yu Cha","orcid":"0000-0002-6292-8483","github":"tingyucha","id":"contributors-myst-generated-uid-14"}],"open_access":true,"license":{"content":{"id":"Apache-2.0","url":"https://opensource.org/licenses/Apache-2.0","name":"Apache License 2.0","free":true,"osi":true},"code":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true}},"github":"https://github.com/openradar/erad2024","copyright":"2024","abbreviations":{"ARM":"Atmospheric Radiation Measurement","NCAR":"National Center for Atmospheric Research"},"settings":{"output_matplotlib_strings":"remove"},"numbering":{"title":{"offset":2}},"exports":[{"format":"ipynb","filename":"3_BALTRAD_parallel_processing.ipynb","url":"/ams2025/_preview/3/build/3_BALTRAD_parallel_p-4ea45fc7a4d5e0fa2b6b21f3a4d3da86.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"The default VM setup is to use a single CPU core. In order to demonstrate the power of parallel processing, you must first determine whether your physical hardware has more than a single core.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"gcmsj3hsPO"}],"key":"OkLzH8Hidp"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"On Linux this is done in the terminal with the ‘nproc’ command.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"CbOm6qKjNx"}],"key":"un1g9Aspuj"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"On Mac this is done in the terminal with the ‘sysctl -n hw.ncpu’ command.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"RjmHg62cHC"}],"key":"wczG68gVT8"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"On Windows this is done graphically using the Task Manager’s Performance tab.","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"oGfEr5lvfC"}],"key":"aOHbKu0mXx"},{"type":"paragraph","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"We want tune our VM to harness the power of several CPUs. Follow the following steps:","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"uGEXJerYwb"}],"key":"mpiCwe2Ej2"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":11,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"Shut down the IPython notebook Server (Ctrl-C, answer yes)","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"pYumCETWqq"}],"key":"gVX2pX2jwR"},{"type":"listItem","spread":true,"position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"Shutdown the VM (click the X button in the VM window, choose power down the machine)","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"coLovQ9cz4"}],"key":"L0ZmFz3NMU"},{"type":"listItem","spread":true,"position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"Select the VM in the VirtualBox Manager Window, from the menu choose Machine->Setting","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"o93TcYxqju"}],"key":"uaueOYAK8m"},{"type":"listItem","spread":true,"position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"Choose the System Tab, then Processor, use the slider to set the number of Processor to 2, 4, or 8 depending on your system resources.","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"q1tjn3FcEP"}],"key":"pXY5cEktEv"},{"type":"listItem","spread":true,"position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"Click Ok, and then start the machine","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"LnLSklBl6O"}],"key":"t4q9BraErf"},{"type":"listItem","spread":true,"position":{"start":{"line":16,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"text","value":"Login, use the start_notebook.sh script to start the IPython server, start the notebook and you should have multiple processors!","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"q1sFxjBwja"}],"key":"Lm2YPJ35gj"}],"key":"K1HPqnZjBJ"},{"type":"paragraph","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"text","value":"RELOAD THIS PAGE!","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"key":"BM3Nkgq7SV"}],"key":"fFS3ZEdKnW"}],"key":"In6gR0wbaz"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"retrieve data from s3 bucket","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"wHrLSPR3Gw"}],"identifier":"retrieve-data-from-s3-bucket","label":"retrieve data from s3 bucket","html_id":"retrieve-data-from-s3-bucket","implicit":true,"key":"LFabFo44kX"}],"key":"H7hUpig0A7"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-06-25T20:12:47.380758Z","iopub.status.busy":"2025-06-25T20:12:47.380374Z","iopub.status.idle":"2025-06-25T20:12:50.161733Z","shell.execute_reply":"2025-06-25T20:12:50.161095Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"import os\nimport urllib.request\nfrom pathlib import Path\n\n# Set the URL for the cloud\nURL = \"https://js2.jetstream-cloud.org:8001/\"\npath = \"pythia/radar/erad2024/baltrad/baltrad_short_course/\"\n!mkdir -p data\nfiles = [\n    \"seang.h5\",\n    \"searl.h5\",\n    \"sease.h5\",\n    \"sehud.h5\",\n    \"sekir.h5\",\n    \"sekkr.h5\",\n    \"selek.h5\",\n    \"selul.h5\",\n    \"seosu.h5\",\n    \"sevar.h5\",\n    \"sevil.h5\",\n]\nfor file in files:\n    file0 = os.path.join(path, file)\n    name = os.path.join(\"data\", Path(file).name)\n    if not os.path.exists(name):\n        print(f\"downloading, {name}\")\n        urllib.request.urlretrieve(\n            f\"{URL}{file0}\", os.path.join(\"data\", Path(file).name)\n        )","key":"eRAbuAlrdF"},{"type":"output","id":"nAdc_v8GmOlAlFiCCd41O","data":[{"name":"stdout","output_type":"stream","text":"downloading, data/seang.h5\n"},{"name":"stdout","output_type":"stream","text":"downloading, data/searl.h5\n"},{"name":"stdout","output_type":"stream","text":"downloading, data/sease.h5\n"},{"name":"stdout","output_type":"stream","text":"downloading, data/sehud.h5\n"},{"name":"stdout","output_type":"stream","text":"downloading, data/sekkr.h5\n"},{"name":"stdout","output_type":"stream","text":"downloading, data/selek.h5\n"},{"name":"stdout","output_type":"stream","text":"downloading, data/selul.h5\n"},{"name":"stdout","output_type":"stream","text":"downloading, data/seosu.h5\n"},{"name":"stdout","output_type":"stream","text":"downloading, data/sevar.h5\ndownloading, data/sevil.h5\n"}],"key":"u4q4RC2MIu"}],"key":"wbHx8C8Cn6"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Verify from Python the number of CPU cores at our disposal","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"DR1pw9XZDt"}],"identifier":"verify-from-python-the-number-of-cpu-cores-at-our-disposal","label":"Verify from Python the number of CPU cores at our disposal","html_id":"verify-from-python-the-number-of-cpu-cores-at-our-disposal","implicit":true,"key":"U5govRZSNM"}],"key":"y5C2FZiVhy"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-06-25T20:12:50.164601Z","iopub.status.busy":"2025-06-25T20:12:50.164417Z","iopub.status.idle":"2025-06-25T20:12:50.169856Z","shell.execute_reply":"2025-06-25T20:12:50.169328Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"import multiprocessing\n\nprint(\"We have %i cores to play with!\" % multiprocessing.cpu_count())","key":"rHSvu9XIUy"},{"type":"output","id":"aO3gS1AOucQTrMqUodjjC","data":[{"name":"stdout","output_type":"stream","text":"We have 4 cores to play with!\n"}],"key":"RFLCXthqjO"}],"key":"ufD4CqQ3w4"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Yay! Now we’re going to set up some rudimentary functionality that will allow us to distribute a processing load among our cores.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"T2EXVCXeFc"}],"key":"RHtQtgUN9q"}],"key":"CQl4m4sPa3"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define a generator","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"yD7CpQWxGL"}],"identifier":"define-a-generator","label":"Define a generator","html_id":"define-a-generator","implicit":true,"key":"n9HHN6CvpT"}],"key":"I8lxbtEBtu"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-06-25T20:12:50.172019Z","iopub.status.busy":"2025-06-25T20:12:50.171828Z","iopub.status.idle":"2025-06-25T20:12:50.253201Z","shell.execute_reply":"2025-06-25T20:12:50.252682Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"import os\nimport _raveio, odc_polarQC\n\n# Specify the processing chain\nodc_polarQC.algorithm_ids = [\n    \"ropo\",\n    \"beamb\",\n    \"radvol-att\",\n    \"radvol-broad\",\n    \"rave-overshooting\",\n    \"qi-total\",\n]\n\n\n# Run processing chain on a single file. Return an output file string.\ndef generate(file_string):\n    rio = _raveio.open(file_string)\n\n    pvol = rio.object\n    pvol = odc_polarQC.QC(pvol)\n    rio.object = pvol\n\n    # Derive an output file name\n    path, fstr = os.path.split(file_string)\n    ofstr = os.path.join(path, \"qc_\" + fstr)\n\n    rio.save(ofstr)\n    return ofstr","key":"sjRFqHwX8k"},{"type":"output","id":"t-4_l6FckJ-tLu1KDs7JC","data":[],"key":"DMEBbTqTwF"}],"key":"PxxhT2mGYB"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Feed the generator, sequentially","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"UpDqLmO3zt"}],"identifier":"feed-the-generator-sequentially","label":"Feed the generator, sequentially","html_id":"feed-the-generator-sequentially","implicit":true,"key":"PO0rhq4IFY"}],"key":"DPDfitDs61"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-06-25T20:12:50.255782Z","iopub.status.busy":"2025-06-25T20:12:50.255323Z","iopub.status.idle":"2025-06-25T20:13:42.219098Z","shell.execute_reply":"2025-06-25T20:13:42.218545Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"import glob, time\n\nifstrs = glob.glob(\"data/se*.h5\")\nbefore = time.time()\nfor fstr in ifstrs:\n    print(fstr, generate(fstr))\nafter = time.time()\n\nprint(\"Processing time: %3.2f seconds\" % (after - before))","key":"aTCpyJewLo"},{"type":"output","id":"eEzA26fGIVyPFpfdIvNnM","data":[{"name":"stdout","output_type":"stream","text":"data/seang.h5 data/qc_seang.h5\n"},{"name":"stdout","output_type":"stream","text":"data/sease.h5 data/qc_sease.h5\n"},{"name":"stdout","output_type":"stream","text":"data/sekkr.h5 data/qc_sekkr.h5\n"},{"name":"stdout","output_type":"stream","text":"data/sekir.h5 data/qc_sekir.h5\n"},{"name":"stdout","output_type":"stream","text":"data/sevar.h5 data/qc_sevar.h5\n"},{"name":"stdout","output_type":"stream","text":"data/sehud.h5 data/qc_sehud.h5\n"},{"name":"stdout","output_type":"stream","text":"data/seosu.h5 data/qc_seosu.h5\n"},{"name":"stdout","output_type":"stream","text":"data/searl.h5 data/qc_searl.h5\n"},{"name":"stdout","output_type":"stream","text":"data/selul.h5 data/qc_selul.h5\n"},{"name":"stdout","output_type":"stream","text":"data/selek.h5 data/qc_selek.h5\n"},{"name":"stdout","output_type":"stream","text":"data/sevil.h5 data/qc_sevil.h5\nProcessing time: 51.96 seconds\n"}],"key":"t5R1kZ9qtk"}],"key":"d70g8neSS1"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Mental note: repeat once!","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"LnzRQp6LAU"}],"key":"mue0t9UKlR"}],"key":"fwPJ58vSHW"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Multiprocess the generator","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Ff1Al3P7lh"}],"identifier":"multiprocess-the-generator","label":"Multiprocess the generator","html_id":"multiprocess-the-generator","implicit":true,"key":"rB4b8RapyS"}],"key":"zc5mykwO7R"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-06-25T20:13:42.221493Z","iopub.status.busy":"2025-06-25T20:13:42.221103Z","iopub.status.idle":"2025-06-25T20:13:42.224667Z","shell.execute_reply":"2025-06-25T20:13:42.224217Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Both input and output are a list of file strings\ndef multi_generate(fstrs, procs=None):\n    pool = multiprocessing.Pool(\n        procs\n    )  # Pool of processors. Defaults to all available logical cores\n\n    results = []\n    # chunksize=1 means feed a process a new job as soon as the process is idle.\n    # In our case, this restricts the queue to one \"dispatcher\" which is faster.\n    r = pool.map_async(generate, fstrs, chunksize=1, callback=results.append)\n    r.wait()\n\n    return results[0]","key":"hmyiaJwR5N"},{"type":"output","id":"bPw1FWBhKaVbb_sIbDMZg","data":[],"key":"zsTRLh7KMi"}],"key":"enwTuIPs7I"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Feed the monster, asynchronously!","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"tAWd92wRHl"}],"identifier":"feed-the-monster-asynchronously","label":"Feed the monster, asynchronously!","html_id":"feed-the-monster-asynchronously","implicit":true,"key":"CSkELP5Bj0"}],"key":"sUfhDhQrQY"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-06-25T20:13:42.226596Z","iopub.status.busy":"2025-06-25T20:13:42.226259Z","iopub.status.idle":"2025-06-25T20:13:45.828968Z","shell.execute_reply":"2025-06-25T20:13:45.828295Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"before = time.time()\nofstrs = multi_generate(ifstrs)\nafter = time.time()\n\nprint(\"Processing time: %3.2f seconds\" % (after - before))","key":"TGwqcchJJK"},{"type":"output","id":"qymt8ze7_F0bIpSQfWC0f","data":[{"name":"stdout","output_type":"stream","text":"Processing time: 3.60 seconds\n"}],"key":"O08nK3FRs0"}],"key":"MAWCmK9adO"}],"key":"HlDRSZKRp5"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Quality Control using DR","url":"/baltrad-drqc","group":"BALTRAD"},"next":{"title":"Compositing","url":"/baltrad-compositing","group":"BALTRAD"}}},"domain":"http://localhost:3000"}