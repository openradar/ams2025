{"version":1,"kind":"Notebook","sha256":"d4d66aeab892c3d90272c8a621829226b9fc61566080a488819e4e9ee4b102e4","slug":"wradlib-clutter-beamblockage","location":"/notebooks/wradlib/wradlib_clutter_beamblockage.ipynb","dependencies":[],"frontmatter":{"title":"wradlib - clutter and beamblockage","content_includes_title":true,"authors":[{"nameParsed":{"literal":"Alfonso Ladino","given":"Alfonso","family":"Ladino"},"name":"Alfonso Ladino","orcid":"0000-0001-8081-7827","github":"aladinor","id":"contributors-myst-generated-uid-0"},{"nameParsed":{"literal":"Anna del Moral Méndez","given":"Anna","non_dropping_particle":"del","family":"Moral Méndez"},"name":"Anna del Moral Méndez","orcid":"0000-0002-5015-840X","id":"contributors-myst-generated-uid-1"},{"nameParsed":{"literal":"Brenda Javornik","given":"Brenda","family":"Javornik"},"name":"Brenda Javornik","orcid":"0009-0004-9266-9293","github":"leavesntwigs","id":"contributors-myst-generated-uid-2"},{"nameParsed":{"literal":"Daniel Michelson","given":"Daniel","family":"Michelson"},"name":"Daniel Michelson","orcid":"0000-0003-3222-9881","github":"DanielMichelson","id":"contributors-myst-generated-uid-3"},{"nameParsed":{"literal":"Daniel Wolfensberger","given":"Daniel","family":"Wolfensberger"},"name":"Daniel Wolfensberger","orcid":"0009-0006-1419-0556","github":"wolfidan","id":"contributors-myst-generated-uid-4"},{"nameParsed":{"literal":"Gionata Ghiggi","given":"Gionata","family":"Ghiggi"},"name":"Gionata Ghiggi","orcid":"0000-0002-0818-0865","github":"ghiggi","id":"contributors-myst-generated-uid-5"},{"nameParsed":{"literal":"Jen DeHart","given":"Jen","family":"DeHart"},"name":"Jen DeHart","orcid":"0000-0001-8536-4927","github":"jcdehart","id":"contributors-myst-generated-uid-6"},{"nameParsed":{"literal":"Jordi Figueras i Ventura","given":"Jordi Figueras","non_dropping_particle":"i","family":"Ventura"},"name":"Jordi Figueras i Ventura","orcid":"0000-0002-4949-422X","github":"jfigui","id":"contributors-myst-generated-uid-7"},{"nameParsed":{"literal":"Julian Giles","given":"Julian","family":"Giles"},"name":"Julian Giles","orcid":"0000-0001-8134-008X","github":"JulianGiles","id":"contributors-myst-generated-uid-8"},{"nameParsed":{"literal":"Kai Mühlbauer","given":"Kai","family":"Mühlbauer"},"name":"Kai Mühlbauer","orcid":"0000-0001-6599-1034","github":"kmuehlbauer","id":"contributors-myst-generated-uid-9"},{"nameParsed":{"literal":"Maxwell Grover","given":"Maxwell","family":"Grover"},"name":"Maxwell Grover","orcid":"0000-0002-0370-8974","github":"mgrover1","id":"contributors-myst-generated-uid-10"},{"nameParsed":{"literal":"Mike Dixon","given":"Mike","family":"Dixon"},"name":"Mike Dixon","orcid":"0000-0002-9597-9113","github":"mike-dixon","id":"contributors-myst-generated-uid-11"},{"nameParsed":{"literal":"Robert Jackson","given":"Robert","family":"Jackson"},"name":"Robert Jackson","orcid":"0000-0003-2518-1234","github":"rcjackson","id":"contributors-myst-generated-uid-12"},{"nameParsed":{"literal":"Scott Collis","given":"Scott","family":"Collis"},"name":"Scott Collis","orcid":"0000-0002-2303-687X","github":"scollis","id":"contributors-myst-generated-uid-13"},{"nameParsed":{"literal":"Ting-Yu Cha","given":"Ting-Yu","family":"Cha"},"name":"Ting-Yu Cha","orcid":"0000-0002-6292-8483","github":"tingyucha","id":"contributors-myst-generated-uid-14"}],"open_access":true,"license":{"content":{"id":"Apache-2.0","url":"https://opensource.org/licenses/Apache-2.0","name":"Apache License 2.0","free":true,"osi":true},"code":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true}},"github":"https://github.com/openradar/erad2024","copyright":"2024","abbreviations":{"ARM":"Atmospheric Radiation Measurement","NCAR":"National Center for Atmospheric Research"},"settings":{"output_matplotlib_strings":"remove"},"numbering":{"title":{"offset":2}},"thumbnail":"/ams2025/_preview/3/build/wradlib_logo.svg-9d64bc05eaa340253b6a491c27223091.png","exports":[{"format":"ipynb","filename":"wradlib_clutter_beamblockage.ipynb","url":"/ams2025/_preview/3/build/wradlib_clutter_beam-1c1d44133a2a984c94ce01ebcdeb050b.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"image","url":"/ams2025/_preview/3/build/wradlib_logo.svg-9d64bc05eaa340253b6a491c27223091.png","alt":"wradlib logo png","key":"i2nAtqro3s","urlSource":"../images/logos/wradlib_logo.svg.png"}],"key":"hEJ9ZfAL2z"}],"key":"ALXZ5aN26w"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":1,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"wradlib - clutter and beamblockage","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"qAvtnZarES"}],"identifier":"wradlib-clutter-and-beamblockage","label":"wradlib - clutter and beamblockage","html_id":"wradlib-clutter-and-beamblockage","implicit":true,"key":"Z5T4CJiGRD"}],"key":"HDlulHw950"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"thematicBreak","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"vFQlQ0HCJC"}],"key":"WmlFNTlrYU"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Overview","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"xoAfyjhHWH"}],"identifier":"overview","label":"Overview","html_id":"overview","implicit":true,"key":"OnqPR9Lkh0"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Within this notebook, we will cover:","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"W3fHMnCCGA"}],"key":"FUi1sjrBq1"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":5,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Reading data using xradar","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Ej4ABRcnag"}],"key":"VY5dcTCNK1"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Clutter detection","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"RKUoPpKg9X"}],"key":"OoOdS2ZbeJ"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Beam Blockage calculation","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"tvGQitroNE"}],"key":"NR5vLr1v0G"}],"key":"JMw3lXDWuf"}],"key":"wHMlFvsmej"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Prerequisites","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"uOzDhrikBQ"}],"identifier":"prerequisites","label":"Prerequisites","html_id":"prerequisites","implicit":true,"key":"B94Gcy3Gwn"},{"type":"table","position":{"start":{"line":3,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"tableRow","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"tableCell","header":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Concepts","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Rjga6h1CoQ"}],"key":"q9ksixQoZK"},{"type":"tableCell","header":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Importance","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"DRAPKAVOx0"}],"key":"JlX64Y3Nps"},{"type":"tableCell","header":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Notes","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"hQixDXeLMH"}],"key":"z56SML5jWI"}],"key":"t1mOFfjEr0"},{"type":"tableRow","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"link","url":"https://tutorial.xarray.dev/intro.html","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Xarray Basics","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"rLNJ7Ingqx"}],"urlSource":"https://tutorial.xarray.dev/intro.html","key":"xGD2AaUGHw"}],"key":"qPlYBYP12c"},{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Helpful","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"omXAEb578m"}],"key":"nnVSezVsLN"},{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Basic Dataset/DataArray","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"PwG1ci7urY"}],"key":"hVmwLHtspj"}],"key":"f8pqL2UaMm"},{"type":"tableRow","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"link","url":"https://foundations.projectpythia.org/core/matplotlib/matplotlib-basics.html","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Matplotlib Basics","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"ywS1GYjSaj"}],"urlSource":"https://foundations.projectpythia.org/core/matplotlib/matplotlib-basics.html","key":"w1c8ICMasR"}],"key":"Dy5WWEhtFC"},{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Helpful","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"V2uUAQ0IuQ"}],"key":"YFm45jqxZX"},{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Basic Plotting","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"uJb3wlwSMM"}],"key":"HKmK9w89ZZ"}],"key":"G2AT51LP7d"},{"type":"tableRow","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"link","url":"https://foundations.projectpythia.org/core/cartopy/cartopy.html","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Intro to Cartopy","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"Fi9cpt3zb9"}],"urlSource":"https://foundations.projectpythia.org/core/cartopy/cartopy.html","key":"nZAmrPxCvb"}],"key":"JPOcASee5q"},{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Helpful","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"hVZKb9Sn5x"}],"key":"mlgiQWE2xe"},{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Projections","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"rvKEwXGE5z"}],"key":"acXW3a0SuI"}],"key":"raOe9slyS5"}],"key":"dlCmoHiq7T"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"strong","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Time to learn","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"oiEFv8k2tl"}],"key":"iLVammIjdX"},{"type":"text","value":": 10 minutes","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"GBmfPY8kMy"}],"key":"t5F91fOP5d"}],"key":"xroHjhabzs"}],"key":"zhZ9DZwhgS"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"thematicBreak","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"BjtpA2Vjaq"}],"key":"pj6ilxxbM0"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Imports","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"PsRj7QswaX"}],"identifier":"imports","label":"Imports","html_id":"imports","implicit":true,"key":"LaLMB8XZ1k"}],"key":"YQz0U085Yr"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-06-25T20:15:19.801233Z","iopub.status.busy":"2025-06-25T20:15:19.800849Z","iopub.status.idle":"2025-06-25T20:15:24.187713Z","shell.execute_reply":"2025-06-25T20:15:24.187161Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"import numpy as np\nimport wradlib as wrl\nimport matplotlib.pyplot as plt\nimport xarray as xr\nimport cartopy\nimport cartopy.crs as ccrs\nimport cartopy.feature as cfeature\nimport xradar as xd\nimport hvplot\nimport hvplot.xarray","key":"YqtqpAfOZo"},{"type":"output","id":"pp_CMLzuL3IyNgyJn33uT","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<script type=\"esms-options\">{\"shimMode\": true}</script><style>*[data-root-id],\n*[data-root-id] > * {\n  box-sizing: border-box;\n  font-family: var(--jp-ui-font-family);\n  font-size: var(--jp-ui-font-size1);\n  color: var(--vscode-editor-foreground, var(--jp-ui-font-color1));\n}\n\n/* Override VSCode background color */\n.cell-output-ipywidget-background:has(\n    > .cell-output-ipywidget-background > .lm-Widget > *[data-root-id]\n  ),\n.cell-output-ipywidget-background:has(> .lm-Widget > *[data-root-id]) {\n  background-color: transparent !important;\n}\n</style>","content_type":"text/html"}}},{"output_type":"display_data","metadata":{},"data":{"application/javascript":{"content":"(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  const force = true;\n  const py_version = '3.7.2'.replace('rc', '-rc.').replace('.dev', '-dev.');\n  const reloading = false;\n  const Bokeh = root.Bokeh;\n\n  // Set a timeout for this load but only if we are not already initializing\n  if (typeof (root._bokeh_timeout) === \"undefined\" || (force || !root._bokeh_is_initializing)) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks;\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, js_modules, js_exports, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n    if (js_modules == null) js_modules = [];\n    if (js_exports == null) js_exports = {};\n\n    root._bokeh_onload_callbacks.push(callback);\n\n    if (root._bokeh_is_loading > 0) {\n      // Don't load bokeh if it is still initializing\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    } else if (js_urls.length === 0 && js_modules.length === 0 && Object.keys(js_exports).length === 0) {\n      // There is nothing to load\n      run_callbacks();\n      return null;\n    }\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n    window._bokeh_on_load = on_load\n\n    function on_error(e) {\n      const src_el = e.srcElement\n      console.error(\"failed to load \" + (src_el.href || src_el.src));\n    }\n\n    const skip = [];\n    if (window.requirejs) {\n      window.requirejs.config({'packages': {}, 'paths': {}, 'shim': {}});\n      root._bokeh_is_loading = css_urls.length + 0;\n    } else {\n      root._bokeh_is_loading = css_urls.length + js_urls.length + js_modules.length + Object.keys(js_exports).length;\n    }\n\n    const existing_stylesheets = []\n    const links = document.getElementsByTagName('link')\n    for (let i = 0; i < links.length; i++) {\n      const link = links[i]\n      if (link.href != null) {\n        existing_stylesheets.push(link.href)\n      }\n    }\n    for (let i = 0; i < css_urls.length; i++) {\n      const url = css_urls[i];\n      const escaped = encodeURI(url)\n      if (existing_stylesheets.indexOf(escaped) !== -1) {\n        on_load()\n        continue;\n      }\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error;\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }    var existing_scripts = []\n    const scripts = document.getElementsByTagName('script')\n    for (let i = 0; i < scripts.length; i++) {\n      var script = scripts[i]\n      if (script.src != null) {\n        existing_scripts.push(script.src)\n      }\n    }\n    for (let i = 0; i < js_urls.length; i++) {\n      const url = js_urls[i];\n      const escaped = encodeURI(url)\n      if (skip.indexOf(escaped) !== -1 || existing_scripts.indexOf(escaped) !== -1) {\n        if (!window.requirejs) {\n          on_load();\n        }\n        continue;\n      }\n      const element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error;\n      element.async = false;\n      element.src = url;\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n    for (let i = 0; i < js_modules.length; i++) {\n      const url = js_modules[i];\n      const escaped = encodeURI(url)\n      if (skip.indexOf(escaped) !== -1 || existing_scripts.indexOf(escaped) !== -1) {\n        if (!window.requirejs) {\n          on_load();\n        }\n        continue;\n      }\n      var element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error;\n      element.async = false;\n      element.src = url;\n      element.type = \"module\";\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n    for (const name in js_exports) {\n      const url = js_exports[name];\n      const escaped = encodeURI(url)\n      if (skip.indexOf(escaped) >= 0 || root[name] != null) {\n        if (!window.requirejs) {\n          on_load();\n        }\n        continue;\n      }\n      var element = document.createElement('script');\n      element.onerror = on_error;\n      element.async = false;\n      element.type = \"module\";\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      element.textContent = `\n      import ${name} from \"${url}\"\n      window.${name} = ${name}\n      window._bokeh_on_load()\n      `\n      document.head.appendChild(element);\n    }\n    if (!js_urls.length && !js_modules.length) {\n      on_load()\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  const js_urls = [\"https://cdn.holoviz.org/panel/1.6.2/dist/bundled/reactiveesm/es-module-shims@^1.10.0/dist/es-module-shims.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-3.7.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-gl-3.7.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-3.7.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-3.7.2.min.js\", \"https://cdn.holoviz.org/panel/1.6.2/dist/panel.min.js\"];\n  const js_modules = [];\n  const js_exports = {};\n  const css_urls = [];\n  const inline_js = [    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\nfunction(Bokeh) {} // ensure no trailing comma for IE\n  ];\n\n  function run_inline_js() {\n    if ((root.Bokeh !== undefined) || (force === true)) {\n      for (let i = 0; i < inline_js.length; i++) {\n        try {\n          inline_js[i].call(root, root.Bokeh);\n        } catch(e) {\n          if (!reloading) {\n            throw e;\n          }\n        }\n      }\n      // Cache old bokeh versions\n      if (Bokeh != undefined && !reloading) {\n        var NewBokeh = root.Bokeh;\n        if (Bokeh.versions === undefined) {\n          Bokeh.versions = new Map();\n        }\n        if (NewBokeh.version !== Bokeh.version) {\n          Bokeh.versions.set(NewBokeh.version, NewBokeh)\n        }\n        root.Bokeh = Bokeh;\n      }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    }\n    root._bokeh_is_initializing = false\n  }\n\n  function load_or_wait() {\n    // Implement a backoff loop that tries to ensure we do not load multiple\n    // versions of Bokeh and its dependencies at the same time.\n    // In recent versions we use the root._bokeh_is_initializing flag\n    // to determine whether there is an ongoing attempt to initialize\n    // bokeh, however for backward compatibility we also try to ensure\n    // that we do not start loading a newer (Panel>=1.0 and Bokeh>3) version\n    // before older versions are fully initialized.\n    if (root._bokeh_is_initializing && Date.now() > root._bokeh_timeout) {\n      // If the timeout and bokeh was not successfully loaded we reset\n      // everything and try loading again\n      root._bokeh_timeout = Date.now() + 5000;\n      root._bokeh_is_initializing = false;\n      root._bokeh_onload_callbacks = undefined;\n      root._bokeh_is_loading = 0\n      console.log(\"Bokeh: BokehJS was loaded multiple times but one version failed to initialize.\");\n      load_or_wait();\n    } else if (root._bokeh_is_initializing || (typeof root._bokeh_is_initializing === \"undefined\" && root._bokeh_onload_callbacks !== undefined)) {\n      setTimeout(load_or_wait, 100);\n    } else {\n      root._bokeh_is_initializing = true\n      root._bokeh_onload_callbacks = []\n      const bokeh_loaded = root.Bokeh != null && (root.Bokeh.version === py_version || (root.Bokeh.versions !== undefined && root.Bokeh.versions.has(py_version)));\n      if (!reloading && !bokeh_loaded) {\n        if (root.Bokeh) {\n          root.Bokeh = undefined;\n        }\n        console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n      }\n      load_libs(css_urls, js_urls, js_modules, js_exports, function() {\n        console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n        run_inline_js();\n      });\n    }\n  }\n  // Give older versions of the autoload script a head-start to ensure\n  // they initialize before we start loading newer version.\n  setTimeout(load_or_wait, 100)\n}(window));","content_type":"application/javascript"},"application/vnd.holoviews_load.v0+json":{"content":"(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  const force = true;\n  const py_version = '3.7.2'.replace('rc', '-rc.').replace('.dev', '-dev.');\n  const reloading = false;\n  const Bokeh = root.Bokeh;\n\n  // Set a timeout for this load but only if we are not already initializing\n  if (typeof (root._bokeh_timeout) === \"undefined\" || (force || !root._bokeh_is_initializing)) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks;\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, js_modules, js_exports, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n    if (js_modules == null) js_modules = [];\n    if (js_exports == null) js_exports = {};\n\n    root._bokeh_onload_callbacks.push(callback);\n\n    if (root._bokeh_is_loading > 0) {\n      // Don't load bokeh if it is still initializing\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    } else if (js_urls.length === 0 && js_modules.length === 0 && Object.keys(js_exports).length === 0) {\n      // There is nothing to load\n      run_callbacks();\n      return null;\n    }\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n    window._bokeh_on_load = on_load\n\n    function on_error(e) {\n      const src_el = e.srcElement\n      console.error(\"failed to load \" + (src_el.href || src_el.src));\n    }\n\n    const skip = [];\n    if (window.requirejs) {\n      window.requirejs.config({'packages': {}, 'paths': {}, 'shim': {}});\n      root._bokeh_is_loading = css_urls.length + 0;\n    } else {\n      root._bokeh_is_loading = css_urls.length + js_urls.length + js_modules.length + Object.keys(js_exports).length;\n    }\n\n    const existing_stylesheets = []\n    const links = document.getElementsByTagName('link')\n    for (let i = 0; i < links.length; i++) {\n      const link = links[i]\n      if (link.href != null) {\n        existing_stylesheets.push(link.href)\n      }\n    }\n    for (let i = 0; i < css_urls.length; i++) {\n      const url = css_urls[i];\n      const escaped = encodeURI(url)\n      if (existing_stylesheets.indexOf(escaped) !== -1) {\n        on_load()\n        continue;\n      }\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error;\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }    var existing_scripts = []\n    const scripts = document.getElementsByTagName('script')\n    for (let i = 0; i < scripts.length; i++) {\n      var script = scripts[i]\n      if (script.src != null) {\n        existing_scripts.push(script.src)\n      }\n    }\n    for (let i = 0; i < js_urls.length; i++) {\n      const url = js_urls[i];\n      const escaped = encodeURI(url)\n      if (skip.indexOf(escaped) !== -1 || existing_scripts.indexOf(escaped) !== -1) {\n        if (!window.requirejs) {\n          on_load();\n        }\n        continue;\n      }\n      const element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error;\n      element.async = false;\n      element.src = url;\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n    for (let i = 0; i < js_modules.length; i++) {\n      const url = js_modules[i];\n      const escaped = encodeURI(url)\n      if (skip.indexOf(escaped) !== -1 || existing_scripts.indexOf(escaped) !== -1) {\n        if (!window.requirejs) {\n          on_load();\n        }\n        continue;\n      }\n      var element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error;\n      element.async = false;\n      element.src = url;\n      element.type = \"module\";\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n    for (const name in js_exports) {\n      const url = js_exports[name];\n      const escaped = encodeURI(url)\n      if (skip.indexOf(escaped) >= 0 || root[name] != null) {\n        if (!window.requirejs) {\n          on_load();\n        }\n        continue;\n      }\n      var element = document.createElement('script');\n      element.onerror = on_error;\n      element.async = false;\n      element.type = \"module\";\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      element.textContent = `\n      import ${name} from \"${url}\"\n      window.${name} = ${name}\n      window._bokeh_on_load()\n      `\n      document.head.appendChild(element);\n    }\n    if (!js_urls.length && !js_modules.length) {\n      on_load()\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  const js_urls = [\"https://cdn.holoviz.org/panel/1.6.2/dist/bundled/reactiveesm/es-module-shims@^1.10.0/dist/es-module-shims.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-3.7.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-gl-3.7.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-3.7.2.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-3.7.2.min.js\", \"https://cdn.holoviz.org/panel/1.6.2/dist/panel.min.js\"];\n  const js_modules = [];\n  const js_exports = {};\n  const css_urls = [];\n  const inline_js = [    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\nfunction(Bokeh) {} // ensure no trailing comma for IE\n  ];\n\n  function run_inline_js() {\n    if ((root.Bokeh !== undefined) || (force === true)) {\n      for (let i = 0; i < inline_js.length; i++) {\n        try {\n          inline_js[i].call(root, root.Bokeh);\n        } catch(e) {\n          if (!reloading) {\n            throw e;\n          }\n        }\n      }\n      // Cache old bokeh versions\n      if (Bokeh != undefined && !reloading) {\n        var NewBokeh = root.Bokeh;\n        if (Bokeh.versions === undefined) {\n          Bokeh.versions = new Map();\n        }\n        if (NewBokeh.version !== Bokeh.version) {\n          Bokeh.versions.set(NewBokeh.version, NewBokeh)\n        }\n        root.Bokeh = Bokeh;\n      }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    }\n    root._bokeh_is_initializing = false\n  }\n\n  function load_or_wait() {\n    // Implement a backoff loop that tries to ensure we do not load multiple\n    // versions of Bokeh and its dependencies at the same time.\n    // In recent versions we use the root._bokeh_is_initializing flag\n    // to determine whether there is an ongoing attempt to initialize\n    // bokeh, however for backward compatibility we also try to ensure\n    // that we do not start loading a newer (Panel>=1.0 and Bokeh>3) version\n    // before older versions are fully initialized.\n    if (root._bokeh_is_initializing && Date.now() > root._bokeh_timeout) {\n      // If the timeout and bokeh was not successfully loaded we reset\n      // everything and try loading again\n      root._bokeh_timeout = Date.now() + 5000;\n      root._bokeh_is_initializing = false;\n      root._bokeh_onload_callbacks = undefined;\n      root._bokeh_is_loading = 0\n      console.log(\"Bokeh: BokehJS was loaded multiple times but one version failed to initialize.\");\n      load_or_wait();\n    } else if (root._bokeh_is_initializing || (typeof root._bokeh_is_initializing === \"undefined\" && root._bokeh_onload_callbacks !== undefined)) {\n      setTimeout(load_or_wait, 100);\n    } else {\n      root._bokeh_is_initializing = true\n      root._bokeh_onload_callbacks = []\n      const bokeh_loaded = root.Bokeh != null && (root.Bokeh.version === py_version || (root.Bokeh.versions !== undefined && root.Bokeh.versions.has(py_version)));\n      if (!reloading && !bokeh_loaded) {\n        if (root.Bokeh) {\n          root.Bokeh = undefined;\n        }\n        console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n      }\n      load_libs(css_urls, js_urls, js_modules, js_exports, function() {\n        console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n        run_inline_js();\n      });\n    }\n  }\n  // Give older versions of the autoload script a head-start to ensure\n  // they initialize before we start loading newer version.\n  setTimeout(load_or_wait, 100)\n}(window));","content_type":"application/vnd.holoviews_load.v0+json"}}},{"output_type":"display_data","metadata":{},"data":{"application/javascript":{"content":"\nif ((window.PyViz === undefined) || (window.PyViz instanceof HTMLElement)) {\n  window.PyViz = {comms: {}, comm_status:{}, kernels:{}, receivers: {}, plot_index: []}\n}\n\n\n    function JupyterCommManager() {\n    }\n\n    JupyterCommManager.prototype.register_target = function(plot_id, comm_id, msg_handler) {\n      if (window.comm_manager || ((window.Jupyter !== undefined) && (Jupyter.notebook.kernel != null))) {\n        var comm_manager = window.comm_manager || Jupyter.notebook.kernel.comm_manager;\n        comm_manager.register_target(comm_id, function(comm) {\n          comm.on_msg(msg_handler);\n        });\n      } else if ((plot_id in window.PyViz.kernels) && (window.PyViz.kernels[plot_id])) {\n        window.PyViz.kernels[plot_id].registerCommTarget(comm_id, function(comm) {\n          comm.onMsg = msg_handler;\n        });\n      } else if (typeof google != 'undefined' && google.colab.kernel != null) {\n        google.colab.kernel.comms.registerTarget(comm_id, (comm) => {\n          var messages = comm.messages[Symbol.asyncIterator]();\n          function processIteratorResult(result) {\n            var message = result.value;\n            console.log(message)\n            var content = {data: message.data, comm_id};\n            var buffers = []\n            for (var buffer of message.buffers || []) {\n              buffers.push(new DataView(buffer))\n            }\n            var metadata = message.metadata || {};\n            var msg = {content, buffers, metadata}\n            msg_handler(msg);\n            return messages.next().then(processIteratorResult);\n          }\n          return messages.next().then(processIteratorResult);\n        })\n      }\n    }\n\n    JupyterCommManager.prototype.get_client_comm = function(plot_id, comm_id, msg_handler) {\n      if (comm_id in window.PyViz.comms) {\n        return window.PyViz.comms[comm_id];\n      } else if (window.comm_manager || ((window.Jupyter !== undefined) && (Jupyter.notebook.kernel != null))) {\n        var comm_manager = window.comm_manager || Jupyter.notebook.kernel.comm_manager;\n        var comm = comm_manager.new_comm(comm_id, {}, {}, {}, comm_id);\n        if (msg_handler) {\n          comm.on_msg(msg_handler);\n        }\n      } else if ((plot_id in window.PyViz.kernels) && (window.PyViz.kernels[plot_id])) {\n        var comm = window.PyViz.kernels[plot_id].connectToComm(comm_id);\n        comm.open();\n        if (msg_handler) {\n          comm.onMsg = msg_handler;\n        }\n      } else if (typeof google != 'undefined' && google.colab.kernel != null) {\n        var comm_promise = google.colab.kernel.comms.open(comm_id)\n        comm_promise.then((comm) => {\n          window.PyViz.comms[comm_id] = comm;\n          if (msg_handler) {\n            var messages = comm.messages[Symbol.asyncIterator]();\n            function processIteratorResult(result) {\n              var message = result.value;\n              var content = {data: message.data};\n              var metadata = message.metadata || {comm_id};\n              var msg = {content, metadata}\n              msg_handler(msg);\n              return messages.next().then(processIteratorResult);\n            }\n            return messages.next().then(processIteratorResult);\n          }\n        })\n        var sendClosure = (data, metadata, buffers, disposeOnDone) => {\n          return comm_promise.then((comm) => {\n            comm.send(data, metadata, buffers, disposeOnDone);\n          });\n        };\n        var comm = {\n          send: sendClosure\n        };\n      }\n      window.PyViz.comms[comm_id] = comm;\n      return comm;\n    }\n    window.PyViz.comm_manager = new JupyterCommManager();\n    \n\n\nvar JS_MIME_TYPE = 'application/javascript';\nvar HTML_MIME_TYPE = 'text/html';\nvar EXEC_MIME_TYPE = 'application/vnd.holoviews_exec.v0+json';\nvar CLASS_NAME = 'output';\n\n/**\n * Render data to the DOM node\n */\nfunction render(props, node) {\n  var div = document.createElement(\"div\");\n  var script = document.createElement(\"script\");\n  node.appendChild(div);\n  node.appendChild(script);\n}\n\n/**\n * Handle when a new output is added\n */\nfunction handle_add_output(event, handle) {\n  var output_area = handle.output_area;\n  var output = handle.output;\n  if ((output.data == undefined) || (!output.data.hasOwnProperty(EXEC_MIME_TYPE))) {\n    return\n  }\n  var id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n  var toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n  if (id !== undefined) {\n    var nchildren = toinsert.length;\n    var html_node = toinsert[nchildren-1].children[0];\n    html_node.innerHTML = output.data[HTML_MIME_TYPE];\n    var scripts = [];\n    var nodelist = html_node.querySelectorAll(\"script\");\n    for (var i in nodelist) {\n      if (nodelist.hasOwnProperty(i)) {\n        scripts.push(nodelist[i])\n      }\n    }\n\n    scripts.forEach( function (oldScript) {\n      var newScript = document.createElement(\"script\");\n      var attrs = [];\n      var nodemap = oldScript.attributes;\n      for (var j in nodemap) {\n        if (nodemap.hasOwnProperty(j)) {\n          attrs.push(nodemap[j])\n        }\n      }\n      attrs.forEach(function(attr) { newScript.setAttribute(attr.name, attr.value) });\n      newScript.appendChild(document.createTextNode(oldScript.innerHTML));\n      oldScript.parentNode.replaceChild(newScript, oldScript);\n    });\n    if (JS_MIME_TYPE in output.data) {\n      toinsert[nchildren-1].children[1].textContent = output.data[JS_MIME_TYPE];\n    }\n    output_area._hv_plot_id = id;\n    if ((window.Bokeh !== undefined) && (id in Bokeh.index)) {\n      window.PyViz.plot_index[id] = Bokeh.index[id];\n    } else {\n      window.PyViz.plot_index[id] = null;\n    }\n  } else if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n    var bk_div = document.createElement(\"div\");\n    bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n    var script_attrs = bk_div.children[0].attributes;\n    for (var i = 0; i < script_attrs.length; i++) {\n      toinsert[toinsert.length - 1].childNodes[1].setAttribute(script_attrs[i].name, script_attrs[i].value);\n    }\n    // store reference to server id on output_area\n    output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n  }\n}\n\n/**\n * Handle when an output is cleared or removed\n */\nfunction handle_clear_output(event, handle) {\n  var id = handle.cell.output_area._hv_plot_id;\n  var server_id = handle.cell.output_area._bokeh_server_id;\n  if (((id === undefined) || !(id in PyViz.plot_index)) && (server_id !== undefined)) { return; }\n  var comm = window.PyViz.comm_manager.get_client_comm(\"hv-extension-comm\", \"hv-extension-comm\", function () {});\n  if (server_id !== null) {\n    comm.send({event_type: 'server_delete', 'id': server_id});\n    return;\n  } else if (comm !== null) {\n    comm.send({event_type: 'delete', 'id': id});\n  }\n  delete PyViz.plot_index[id];\n  if ((window.Bokeh !== undefined) & (id in window.Bokeh.index)) {\n    var doc = window.Bokeh.index[id].model.document\n    doc.clear();\n    const i = window.Bokeh.documents.indexOf(doc);\n    if (i > -1) {\n      window.Bokeh.documents.splice(i, 1);\n    }\n  }\n}\n\n/**\n * Handle kernel restart event\n */\nfunction handle_kernel_cleanup(event, handle) {\n  delete PyViz.comms[\"hv-extension-comm\"];\n  window.PyViz.plot_index = {}\n}\n\n/**\n * Handle update_display_data messages\n */\nfunction handle_update_output(event, handle) {\n  handle_clear_output(event, {cell: {output_area: handle.output_area}})\n  handle_add_output(event, handle)\n}\n\nfunction register_renderer(events, OutputArea) {\n  function append_mime(data, metadata, element) {\n    // create a DOM node to render to\n    var toinsert = this.create_output_subarea(\n    metadata,\n    CLASS_NAME,\n    EXEC_MIME_TYPE\n    );\n    this.keyboard_manager.register_events(toinsert);\n    // Render to node\n    var props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n    render(props, toinsert[0]);\n    element.append(toinsert);\n    return toinsert\n  }\n\n  events.on('output_added.OutputArea', handle_add_output);\n  events.on('output_updated.OutputArea', handle_update_output);\n  events.on('clear_output.CodeCell', handle_clear_output);\n  events.on('delete.Cell', handle_clear_output);\n  events.on('kernel_ready.Kernel', handle_kernel_cleanup);\n\n  OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n    safe: true,\n    index: 0\n  });\n}\n\nif (window.Jupyter !== undefined) {\n  try {\n    var events = require('base/js/events');\n    var OutputArea = require('notebook/js/outputarea').OutputArea;\n    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n      register_renderer(events, OutputArea);\n    }\n  } catch(err) {\n  }\n}\n","content_type":"application/javascript"},"application/vnd.holoviews_load.v0+json":{"content":"\nif ((window.PyViz === undefined) || (window.PyViz instanceof HTMLElement)) {\n  window.PyViz = {comms: {}, comm_status:{}, kernels:{}, receivers: {}, plot_index: []}\n}\n\n\n    function JupyterCommManager() {\n    }\n\n    JupyterCommManager.prototype.register_target = function(plot_id, comm_id, msg_handler) {\n      if (window.comm_manager || ((window.Jupyter !== undefined) && (Jupyter.notebook.kernel != null))) {\n        var comm_manager = window.comm_manager || Jupyter.notebook.kernel.comm_manager;\n        comm_manager.register_target(comm_id, function(comm) {\n          comm.on_msg(msg_handler);\n        });\n      } else if ((plot_id in window.PyViz.kernels) && (window.PyViz.kernels[plot_id])) {\n        window.PyViz.kernels[plot_id].registerCommTarget(comm_id, function(comm) {\n          comm.onMsg = msg_handler;\n        });\n      } else if (typeof google != 'undefined' && google.colab.kernel != null) {\n        google.colab.kernel.comms.registerTarget(comm_id, (comm) => {\n          var messages = comm.messages[Symbol.asyncIterator]();\n          function processIteratorResult(result) {\n            var message = result.value;\n            console.log(message)\n            var content = {data: message.data, comm_id};\n            var buffers = []\n            for (var buffer of message.buffers || []) {\n              buffers.push(new DataView(buffer))\n            }\n            var metadata = message.metadata || {};\n            var msg = {content, buffers, metadata}\n            msg_handler(msg);\n            return messages.next().then(processIteratorResult);\n          }\n          return messages.next().then(processIteratorResult);\n        })\n      }\n    }\n\n    JupyterCommManager.prototype.get_client_comm = function(plot_id, comm_id, msg_handler) {\n      if (comm_id in window.PyViz.comms) {\n        return window.PyViz.comms[comm_id];\n      } else if (window.comm_manager || ((window.Jupyter !== undefined) && (Jupyter.notebook.kernel != null))) {\n        var comm_manager = window.comm_manager || Jupyter.notebook.kernel.comm_manager;\n        var comm = comm_manager.new_comm(comm_id, {}, {}, {}, comm_id);\n        if (msg_handler) {\n          comm.on_msg(msg_handler);\n        }\n      } else if ((plot_id in window.PyViz.kernels) && (window.PyViz.kernels[plot_id])) {\n        var comm = window.PyViz.kernels[plot_id].connectToComm(comm_id);\n        comm.open();\n        if (msg_handler) {\n          comm.onMsg = msg_handler;\n        }\n      } else if (typeof google != 'undefined' && google.colab.kernel != null) {\n        var comm_promise = google.colab.kernel.comms.open(comm_id)\n        comm_promise.then((comm) => {\n          window.PyViz.comms[comm_id] = comm;\n          if (msg_handler) {\n            var messages = comm.messages[Symbol.asyncIterator]();\n            function processIteratorResult(result) {\n              var message = result.value;\n              var content = {data: message.data};\n              var metadata = message.metadata || {comm_id};\n              var msg = {content, metadata}\n              msg_handler(msg);\n              return messages.next().then(processIteratorResult);\n            }\n            return messages.next().then(processIteratorResult);\n          }\n        })\n        var sendClosure = (data, metadata, buffers, disposeOnDone) => {\n          return comm_promise.then((comm) => {\n            comm.send(data, metadata, buffers, disposeOnDone);\n          });\n        };\n        var comm = {\n          send: sendClosure\n        };\n      }\n      window.PyViz.comms[comm_id] = comm;\n      return comm;\n    }\n    window.PyViz.comm_manager = new JupyterCommManager();\n    \n\n\nvar JS_MIME_TYPE = 'application/javascript';\nvar HTML_MIME_TYPE = 'text/html';\nvar EXEC_MIME_TYPE = 'application/vnd.holoviews_exec.v0+json';\nvar CLASS_NAME = 'output';\n\n/**\n * Render data to the DOM node\n */\nfunction render(props, node) {\n  var div = document.createElement(\"div\");\n  var script = document.createElement(\"script\");\n  node.appendChild(div);\n  node.appendChild(script);\n}\n\n/**\n * Handle when a new output is added\n */\nfunction handle_add_output(event, handle) {\n  var output_area = handle.output_area;\n  var output = handle.output;\n  if ((output.data == undefined) || (!output.data.hasOwnProperty(EXEC_MIME_TYPE))) {\n    return\n  }\n  var id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n  var toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n  if (id !== undefined) {\n    var nchildren = toinsert.length;\n    var html_node = toinsert[nchildren-1].children[0];\n    html_node.innerHTML = output.data[HTML_MIME_TYPE];\n    var scripts = [];\n    var nodelist = html_node.querySelectorAll(\"script\");\n    for (var i in nodelist) {\n      if (nodelist.hasOwnProperty(i)) {\n        scripts.push(nodelist[i])\n      }\n    }\n\n    scripts.forEach( function (oldScript) {\n      var newScript = document.createElement(\"script\");\n      var attrs = [];\n      var nodemap = oldScript.attributes;\n      for (var j in nodemap) {\n        if (nodemap.hasOwnProperty(j)) {\n          attrs.push(nodemap[j])\n        }\n      }\n      attrs.forEach(function(attr) { newScript.setAttribute(attr.name, attr.value) });\n      newScript.appendChild(document.createTextNode(oldScript.innerHTML));\n      oldScript.parentNode.replaceChild(newScript, oldScript);\n    });\n    if (JS_MIME_TYPE in output.data) {\n      toinsert[nchildren-1].children[1].textContent = output.data[JS_MIME_TYPE];\n    }\n    output_area._hv_plot_id = id;\n    if ((window.Bokeh !== undefined) && (id in Bokeh.index)) {\n      window.PyViz.plot_index[id] = Bokeh.index[id];\n    } else {\n      window.PyViz.plot_index[id] = null;\n    }\n  } else if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n    var bk_div = document.createElement(\"div\");\n    bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n    var script_attrs = bk_div.children[0].attributes;\n    for (var i = 0; i < script_attrs.length; i++) {\n      toinsert[toinsert.length - 1].childNodes[1].setAttribute(script_attrs[i].name, script_attrs[i].value);\n    }\n    // store reference to server id on output_area\n    output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n  }\n}\n\n/**\n * Handle when an output is cleared or removed\n */\nfunction handle_clear_output(event, handle) {\n  var id = handle.cell.output_area._hv_plot_id;\n  var server_id = handle.cell.output_area._bokeh_server_id;\n  if (((id === undefined) || !(id in PyViz.plot_index)) && (server_id !== undefined)) { return; }\n  var comm = window.PyViz.comm_manager.get_client_comm(\"hv-extension-comm\", \"hv-extension-comm\", function () {});\n  if (server_id !== null) {\n    comm.send({event_type: 'server_delete', 'id': server_id});\n    return;\n  } else if (comm !== null) {\n    comm.send({event_type: 'delete', 'id': id});\n  }\n  delete PyViz.plot_index[id];\n  if ((window.Bokeh !== undefined) & (id in window.Bokeh.index)) {\n    var doc = window.Bokeh.index[id].model.document\n    doc.clear();\n    const i = window.Bokeh.documents.indexOf(doc);\n    if (i > -1) {\n      window.Bokeh.documents.splice(i, 1);\n    }\n  }\n}\n\n/**\n * Handle kernel restart event\n */\nfunction handle_kernel_cleanup(event, handle) {\n  delete PyViz.comms[\"hv-extension-comm\"];\n  window.PyViz.plot_index = {}\n}\n\n/**\n * Handle update_display_data messages\n */\nfunction handle_update_output(event, handle) {\n  handle_clear_output(event, {cell: {output_area: handle.output_area}})\n  handle_add_output(event, handle)\n}\n\nfunction register_renderer(events, OutputArea) {\n  function append_mime(data, metadata, element) {\n    // create a DOM node to render to\n    var toinsert = this.create_output_subarea(\n    metadata,\n    CLASS_NAME,\n    EXEC_MIME_TYPE\n    );\n    this.keyboard_manager.register_events(toinsert);\n    // Render to node\n    var props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n    render(props, toinsert[0]);\n    element.append(toinsert);\n    return toinsert\n  }\n\n  events.on('output_added.OutputArea', handle_add_output);\n  events.on('output_updated.OutputArea', handle_update_output);\n  events.on('clear_output.CodeCell', handle_clear_output);\n  events.on('delete.Cell', handle_clear_output);\n  events.on('kernel_ready.Kernel', handle_kernel_cleanup);\n\n  OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n    safe: true,\n    index: 0\n  });\n}\n\nif (window.Jupyter !== undefined) {\n  try {\n    var events = require('base/js/events');\n    var OutputArea = require('notebook/js/outputarea').OutputArea;\n    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n      register_renderer(events, OutputArea);\n    }\n  } catch(err) {\n  }\n}\n","content_type":"application/vnd.holoviews_load.v0+json"}}},{"output_type":"display_data","metadata":{"application/vnd.holoviews_exec.v0+json":{"id":"3148615e-1c00-45f0-ac17-917052d6870f"}},"data":{"application/vnd.holoviews_exec.v0+json":{"content_type":"application/vnd.holoviews_exec.v0+json","hash":"d41d8cd98f00b204e9800998ecf8427e","path":"/ams2025/_preview/3/build/d41d8cd98f00b204e9800998ecf8427e.json"},"text/html":{"content":"<div id='3148615e-1c00-45f0-ac17-917052d6870f'>\n  <div id=\"aaf36474-b709-4a86-8a61-f7eb4294946f\" data-root-id=\"3148615e-1c00-45f0-ac17-917052d6870f\" style=\"display: contents;\"></div>\n</div>\n<script type=\"application/javascript\">(function(root) {\n  var docs_json = {\"23bc8606-ac18-4312-8072-f944e6b54371\":{\"version\":\"3.7.2\",\"title\":\"Bokeh Application\",\"roots\":[{\"type\":\"object\",\"name\":\"panel.models.browser.BrowserInfo\",\"id\":\"3148615e-1c00-45f0-ac17-917052d6870f\"},{\"type\":\"object\",\"name\":\"panel.models.comm_manager.CommManager\",\"id\":\"8f864011-b499-4f66-bbb4-c48be5159318\",\"attributes\":{\"plot_id\":\"3148615e-1c00-45f0-ac17-917052d6870f\",\"comm_id\":\"206d63fe2a744095bbbb0455ec81b6b1\",\"client_comm_id\":\"52c768febbcf43f5a191a34acf65c2c9\"}}],\"defs\":[{\"type\":\"model\",\"name\":\"ReactiveHTML1\"},{\"type\":\"model\",\"name\":\"FlexBox1\",\"properties\":[{\"name\":\"align_content\",\"kind\":\"Any\",\"default\":\"flex-start\"},{\"name\":\"align_items\",\"kind\":\"Any\",\"default\":\"flex-start\"},{\"name\":\"flex_direction\",\"kind\":\"Any\",\"default\":\"row\"},{\"name\":\"flex_wrap\",\"kind\":\"Any\",\"default\":\"wrap\"},{\"name\":\"gap\",\"kind\":\"Any\",\"default\":\"\"},{\"name\":\"justify_content\",\"kind\":\"Any\",\"default\":\"flex-start\"}]},{\"type\":\"model\",\"name\":\"FloatPanel1\",\"properties\":[{\"name\":\"config\",\"kind\":\"Any\",\"default\":{\"type\":\"map\"}},{\"name\":\"contained\",\"kind\":\"Any\",\"default\":true},{\"name\":\"position\",\"kind\":\"Any\",\"default\":\"right-top\"},{\"name\":\"offsetx\",\"kind\":\"Any\",\"default\":null},{\"name\":\"offsety\",\"kind\":\"Any\",\"default\":null},{\"name\":\"theme\",\"kind\":\"Any\",\"default\":\"primary\"},{\"name\":\"status\",\"kind\":\"Any\",\"default\":\"normalized\"}]},{\"type\":\"model\",\"name\":\"GridStack1\",\"properties\":[{\"name\":\"ncols\",\"kind\":\"Any\",\"default\":null},{\"name\":\"nrows\",\"kind\":\"Any\",\"default\":null},{\"name\":\"allow_resize\",\"kind\":\"Any\",\"default\":true},{\"name\":\"allow_drag\",\"kind\":\"Any\",\"default\":true},{\"name\":\"state\",\"kind\":\"Any\",\"default\":[]}]},{\"type\":\"model\",\"name\":\"drag1\",\"properties\":[{\"name\":\"slider_width\",\"kind\":\"Any\",\"default\":5},{\"name\":\"slider_color\",\"kind\":\"Any\",\"default\":\"black\"},{\"name\":\"value\",\"kind\":\"Any\",\"default\":50}]},{\"type\":\"model\",\"name\":\"click1\",\"properties\":[{\"name\":\"terminal_output\",\"kind\":\"Any\",\"default\":\"\"},{\"name\":\"debug_name\",\"kind\":\"Any\",\"default\":\"\"},{\"name\":\"clears\",\"kind\":\"Any\",\"default\":0}]},{\"type\":\"model\",\"name\":\"FastWrapper1\",\"properties\":[{\"name\":\"object\",\"kind\":\"Any\",\"default\":null},{\"name\":\"style\",\"kind\":\"Any\",\"default\":null}]},{\"type\":\"model\",\"name\":\"NotificationArea1\",\"properties\":[{\"name\":\"js_events\",\"kind\":\"Any\",\"default\":{\"type\":\"map\"}},{\"name\":\"max_notifications\",\"kind\":\"Any\",\"default\":5},{\"name\":\"notifications\",\"kind\":\"Any\",\"default\":[]},{\"name\":\"position\",\"kind\":\"Any\",\"default\":\"bottom-right\"},{\"name\":\"_clear\",\"kind\":\"Any\",\"default\":0},{\"name\":\"types\",\"kind\":\"Any\",\"default\":[{\"type\":\"map\",\"entries\":[[\"type\",\"warning\"],[\"background\",\"#ffc107\"],[\"icon\",{\"type\":\"map\",\"entries\":[[\"className\",\"fas fa-exclamation-triangle\"],[\"tagName\",\"i\"],[\"color\",\"white\"]]}]]},{\"type\":\"map\",\"entries\":[[\"type\",\"info\"],[\"background\",\"#007bff\"],[\"icon\",{\"type\":\"map\",\"entries\":[[\"className\",\"fas fa-info-circle\"],[\"tagName\",\"i\"],[\"color\",\"white\"]]}]]}]}]},{\"type\":\"model\",\"name\":\"Notification\",\"properties\":[{\"name\":\"background\",\"kind\":\"Any\",\"default\":null},{\"name\":\"duration\",\"kind\":\"Any\",\"default\":3000},{\"name\":\"icon\",\"kind\":\"Any\",\"default\":null},{\"name\":\"message\",\"kind\":\"Any\",\"default\":\"\"},{\"name\":\"notification_type\",\"kind\":\"Any\",\"default\":null},{\"name\":\"_rendered\",\"kind\":\"Any\",\"default\":false},{\"name\":\"_destroyed\",\"kind\":\"Any\",\"default\":false}]},{\"type\":\"model\",\"name\":\"TemplateActions1\",\"properties\":[{\"name\":\"open_modal\",\"kind\":\"Any\",\"default\":0},{\"name\":\"close_modal\",\"kind\":\"Any\",\"default\":0}]},{\"type\":\"model\",\"name\":\"BootstrapTemplateActions1\",\"properties\":[{\"name\":\"open_modal\",\"kind\":\"Any\",\"default\":0},{\"name\":\"close_modal\",\"kind\":\"Any\",\"default\":0}]},{\"type\":\"model\",\"name\":\"TemplateEditor1\",\"properties\":[{\"name\":\"layout\",\"kind\":\"Any\",\"default\":[]}]},{\"type\":\"model\",\"name\":\"MaterialTemplateActions1\",\"properties\":[{\"name\":\"open_modal\",\"kind\":\"Any\",\"default\":0},{\"name\":\"close_modal\",\"kind\":\"Any\",\"default\":0}]},{\"type\":\"model\",\"name\":\"ReactiveESM1\",\"properties\":[{\"name\":\"esm_constants\",\"kind\":\"Any\",\"default\":{\"type\":\"map\"}}]},{\"type\":\"model\",\"name\":\"JSComponent1\",\"properties\":[{\"name\":\"esm_constants\",\"kind\":\"Any\",\"default\":{\"type\":\"map\"}}]},{\"type\":\"model\",\"name\":\"ReactComponent1\",\"properties\":[{\"name\":\"esm_constants\",\"kind\":\"Any\",\"default\":{\"type\":\"map\"}}]},{\"type\":\"model\",\"name\":\"AnyWidgetComponent1\",\"properties\":[{\"name\":\"esm_constants\",\"kind\":\"Any\",\"default\":{\"type\":\"map\"}}]},{\"type\":\"model\",\"name\":\"request_value1\",\"properties\":[{\"name\":\"fill\",\"kind\":\"Any\",\"default\":\"none\"},{\"name\":\"_synced\",\"kind\":\"Any\",\"default\":null},{\"name\":\"_request_sync\",\"kind\":\"Any\",\"default\":0}]}]}};\n  var render_items = [{\"docid\":\"23bc8606-ac18-4312-8072-f944e6b54371\",\"roots\":{\"3148615e-1c00-45f0-ac17-917052d6870f\":\"aaf36474-b709-4a86-8a61-f7eb4294946f\"},\"root_ids\":[\"3148615e-1c00-45f0-ac17-917052d6870f\"]}];\n  var docs = Object.values(docs_json)\n  if (!docs) {\n    return\n  }\n  const py_version = docs[0].version.replace('rc', '-rc.').replace('.dev', '-dev.')\n  async function embed_document(root) {\n    var Bokeh = get_bokeh(root)\n    await Bokeh.embed.embed_items_notebook(docs_json, render_items);\n    for (const render_item of render_items) {\n      for (const root_id of render_item.root_ids) {\n\tconst id_el = document.getElementById(root_id)\n\tif (id_el.children.length && id_el.children[0].hasAttribute('data-root-id')) {\n\t  const root_el = id_el.children[0]\n\t  root_el.id = root_el.id + '-rendered'\n\t  for (const child of root_el.children) {\n            // Ensure JupyterLab does not capture keyboard shortcuts\n            // see: https://jupyterlab.readthedocs.io/en/4.1.x/extension/notebook.html#keyboard-interaction-model\n\t    child.setAttribute('data-lm-suppress-shortcuts', 'true')\n\t  }\n\t}\n      }\n    }\n  }\n  function get_bokeh(root) {\n    if (root.Bokeh === undefined) {\n      return null\n    } else if (root.Bokeh.version !== py_version) {\n      if (root.Bokeh.versions === undefined || !root.Bokeh.versions.has(py_version)) {\n\treturn null\n      }\n      return root.Bokeh.versions.get(py_version);\n    } else if (root.Bokeh.version === py_version) {\n      return root.Bokeh\n    }\n    return null\n  }\n  function is_loaded(root) {\n    var Bokeh = get_bokeh(root)\n    return (Bokeh != null && Bokeh.Panel !== undefined)\n  }\n  if (is_loaded(root)) {\n    embed_document(root);\n  } else {\n    var attempts = 0;\n    var timer = setInterval(function(root) {\n      if (is_loaded(root)) {\n        clearInterval(timer);\n        embed_document(root);\n      } else if (document.readyState == \"complete\") {\n        attempts++;\n        if (attempts > 200) {\n          clearInterval(timer);\n\t  var Bokeh = get_bokeh(root)\n\t  if (Bokeh == null || Bokeh.Panel == null) {\n            console.warn(\"Panel: ERROR: Unable to run Panel code because Bokeh or Panel library is missing\");\n\t  } else {\n\t    console.warn(\"Panel: WARNING: Attempting to render but not all required libraries could be resolved.\")\n\t    embed_document(root)\n\t  }\n        }\n      }\n    }, 25, root)\n  }\n})(window);</script>","content_type":"text/html"}}}],"key":"oGZm7jL48d"}],"key":"W935dv4DHl"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"retrieve data from s3 bucket","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"uMPIqglhDu"}],"identifier":"retrieve-data-from-s3-bucket","label":"retrieve data from s3 bucket","html_id":"retrieve-data-from-s3-bucket","implicit":true,"key":"tR5UVlITQS"}],"key":"jcd45oYLDa"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-06-25T20:15:24.189817Z","iopub.status.busy":"2025-06-25T20:15:24.189630Z","iopub.status.idle":"2025-06-25T20:15:25.678962Z","shell.execute_reply":"2025-06-25T20:15:25.678290Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"import os\nimport urllib.request\nfrom pathlib import Path\n\n# Set the URL for the cloud\nURL = \"https://js2.jetstream-cloud.org:8001/\"\npath = \"pythia/radar/erad2024\"\n!mkdir -p data\nfiles = [\n    \"20240522_MeteoSwiss_ARPA_Lombardia/Data/Xband/DES_VOL_RAW_20240522_1600.nc\",\n    \"wradlib/desio_dem.tif\",\n]\nfor file in files:\n    file_remote = os.path.join(path, file)\n    file_local = os.path.join(\"data\", Path(file).name)\n    if not os.path.exists(file_local):\n        print(f\"downloading, {file_local}\")\n        urllib.request.urlretrieve(f\"{URL}{file_remote}\", file_local)","key":"GD6sfglYqf"},{"type":"output","id":"IRRa1h9bDfUnmr-XDA-ww","data":[{"name":"stdout","output_type":"stream","text":"downloading, data/DES_VOL_RAW_20240522_1600.nc\n"},{"name":"stdout","output_type":"stream","text":"downloading, data/desio_dem.tif\n"}],"key":"bEcpXkuLao"}],"key":"x3su7YkMFC"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Open CfRadial1 Volume","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"DME0TZexwP"}],"identifier":"open-cfradial1-volume","label":"Open CfRadial1 Volume","html_id":"open-cfradial1-volume","implicit":true,"key":"AFCbOxCplz"}],"key":"XrV4sMystz"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-06-25T20:15:25.682247Z","iopub.status.busy":"2025-06-25T20:15:25.681714Z","iopub.status.idle":"2025-06-25T20:15:27.268373Z","shell.execute_reply":"2025-06-25T20:15:27.267889Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"reindex = dict(angle_res=1, direction=1, start_angle=0, stop_angle=360)\ndtree = xd.io.open_cfradial1_datatree(\"data/DES_VOL_RAW_20240522_1600.nc\")\ndisplay(dtree.load())","key":"EeNrgBPfFi"},{"type":"output","id":"oApMdWvMrF18kpr8wLdAV","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content_type":"text/html","hash":"cb2d2529131f5531701d758a84a35dc5","path":"/ams2025/_preview/3/build/cb2d2529131f5531701d758a84a35dc5.html"},"text/plain":{"content":"DataTree('root', parent=None)\n│   Dimensions:              (sweep: 8, frequency: 1)\n│   Coordinates:\n│     * frequency            (frequency) float32 4B 9.339e+09\n│   Dimensions without coordinates: sweep\n│   Data variables: (12/13)\n│       sweep_fixed_angle    (sweep) float32 32B 0.7 1.3 3.0 5.0 7.0 10.0 15.0 25.0\n│       sweep_group_name     (sweep) <U9 288B 'sweep_0.0' ... 'sweep_7.0'\n│       volume_number        float64 8B 1.0\n│       platform_type        |S32 32B b'fixed'\n│       primary_axis         |S32 32B b'axis_z'\n│       status_str           |S1 1B b''\n│       ...                   ...\n│       time_coverage_start  |S32 32B b'2024-05-22T16:00:47Z'\n│       time_coverage_end    |S32 32B b'2024-05-22T16:03:20Z'\n│       latitude             float64 8B 45.63\n│       longitude            float64 8B 9.196\n│       altitude             float64 8B 241.0\n│       altitude_agl         float64 8B 35.0\n│   Attributes: (12/14)\n│       Conventions:         CF-1.7\n│       version:             CF-Radial-1.4\n│       title:               VOL_A\n│       institution:         \n│       references:          Conversion software: Radx::SigmetRadxFile\n│       source:              Sigmet IRIS software\n│       ...                  ...\n│       site_name:           Desio_Radar\n│       scan_name:           VOL_A\n│       scan_id:             0\n│       platform_is_mobile:  false\n│       ray_times_increase:  true\n│       history:             Wed May 22 16:32:28 2024: ncap2 -Os fixed_angle  (:)...\n├── DataTree('radar_parameters')\n│       Dimensions:                   ()\n│       Data variables:\n│           radar_receiver_bandwidth  float32 4B nan\n│           radar_antenna_gain_v      float32 4B nan\n│           radar_antenna_gain_h      float32 4B nan\n│           radar_beam_width_v        float32 4B 0.95\n│           radar_beam_width_h        float32 4B 0.95\n├── DataTree('radar_calibration')\n│       Dimensions:                   ()\n│       Data variables: (12/55)\n│           time                      |S32 32B b'2024-05-22T16:00:47Z'\n│           pulse_width               timedelta64[ns] 8B 00:00:00.000044\n│           xmit_power_h              float32 4B 56.01\n│           xmit_power_v              float32 4B 56.01\n│           two_way_waveguide_loss_h  float32 4B nan\n│           two_way_waveguide_loss_v  float32 4B nan\n│           ...                        ...\n│           zdr_correction            float32 4B 0.0\n│           ldr_correction_h          float32 4B 0.0\n│           ldr_correction_v          float32 4B 0.0\n│           system_phidp              float32 4B 0.0\n│           test_power_h              float32 4B nan\n│           test_power_v              float32 4B nan\n├── DataTree('georeferencing_correction')\n├── DataTree('sweep_0')\n│       Dimensions:                    (azimuth: 360, range: 416)\n│       Coordinates:\n│           time                       (azimuth, range) datetime64[ns] 1MB 2024-05-22...\n│         * range                      (range) float32 2kB 150.0 450.0 ... 1.246e+05\n│         * azimuth                    (azimuth) float32 1kB 0.0412 1.027 ... 359.0\n│           elevation                  (azimuth) float32 1kB 0.7031 0.7059 ... 0.7031\n│           latitude                   float64 8B 45.63\n│           longitude                  float64 8B 9.196\n│           altitude                   float64 8B 241.0\n│       Data variables: (12/30)\n│           sweep_fixed_angle          float32 4B 0.7\n│           sweep_number               float64 8B 0.0\n│           sweep_mode                 <U20 80B 'azimuth_surveillance'\n│           prt_mode                   |S32 32B b'fixed'\n│           follow_mode                |S32 32B b'none'\n│           ray_n_gates                (azimuth) float64 3kB 416.0 416.0 ... 416.0 416.0\n│           ...                         ...\n│           DBZ                        (azimuth, range) float32 599kB 16.41 ... nan\n│           RHOHV                      (azimuth, range) float32 599kB 0.9953 ... nan\n│           DBZ_TOT                    (azimuth, range) float32 599kB 36.82 ... nan\n│           ZDR                        (azimuth, range) float32 599kB 1.54 1.54 ... nan\n│           MCSSX                      (azimuth, range) float32 599kB 2.0 2.0 ... nan\n│           VEL                        (azimuth, range) float32 599kB 4.17 4.17 ... nan\n├── DataTree('sweep_1')\n│       Dimensions:                    (azimuth: 360, range: 416)\n│       Coordinates:\n│           time                       (azimuth, range) datetime64[ns] 1MB 2024-05-22...\n│         * range                      (range) float32 2kB 150.0 450.0 ... 1.246e+05\n│         * azimuth                    (azimuth) float32 1kB 0.03571 1.022 ... 359.1\n│           elevation                  (azimuth) float32 1kB 1.263 1.263 ... 1.263 1.263\n│           latitude                   float64 8B 45.63\n│           longitude                  float64 8B 9.196\n│           altitude                   float64 8B 241.0\n│       Data variables: (12/30)\n│           sweep_fixed_angle          float32 4B 1.3\n│           sweep_number               float64 8B 1.0\n│           sweep_mode                 <U20 80B 'azimuth_surveillance'\n│           prt_mode                   |S32 32B b'fixed'\n│           follow_mode                |S32 32B b'none'\n│           ray_n_gates                (azimuth) float64 3kB 416.0 416.0 ... 416.0 416.0\n│           ...                         ...\n│           DBZ                        (azimuth, range) float32 599kB 18.69 ... nan\n│           RHOHV                      (azimuth, range) float32 599kB 0.9966 ... nan\n│           DBZ_TOT                    (azimuth, range) float32 599kB 36.81 ... nan\n│           ZDR                        (azimuth, range) float32 599kB 0.79 1.39 ... nan\n│           MCSSX                      (azimuth, range) float32 599kB 2.0 2.0 ... nan\n│           VEL                        (azimuth, range) float32 599kB 4.26 3.72 ... nan\n├── DataTree('sweep_2')\n│       Dimensions:                    (azimuth: 360, range: 416)\n│       Coordinates:\n│           time                       (azimuth, range) datetime64[ns] 1MB 2024-05-22...\n│         * range                      (range) float32 2kB 150.0 450.0 ... 1.246e+05\n│         * azimuth                    (azimuth) float32 1kB 0.04669 1.019 ... 359.0\n│           elevation                  (azimuth) float32 1kB 3.005 3.005 ... 3.005 3.005\n│           latitude                   float64 8B 45.63\n│           longitude                  float64 8B 9.196\n│           altitude                   float64 8B 241.0\n│       Data variables: (12/30)\n│           sweep_fixed_angle          float32 4B 3.0\n│           sweep_number               float64 8B 2.0\n│           sweep_mode                 <U20 80B 'azimuth_surveillance'\n│           prt_mode                   |S32 32B b'fixed'\n│           follow_mode                |S32 32B b'none'\n│           ray_n_gates                (azimuth) float64 3kB 416.0 416.0 ... 416.0 416.0\n│           ...                         ...\n│           DBZ                        (azimuth, range) float32 599kB 17.31 ... nan\n│           RHOHV                      (azimuth, range) float32 599kB 0.9854 ... nan\n│           DBZ_TOT                    (azimuth, range) float32 599kB 36.82 ... nan\n│           ZDR                        (azimuth, range) float32 599kB 0.73 1.17 ... nan\n│           MCSSX                      (azimuth, range) float32 599kB 2.0 2.0 ... nan\n│           VEL                        (azimuth, range) float32 599kB 3.38 3.51 ... nan\n├── DataTree('sweep_3')\n│       Dimensions:                    (azimuth: 360, range: 416)\n│       Coordinates:\n│           time                       (azimuth, range) datetime64[ns] 1MB 2024-05-22...\n│         * range                      (range) float32 2kB 150.0 450.0 ... 1.246e+05\n│         * azimuth                    (azimuth) float32 1kB 0.03571 1.038 ... 359.0\n│           elevation                  (azimuth) float32 1kB 4.96 4.96 ... 4.96 4.96\n│           latitude                   float64 8B 45.63\n│           longitude                  float64 8B 9.196\n│           altitude                   float64 8B 241.0\n│       Data variables: (12/30)\n│           sweep_fixed_angle          float32 4B 5.0\n│           sweep_number               float64 8B 3.0\n│           sweep_mode                 <U20 80B 'azimuth_surveillance'\n│           prt_mode                   |S32 32B b'fixed'\n│           follow_mode                |S32 32B b'none'\n│           ray_n_gates                (azimuth) float64 3kB 416.0 416.0 ... 416.0 416.0\n│           ...                         ...\n│           DBZ                        (azimuth, range) float32 599kB 25.51 32.5 ... nan\n│           RHOHV                      (azimuth, range) float32 599kB 0.9977 ... nan\n│           DBZ_TOT                    (azimuth, range) float32 599kB 36.93 ... nan\n│           ZDR                        (azimuth, range) float32 599kB 1.04 1.3 ... nan\n│           MCSSX                      (azimuth, range) float32 599kB 2.0 2.0 ... nan\n│           VEL                        (azimuth, range) float32 599kB 3.87 3.29 ... nan\n├── DataTree('sweep_4')\n│       Dimensions:                    (azimuth: 360, range: 416)\n│       Coordinates:\n│           time                       (azimuth, range) datetime64[ns] 1MB 2024-05-22...\n│         * range                      (range) float32 2kB 150.0 450.0 ... 1.246e+05\n│         * azimuth                    (azimuth) float32 1kB 0.06866 1.035 ... 359.0\n│           elevation                  (azimuth) float32 1kB 6.954 6.954 ... 6.954 6.954\n│           latitude                   float64 8B 45.63\n│           longitude                  float64 8B 9.196\n│           altitude                   float64 8B 241.0\n│       Data variables: (12/30)\n│           sweep_fixed_angle          float32 4B 7.0\n│           sweep_number               float64 8B 4.0\n│           sweep_mode                 <U20 80B 'azimuth_surveillance'\n│           prt_mode                   |S32 32B b'fixed'\n│           follow_mode                |S32 32B b'none'\n│           ray_n_gates                (azimuth) float64 3kB 416.0 416.0 ... 416.0 416.0\n│           ...                         ...\n│           DBZ                        (azimuth, range) float32 599kB 15.77 ... nan\n│           RHOHV                      (azimuth, range) float32 599kB 0.9967 ... nan\n│           DBZ_TOT                    (azimuth, range) float32 599kB 36.85 ... nan\n│           ZDR                        (azimuth, range) float32 599kB 1.22 1.22 ... nan\n│           MCSSX                      (azimuth, range) float32 599kB 2.0 2.0 ... nan\n│           VEL                        (azimuth, range) float32 599kB 3.37 3.37 ... nan\n├── DataTree('sweep_5')\n│       Dimensions:                    (azimuth: 360, range: 383)\n│       Coordinates:\n│           time                       (azimuth, range) datetime64[ns] 1MB 2024-05-22...\n│         * range                      (range) float32 2kB 150.0 450.0 ... 1.148e+05\n│         * azimuth                    (azimuth) float32 1kB 0.07141 0.9915 ... 359.1\n│           elevation                  (azimuth) float32 1kB 9.992 9.992 ... 9.992 9.992\n│           latitude                   float64 8B 45.63\n│           longitude                  float64 8B 9.196\n│           altitude                   float64 8B 241.0\n│       Data variables: (12/30)\n│           sweep_fixed_angle          float32 4B 10.0\n│           sweep_number               float64 8B 5.0\n│           sweep_mode                 <U20 80B 'azimuth_surveillance'\n│           prt_mode                   |S32 32B b'fixed'\n│           follow_mode                |S32 32B b'none'\n│           ray_n_gates                (azimuth) float64 3kB 383.0 383.0 ... 383.0 383.0\n│           ...                         ...\n│           DBZ                        (azimuth, range) float32 552kB 19.97 ... nan\n│           RHOHV                      (azimuth, range) float32 552kB 0.9967 ... nan\n│           DBZ_TOT                    (azimuth, range) float32 552kB 36.89 ... nan\n│           ZDR                        (azimuth, range) float32 552kB 1.19 1.19 ... nan\n│           MCSSX                      (azimuth, range) float32 552kB 2.0 2.0 ... nan\n│           VEL                        (azimuth, range) float32 552kB 2.97 2.97 ... nan\n├── DataTree('sweep_6')\n│       Dimensions:                    (azimuth: 360, range: 257)\n│       Coordinates:\n│           time                       (azimuth, range) datetime64[ns] 740kB 2024-05-...\n│         * range                      (range) float32 1kB 150.0 450.0 ... 7.695e+04\n│         * azimuth                    (azimuth) float32 1kB 0.0824 1.038 ... 359.1\n│           elevation                  (azimuth) float32 1kB 15.02 15.02 ... 15.02 15.02\n│           latitude                   float64 8B 45.63\n│           longitude                  float64 8B 9.196\n│           altitude                   float64 8B 241.0\n│       Data variables: (12/30)\n│           sweep_fixed_angle          float32 4B 15.0\n│           sweep_number               float64 8B 6.0\n│           sweep_mode                 <U20 80B 'azimuth_surveillance'\n│           prt_mode                   |S32 32B b'fixed'\n│           follow_mode                |S32 32B b'none'\n│           ray_n_gates                (azimuth) float64 3kB 257.0 257.0 ... 257.0 257.0\n│           ...                         ...\n│           DBZ                        (azimuth, range) float32 370kB nan -4.08 ... nan\n│           RHOHV                      (azimuth, range) float32 370kB nan 0.8125 ... nan\n│           DBZ_TOT                    (azimuth, range) float32 370kB 36.84 ... nan\n│           ZDR                        (azimuth, range) float32 370kB nan 0.6 ... nan\n│           MCSSX                      (azimuth, range) float32 370kB nan 0.0 ... nan\n│           VEL                        (azimuth, range) float32 370kB nan -1.39 ... nan\n└── DataTree('sweep_7')\n        Dimensions:                    (azimuth: 360, range: 157)\n        Coordinates:\n            time                       (azimuth, range) datetime64[ns] 452kB 2024-05-...\n          * range                      (range) float32 628B 150.0 450.0 ... 4.695e+04\n          * azimuth                    (azimuth) float32 1kB 0.05493 1.071 ... 359.1\n            elevation                  (azimuth) float32 1kB 24.97 24.97 ... 24.97 24.97\n            latitude                   float64 8B 45.63\n            longitude                  float64 8B 9.196\n            altitude                   float64 8B 241.0\n        Data variables: (12/30)\n            sweep_fixed_angle          float32 4B 25.0\n            sweep_number               float64 8B 7.0\n            sweep_mode                 <U20 80B 'azimuth_surveillance'\n            prt_mode                   |S32 32B b'fixed'\n            follow_mode                |S32 32B b'none'\n            ray_n_gates                (azimuth) float64 3kB 157.0 157.0 ... 157.0 157.0\n            ...                         ...\n            DBZ                        (azimuth, range) float32 226kB 2.53 16.8 ... nan\n            RHOHV                      (azimuth, range) float32 226kB 0.9748 ... nan\n            DBZ_TOT                    (azimuth, range) float32 226kB 36.81 ... nan\n            ZDR                        (azimuth, range) float32 226kB 0.53 0.54 ... nan\n            MCSSX                      (azimuth, range) float32 226kB 2.0 2.0 ... nan\n            VEL                        (azimuth, range) float32 226kB 1.64 0.68 ... nan","content_type":"text/plain"}}}],"key":"NYgWGHoI5x"}],"key":"HQ7Cpzazjb"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":1,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Get first sweep","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"FXPHs2jlLd"}],"identifier":"get-first-sweep","label":"Get first sweep","html_id":"get-first-sweep","implicit":true,"key":"d9xz7WmHB7"}],"key":"ub4HK5kBa4"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-06-25T20:15:27.277016Z","iopub.status.busy":"2025-06-25T20:15:27.276582Z","iopub.status.idle":"2025-06-25T20:15:27.480577Z","shell.execute_reply":"2025-06-25T20:15:27.480006Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"swp = (\n    dtree[\"sweep_0\"]\n    .to_dataset()\n    .wrl.georef.georeference(crs=wrl.georef.get_earth_projection())\n    .set_coords(\"sweep_mode\")\n)\nswp.x.attrs = xd.model.get_longitude_attrs()\nswp.y.attrs = xd.model.get_latitude_attrs()","key":"Pq6G8VJ67b"},{"type":"output","id":"4jq7SR3m8xOyn5nab5xHG","data":[],"key":"jbh8jKbINu"}],"key":"d7fSUZRWUF"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-06-25T20:15:27.483044Z","iopub.status.busy":"2025-06-25T20:15:27.482843Z","iopub.status.idle":"2025-06-25T20:15:27.541101Z","shell.execute_reply":"2025-06-25T20:15:27.540601Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"display(swp)","key":"hn0Uv1CCU4"},{"type":"output","id":"09qBJZQhPsStBIv3nddEG","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content_type":"text/html","hash":"80c963bf34210ec7d0029b873ea64b2e","path":"/ams2025/_preview/3/build/80c963bf34210ec7d0029b873ea64b2e.html"},"text/plain":{"content":"<xarray.Dataset> Size: 13MB\nDimensions:                    (azimuth: 360, range: 416)\nCoordinates: (12/15)\n    sweep_mode                 <U20 80B 'azimuth_surveillance'\n    time                       (azimuth, range) datetime64[ns] 1MB 2024-05-22...\n  * range                      (range) float32 2kB 150.0 450.0 ... 1.246e+05\n  * azimuth                    (azimuth) float32 1kB 0.0412 1.027 ... 359.0\n    elevation                  (azimuth) float32 1kB 0.7031 0.7059 ... 0.7031\n    latitude                   float64 8B 45.63\n    ...                         ...\n    y                          (azimuth, range) float64 1MB 45.63 ... 46.75\n    z                          (azimuth, range) float64 1MB 243.0 ... 2.685e+03\n    gr                         (azimuth, range) float64 1MB 0.001349 ... 1.121\n    rays                       (azimuth, range) float32 599kB 0.0412 ... 359.0\n    bins                       (azimuth, range) float32 599kB 150.0 ... 1.246...\n    crs_wkt                    int64 8B 0\nData variables: (12/29)\n    sweep_fixed_angle          float32 4B 0.7\n    sweep_number               float64 8B 0.0\n    prt_mode                   |S32 32B b'fixed'\n    follow_mode                |S32 32B b'none'\n    ray_n_gates                (azimuth) float64 3kB 416.0 416.0 ... 416.0 416.0\n    ray_start_index            (azimuth) float64 3kB 1.452e+05 ... 1.448e+05\n    ...                         ...\n    DBZ                        (azimuth, range) float32 599kB 16.41 ... nan\n    RHOHV                      (azimuth, range) float32 599kB 0.9953 ... nan\n    DBZ_TOT                    (azimuth, range) float32 599kB 36.82 ... nan\n    ZDR                        (azimuth, range) float32 599kB 1.54 1.54 ... nan\n    MCSSX                      (azimuth, range) float32 599kB 2.0 2.0 ... nan\n    VEL                        (azimuth, range) float32 599kB 4.17 4.17 ... nan","content_type":"text/plain"}}}],"key":"KHXNJrjXs0"}],"key":"Y1NFOsRPGS"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Get Digital Elevation Map (DEM)","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"sBJz2cHogk"}],"identifier":"get-digital-elevation-map-dem","label":"Get Digital Elevation Map (DEM)","html_id":"get-digital-elevation-map-dem","implicit":true,"key":"qdQtsaD3cb"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"If we have access to the NASA EarthData GESDISC, we can use the BearerToken to retrieve SRTM data corresponding to the actual radar domain. Or we can choose the precompiled GeoTiff.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"GUI3C1aUzZ"}],"key":"Xl6VtJ1Wex"}],"key":"IXZhwg9kDP"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-06-25T20:15:27.543543Z","iopub.status.busy":"2025-06-25T20:15:27.543061Z","iopub.status.idle":"2025-06-25T20:15:27.545787Z","shell.execute_reply":"2025-06-25T20:15:27.545329Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# extent = [swp.x.min().values, swp.x.max().values, swp.y.min().values, swp.y.max().values]\n# import os\n# os.environ[\"WRADLIB_EARTHDATA_BEARER_TOKEN\"] = \"\"\n# dem = wrl.io.get_srtm(extent)\n# wrl.io.write_raster_dataset(\"desio_dem.tif\", dem)","key":"xUQOzmhIc8"},{"type":"output","id":"zAeegfLrQAa00OFgzO5XQ","data":[],"key":"u4YmMju5Zm"}],"key":"HwjjFBRknC"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-06-25T20:15:27.547673Z","iopub.status.busy":"2025-06-25T20:15:27.547506Z","iopub.status.idle":"2025-06-25T20:15:27.561902Z","shell.execute_reply":"2025-06-25T20:15:27.561410Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"dem = (\n    xr.open_dataset(\"data/desio_dem.tif\", engine=\"rasterio\")\n    .isel(band=0)\n    .rename(band_data=\"DEM\")\n    .reset_coords(\"band\", drop=True)\n)\ndisplay(dem)","key":"DwsMI05ALR"},{"type":"output","id":"E1nfyg9uQunEwesyQIogg","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<div><svg style=\"position: absolute; width: 0; height: 0; overflow: hidden\">\n<defs>\n<symbol id=\"icon-database\" viewBox=\"0 0 32 32\">\n<path d=\"M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z\"></path>\n<path d=\"M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n<path d=\"M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n</symbol>\n<symbol id=\"icon-file-text2\" viewBox=\"0 0 32 32\">\n<path d=\"M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z\"></path>\n<path d=\"M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n<path d=\"M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n<path d=\"M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n</symbol>\n</defs>\n</svg>\n<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.\n *\n */\n\n:root {\n  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));\n  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));\n  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));\n  --xr-border-color: var(--jp-border-color2, #e0e0e0);\n  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);\n  --xr-background-color: var(--jp-layout-color0, white);\n  --xr-background-color-row-even: var(--jp-layout-color1, white);\n  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);\n}\n\nhtml[theme=dark],\nhtml[data-theme=dark],\nbody[data-theme=dark],\nbody.vscode-dark {\n  --xr-font-color0: rgba(255, 255, 255, 1);\n  --xr-font-color2: rgba(255, 255, 255, 0.54);\n  --xr-font-color3: rgba(255, 255, 255, 0.38);\n  --xr-border-color: #1F1F1F;\n  --xr-disabled-color: #515151;\n  --xr-background-color: #111111;\n  --xr-background-color-row-even: #111111;\n  --xr-background-color-row-odd: #313131;\n}\n\n.xr-wrap {\n  display: block !important;\n  min-width: 300px;\n  max-width: 700px;\n}\n\n.xr-text-repr-fallback {\n  /* fallback to plain text repr when CSS is not injected (untrusted notebook) */\n  display: none;\n}\n\n.xr-header {\n  padding-top: 6px;\n  padding-bottom: 6px;\n  margin-bottom: 4px;\n  border-bottom: solid 1px var(--xr-border-color);\n}\n\n.xr-header > div,\n.xr-header > ul {\n  display: inline;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n.xr-obj-type,\n.xr-array-name {\n  margin-left: 2px;\n  margin-right: 10px;\n}\n\n.xr-obj-type {\n  color: var(--xr-font-color2);\n}\n\n.xr-sections {\n  padding-left: 0 !important;\n  display: grid;\n  grid-template-columns: 150px auto auto 1fr 0 20px 0 20px;\n}\n\n.xr-section-item {\n  display: contents;\n}\n\n.xr-section-item input {\n  display: inline-block;\n  opacity: 0;\n}\n\n.xr-section-item input + label {\n  color: var(--xr-disabled-color);\n}\n\n.xr-section-item input:enabled + label {\n  cursor: pointer;\n  color: var(--xr-font-color2);\n}\n\n.xr-section-item input:focus + label {\n  border: 2px solid var(--xr-font-color0);\n}\n\n.xr-section-item input:enabled + label:hover {\n  color: var(--xr-font-color0);\n}\n\n.xr-section-summary {\n  grid-column: 1;\n  color: var(--xr-font-color2);\n  font-weight: 500;\n}\n\n.xr-section-summary > span {\n  display: inline-block;\n  padding-left: 0.5em;\n}\n\n.xr-section-summary-in:disabled + label {\n  color: var(--xr-font-color2);\n}\n\n.xr-section-summary-in + label:before {\n  display: inline-block;\n  content: '►';\n  font-size: 11px;\n  width: 15px;\n  text-align: center;\n}\n\n.xr-section-summary-in:disabled + label:before {\n  color: var(--xr-disabled-color);\n}\n\n.xr-section-summary-in:checked + label:before {\n  content: '▼';\n}\n\n.xr-section-summary-in:checked + label > span {\n  display: none;\n}\n\n.xr-section-summary,\n.xr-section-inline-details {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n.xr-section-inline-details {\n  grid-column: 2 / -1;\n}\n\n.xr-section-details {\n  display: none;\n  grid-column: 1 / -1;\n  margin-bottom: 5px;\n}\n\n.xr-section-summary-in:checked ~ .xr-section-details {\n  display: contents;\n}\n\n.xr-array-wrap {\n  grid-column: 1 / -1;\n  display: grid;\n  grid-template-columns: 20px auto;\n}\n\n.xr-array-wrap > label {\n  grid-column: 1;\n  vertical-align: top;\n}\n\n.xr-preview {\n  color: var(--xr-font-color3);\n}\n\n.xr-array-preview,\n.xr-array-data {\n  padding: 0 5px !important;\n  grid-column: 2;\n}\n\n.xr-array-data,\n.xr-array-in:checked ~ .xr-array-preview {\n  display: none;\n}\n\n.xr-array-in:checked ~ .xr-array-data,\n.xr-array-preview {\n  display: inline-block;\n}\n\n.xr-dim-list {\n  display: inline-block !important;\n  list-style: none;\n  padding: 0 !important;\n  margin: 0;\n}\n\n.xr-dim-list li {\n  display: inline-block;\n  padding: 0;\n  margin: 0;\n}\n\n.xr-dim-list:before {\n  content: '(';\n}\n\n.xr-dim-list:after {\n  content: ')';\n}\n\n.xr-dim-list li:not(:last-child):after {\n  content: ',';\n  padding-right: 5px;\n}\n\n.xr-has-index {\n  font-weight: bold;\n}\n\n.xr-var-list,\n.xr-var-item {\n  display: contents;\n}\n\n.xr-var-item > div,\n.xr-var-item label,\n.xr-var-item > .xr-var-name span {\n  background-color: var(--xr-background-color-row-even);\n  margin-bottom: 0;\n}\n\n.xr-var-item > .xr-var-name:hover span {\n  padding-right: 5px;\n}\n\n.xr-var-list > li:nth-child(odd) > div,\n.xr-var-list > li:nth-child(odd) > label,\n.xr-var-list > li:nth-child(odd) > .xr-var-name span {\n  background-color: var(--xr-background-color-row-odd);\n}\n\n.xr-var-name {\n  grid-column: 1;\n}\n\n.xr-var-dims {\n  grid-column: 2;\n}\n\n.xr-var-dtype {\n  grid-column: 3;\n  text-align: right;\n  color: var(--xr-font-color2);\n}\n\n.xr-var-preview {\n  grid-column: 4;\n}\n\n.xr-index-preview {\n  grid-column: 2 / 5;\n  color: var(--xr-font-color2);\n}\n\n.xr-var-name,\n.xr-var-dims,\n.xr-var-dtype,\n.xr-preview,\n.xr-attrs dt {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding-right: 10px;\n}\n\n.xr-var-name:hover,\n.xr-var-dims:hover,\n.xr-var-dtype:hover,\n.xr-attrs dt:hover {\n  overflow: visible;\n  width: auto;\n  z-index: 1;\n}\n\n.xr-var-attrs,\n.xr-var-data,\n.xr-index-data {\n  display: none;\n  background-color: var(--xr-background-color) !important;\n  padding-bottom: 5px !important;\n}\n\n.xr-var-attrs-in:checked ~ .xr-var-attrs,\n.xr-var-data-in:checked ~ .xr-var-data,\n.xr-index-data-in:checked ~ .xr-index-data {\n  display: block;\n}\n\n.xr-var-data > table {\n  float: right;\n}\n\n.xr-var-name span,\n.xr-var-data,\n.xr-index-name div,\n.xr-index-data,\n.xr-attrs {\n  padding-left: 25px !important;\n}\n\n.xr-attrs,\n.xr-var-attrs,\n.xr-var-data,\n.xr-index-data {\n  grid-column: 1 / -1;\n}\n\ndl.xr-attrs {\n  padding: 0;\n  margin: 0;\n  display: grid;\n  grid-template-columns: 125px auto;\n}\n\n.xr-attrs dt,\n.xr-attrs dd {\n  padding: 0;\n  margin: 0;\n  float: left;\n  padding-right: 10px;\n  width: auto;\n}\n\n.xr-attrs dt {\n  font-weight: normal;\n  grid-column: 1;\n}\n\n.xr-attrs dt:hover span {\n  display: inline-block;\n  background: var(--xr-background-color);\n  padding-right: 10px;\n}\n\n.xr-attrs dd {\n  grid-column: 2;\n  white-space: pre-wrap;\n  word-break: break-all;\n}\n\n.xr-icon-database,\n.xr-icon-file-text2,\n.xr-no-icon {\n  display: inline-block;\n  vertical-align: middle;\n  width: 1em;\n  height: 1.5em !important;\n  stroke-width: 0;\n  stroke: currentColor;\n  fill: currentColor;\n}\n</style><pre class='xr-text-repr-fallback'>&lt;xarray.Dataset&gt; Size: 69MB\nDimensions:      (x: 4801, y: 3601)\nCoordinates:\n  * x            (x) float64 38kB 7.0 7.001 7.002 7.003 ... 11.0 11.0 11.0 11.0\n  * y            (y) float64 29kB 47.0 47.0 47.0 47.0 ... 44.0 44.0 44.0 44.0\n    spatial_ref  int64 8B ...\nData variables:\n    DEM          (y, x) float32 69MB ...</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.Dataset</div></div><ul class='xr-sections'><li class='xr-section-item'><input id='section-5d877df2-b334-4564-9333-bab6343edb86' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-5d877df2-b334-4564-9333-bab6343edb86' class='xr-section-summary'  title='Expand/collapse section'>Dimensions:</label><div class='xr-section-inline-details'><ul class='xr-dim-list'><li><span class='xr-has-index'>x</span>: 4801</li><li><span class='xr-has-index'>y</span>: 3601</li></ul></div><div class='xr-section-details'></div></li><li class='xr-section-item'><input id='section-294a8bff-e6d1-4ee3-b511-ecc6eefcc0ce' class='xr-section-summary-in' type='checkbox'  checked><label for='section-294a8bff-e6d1-4ee3-b511-ecc6eefcc0ce' class='xr-section-summary' >Coordinates: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>x</span></div><div class='xr-var-dims'>(x)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>7.0 7.001 7.002 ... 11.0 11.0 11.0</div><input id='attrs-c0db3b81-cd6f-4455-8b20-a1be3081e843' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-c0db3b81-cd6f-4455-8b20-a1be3081e843' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-a49b6a1d-6cfb-430b-b036-51521b7ee524' class='xr-var-data-in' type='checkbox'><label for='data-a49b6a1d-6cfb-430b-b036-51521b7ee524' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([ 7.      ,  7.000833,  7.001667, ..., 10.998333, 10.999167, 11.      ])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>y</span></div><div class='xr-var-dims'>(y)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>47.0 47.0 47.0 ... 44.0 44.0 44.0</div><input id='attrs-aa20a932-a898-40f4-8cee-9fdada454a73' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-aa20a932-a898-40f4-8cee-9fdada454a73' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-85ee7952-1402-4093-ac2f-4edb8a50e76d' class='xr-var-data-in' type='checkbox'><label for='data-85ee7952-1402-4093-ac2f-4edb8a50e76d' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([47.      , 46.999167, 46.998333, ..., 44.001667, 44.000833, 44.      ])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>spatial_ref</span></div><div class='xr-var-dims'>()</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>...</div><input id='attrs-fbad3115-8350-4115-8276-86ddb664782f' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-fbad3115-8350-4115-8276-86ddb664782f' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-1c3f9056-d2a4-43eb-82f5-b0d5091d1fe5' class='xr-var-data-in' type='checkbox'><label for='data-1c3f9056-d2a4-43eb-82f5-b0d5091d1fe5' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>crs_wkt :</span></dt><dd>GEOGCS[&quot;WGS 84&quot;,DATUM[&quot;WGS_1984&quot;,SPHEROID[&quot;WGS 84&quot;,6378137,298.257223563,AUTHORITY[&quot;EPSG&quot;,&quot;7030&quot;]],AUTHORITY[&quot;EPSG&quot;,&quot;6326&quot;]],PRIMEM[&quot;Greenwich&quot;,0,AUTHORITY[&quot;EPSG&quot;,&quot;8901&quot;]],UNIT[&quot;degree&quot;,0.0174532925199433,AUTHORITY[&quot;EPSG&quot;,&quot;9122&quot;]],AXIS[&quot;Latitude&quot;,NORTH],AXIS[&quot;Longitude&quot;,EAST],AUTHORITY[&quot;EPSG&quot;,&quot;4326&quot;]]</dd><dt><span>semi_major_axis :</span></dt><dd>6378137.0</dd><dt><span>semi_minor_axis :</span></dt><dd>6356752.314245179</dd><dt><span>inverse_flattening :</span></dt><dd>298.257223563</dd><dt><span>reference_ellipsoid_name :</span></dt><dd>WGS 84</dd><dt><span>longitude_of_prime_meridian :</span></dt><dd>0.0</dd><dt><span>prime_meridian_name :</span></dt><dd>Greenwich</dd><dt><span>geographic_crs_name :</span></dt><dd>WGS 84</dd><dt><span>horizontal_datum_name :</span></dt><dd>World Geodetic System 1984</dd><dt><span>grid_mapping_name :</span></dt><dd>latitude_longitude</dd><dt><span>spatial_ref :</span></dt><dd>GEOGCS[&quot;WGS 84&quot;,DATUM[&quot;WGS_1984&quot;,SPHEROID[&quot;WGS 84&quot;,6378137,298.257223563,AUTHORITY[&quot;EPSG&quot;,&quot;7030&quot;]],AUTHORITY[&quot;EPSG&quot;,&quot;6326&quot;]],PRIMEM[&quot;Greenwich&quot;,0,AUTHORITY[&quot;EPSG&quot;,&quot;8901&quot;]],UNIT[&quot;degree&quot;,0.0174532925199433,AUTHORITY[&quot;EPSG&quot;,&quot;9122&quot;]],AXIS[&quot;Latitude&quot;,NORTH],AXIS[&quot;Longitude&quot;,EAST],AUTHORITY[&quot;EPSG&quot;,&quot;4326&quot;]]</dd><dt><span>GeoTransform :</span></dt><dd>6.999583333333334 0.0008333333333333334 0.0 47.000416666666666 0.0 -0.0008333333333333334</dd></dl></div><div class='xr-var-data'><pre>[1 values with dtype=int64]</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-d6991f80-9291-41a7-954b-d60f6d989102' class='xr-section-summary-in' type='checkbox'  checked><label for='section-d6991f80-9291-41a7-954b-d60f6d989102' class='xr-section-summary' >Data variables: <span>(1)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span>DEM</span></div><div class='xr-var-dims'>(y, x)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>...</div><input id='attrs-2e9f2371-4349-4786-ad15-c80199023cb3' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-2e9f2371-4349-4786-ad15-c80199023cb3' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-3697bfc8-3be7-40ad-8395-6f5948abc630' class='xr-var-data-in' type='checkbox'><label for='data-3697bfc8-3be7-40ad-8395-6f5948abc630' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>AREA_OR_POINT :</span></dt><dd>Point</dd><dt><span>units :</span></dt><dd>m</dd></dl></div><div class='xr-var-data'><pre>[17288401 values with dtype=float32]</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-3ce20cd7-61ba-4008-8202-af4370a7db56' class='xr-section-summary-in' type='checkbox'  ><label for='section-3ce20cd7-61ba-4008-8202-af4370a7db56' class='xr-section-summary' >Indexes: <span>(2)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-index-name'><div>x</div></div><div class='xr-index-preview'>PandasIndex</div><div></div><input id='index-460fcada-61c4-4548-b770-3bc7ebaf196e' class='xr-index-data-in' type='checkbox'/><label for='index-460fcada-61c4-4548-b770-3bc7ebaf196e' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([               7.0, 7.0008333333333335,  7.001666666666667,\n                   7.0025,  7.003333333333333,  7.004166666666666,\n                    7.005,  7.005833333333333,  7.006666666666667,\n                   7.0075,\n       ...\n                  10.9925, 10.993333333333334, 10.994166666666667,\n       10.995000000000001, 10.995833333333334, 10.996666666666666,\n                  10.9975, 10.998333333333333, 10.999166666666667,\n                     11.0],\n      dtype=&#x27;float64&#x27;, name=&#x27;x&#x27;, length=4801))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>y</div></div><div class='xr-index-preview'>PandasIndex</div><div></div><input id='index-f6bc4cf9-7cf2-4431-9486-534475027b16' class='xr-index-data-in' type='checkbox'/><label for='index-f6bc4cf9-7cf2-4431-9486-534475027b16' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([              47.0,  46.99916666666667, 46.998333333333335,\n                  46.9975,  46.99666666666667,  46.99583333333333,\n                   46.995, 46.994166666666665,  46.99333333333333,\n                  46.9925,\n       ...\n                  44.0075,  44.00666666666667, 44.005833333333335,\n                   44.005,  44.00416666666666,  44.00333333333333,\n                  44.0025, 44.001666666666665,  44.00083333333333,\n                     44.0],\n      dtype=&#x27;float64&#x27;, name=&#x27;y&#x27;, length=3601))</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-aee65c64-6cb7-486e-b5dd-859b374e40cb' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-aee65c64-6cb7-486e-b5dd-859b374e40cb' class='xr-section-summary'  title='Expand/collapse section'>Attributes: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'></dl></div></li></ul></div></div>","content_type":"text/html"},"text/plain":{"content":"<xarray.Dataset> Size: 69MB\nDimensions:      (x: 4801, y: 3601)\nCoordinates:\n  * x            (x) float64 38kB 7.0 7.001 7.002 7.003 ... 11.0 11.0 11.0 11.0\n  * y            (y) float64 29kB 47.0 47.0 47.0 47.0 ... 44.0 44.0 44.0 44.0\n    spatial_ref  int64 8B ...\nData variables:\n    DEM          (y, x) float32 69MB ...","content_type":"text/plain"}}}],"key":"koSUM8K5QF"}],"key":"VWCaqRw5KK"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":1,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Extract radar parameters","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"m47MXJfDfE"}],"identifier":"extract-radar-parameters","label":"Extract radar parameters","html_id":"extract-radar-parameters","implicit":true,"key":"O6KuFjrvfI"}],"key":"HMbL563uZZ"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-06-25T20:15:27.563984Z","iopub.status.busy":"2025-06-25T20:15:27.563602Z","iopub.status.idle":"2025-06-25T20:15:27.566361Z","shell.execute_reply":"2025-06-25T20:15:27.565901Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"radar_parameters = dtree[\"radar_parameters\"]","key":"O3GiYD5hHY"},{"type":"output","id":"4RaNEMOkzShsw573cFLKI","data":[],"key":"mFcB71Jfn6"}],"key":"G0eKWftByo"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-06-25T20:15:27.568290Z","iopub.status.busy":"2025-06-25T20:15:27.567933Z","iopub.status.idle":"2025-06-25T20:15:27.573132Z","shell.execute_reply":"2025-06-25T20:15:27.572634Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"bw = radar_parameters[\"radar_beam_width_h\"]\nbw","key":"PEsS790Nha"},{"type":"output","id":"in6woKz_jx6kzBD3yYePD","data":[{"output_type":"execute_result","execution_count":9,"metadata":{},"data":{"text/html":{"content":"<div><svg style=\"position: absolute; width: 0; height: 0; overflow: hidden\">\n<defs>\n<symbol id=\"icon-database\" viewBox=\"0 0 32 32\">\n<path d=\"M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z\"></path>\n<path d=\"M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n<path d=\"M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n</symbol>\n<symbol id=\"icon-file-text2\" viewBox=\"0 0 32 32\">\n<path d=\"M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z\"></path>\n<path d=\"M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n<path d=\"M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n<path d=\"M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n</symbol>\n</defs>\n</svg>\n<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.\n *\n */\n\n:root {\n  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));\n  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));\n  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));\n  --xr-border-color: var(--jp-border-color2, #e0e0e0);\n  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);\n  --xr-background-color: var(--jp-layout-color0, white);\n  --xr-background-color-row-even: var(--jp-layout-color1, white);\n  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);\n}\n\nhtml[theme=dark],\nhtml[data-theme=dark],\nbody[data-theme=dark],\nbody.vscode-dark {\n  --xr-font-color0: rgba(255, 255, 255, 1);\n  --xr-font-color2: rgba(255, 255, 255, 0.54);\n  --xr-font-color3: rgba(255, 255, 255, 0.38);\n  --xr-border-color: #1F1F1F;\n  --xr-disabled-color: #515151;\n  --xr-background-color: #111111;\n  --xr-background-color-row-even: #111111;\n  --xr-background-color-row-odd: #313131;\n}\n\n.xr-wrap {\n  display: block !important;\n  min-width: 300px;\n  max-width: 700px;\n}\n\n.xr-text-repr-fallback {\n  /* fallback to plain text repr when CSS is not injected (untrusted notebook) */\n  display: none;\n}\n\n.xr-header {\n  padding-top: 6px;\n  padding-bottom: 6px;\n  margin-bottom: 4px;\n  border-bottom: solid 1px var(--xr-border-color);\n}\n\n.xr-header > div,\n.xr-header > ul {\n  display: inline;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n.xr-obj-type,\n.xr-array-name {\n  margin-left: 2px;\n  margin-right: 10px;\n}\n\n.xr-obj-type {\n  color: var(--xr-font-color2);\n}\n\n.xr-sections {\n  padding-left: 0 !important;\n  display: grid;\n  grid-template-columns: 150px auto auto 1fr 0 20px 0 20px;\n}\n\n.xr-section-item {\n  display: contents;\n}\n\n.xr-section-item input {\n  display: inline-block;\n  opacity: 0;\n}\n\n.xr-section-item input + label {\n  color: var(--xr-disabled-color);\n}\n\n.xr-section-item input:enabled + label {\n  cursor: pointer;\n  color: var(--xr-font-color2);\n}\n\n.xr-section-item input:focus + label {\n  border: 2px solid var(--xr-font-color0);\n}\n\n.xr-section-item input:enabled + label:hover {\n  color: var(--xr-font-color0);\n}\n\n.xr-section-summary {\n  grid-column: 1;\n  color: var(--xr-font-color2);\n  font-weight: 500;\n}\n\n.xr-section-summary > span {\n  display: inline-block;\n  padding-left: 0.5em;\n}\n\n.xr-section-summary-in:disabled + label {\n  color: var(--xr-font-color2);\n}\n\n.xr-section-summary-in + label:before {\n  display: inline-block;\n  content: '►';\n  font-size: 11px;\n  width: 15px;\n  text-align: center;\n}\n\n.xr-section-summary-in:disabled + label:before {\n  color: var(--xr-disabled-color);\n}\n\n.xr-section-summary-in:checked + label:before {\n  content: '▼';\n}\n\n.xr-section-summary-in:checked + label > span {\n  display: none;\n}\n\n.xr-section-summary,\n.xr-section-inline-details {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n.xr-section-inline-details {\n  grid-column: 2 / -1;\n}\n\n.xr-section-details {\n  display: none;\n  grid-column: 1 / -1;\n  margin-bottom: 5px;\n}\n\n.xr-section-summary-in:checked ~ .xr-section-details {\n  display: contents;\n}\n\n.xr-array-wrap {\n  grid-column: 1 / -1;\n  display: grid;\n  grid-template-columns: 20px auto;\n}\n\n.xr-array-wrap > label {\n  grid-column: 1;\n  vertical-align: top;\n}\n\n.xr-preview {\n  color: var(--xr-font-color3);\n}\n\n.xr-array-preview,\n.xr-array-data {\n  padding: 0 5px !important;\n  grid-column: 2;\n}\n\n.xr-array-data,\n.xr-array-in:checked ~ .xr-array-preview {\n  display: none;\n}\n\n.xr-array-in:checked ~ .xr-array-data,\n.xr-array-preview {\n  display: inline-block;\n}\n\n.xr-dim-list {\n  display: inline-block !important;\n  list-style: none;\n  padding: 0 !important;\n  margin: 0;\n}\n\n.xr-dim-list li {\n  display: inline-block;\n  padding: 0;\n  margin: 0;\n}\n\n.xr-dim-list:before {\n  content: '(';\n}\n\n.xr-dim-list:after {\n  content: ')';\n}\n\n.xr-dim-list li:not(:last-child):after {\n  content: ',';\n  padding-right: 5px;\n}\n\n.xr-has-index {\n  font-weight: bold;\n}\n\n.xr-var-list,\n.xr-var-item {\n  display: contents;\n}\n\n.xr-var-item > div,\n.xr-var-item label,\n.xr-var-item > .xr-var-name span {\n  background-color: var(--xr-background-color-row-even);\n  margin-bottom: 0;\n}\n\n.xr-var-item > .xr-var-name:hover span {\n  padding-right: 5px;\n}\n\n.xr-var-list > li:nth-child(odd) > div,\n.xr-var-list > li:nth-child(odd) > label,\n.xr-var-list > li:nth-child(odd) > .xr-var-name span {\n  background-color: var(--xr-background-color-row-odd);\n}\n\n.xr-var-name {\n  grid-column: 1;\n}\n\n.xr-var-dims {\n  grid-column: 2;\n}\n\n.xr-var-dtype {\n  grid-column: 3;\n  text-align: right;\n  color: var(--xr-font-color2);\n}\n\n.xr-var-preview {\n  grid-column: 4;\n}\n\n.xr-index-preview {\n  grid-column: 2 / 5;\n  color: var(--xr-font-color2);\n}\n\n.xr-var-name,\n.xr-var-dims,\n.xr-var-dtype,\n.xr-preview,\n.xr-attrs dt {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding-right: 10px;\n}\n\n.xr-var-name:hover,\n.xr-var-dims:hover,\n.xr-var-dtype:hover,\n.xr-attrs dt:hover {\n  overflow: visible;\n  width: auto;\n  z-index: 1;\n}\n\n.xr-var-attrs,\n.xr-var-data,\n.xr-index-data {\n  display: none;\n  background-color: var(--xr-background-color) !important;\n  padding-bottom: 5px !important;\n}\n\n.xr-var-attrs-in:checked ~ .xr-var-attrs,\n.xr-var-data-in:checked ~ .xr-var-data,\n.xr-index-data-in:checked ~ .xr-index-data {\n  display: block;\n}\n\n.xr-var-data > table {\n  float: right;\n}\n\n.xr-var-name span,\n.xr-var-data,\n.xr-index-name div,\n.xr-index-data,\n.xr-attrs {\n  padding-left: 25px !important;\n}\n\n.xr-attrs,\n.xr-var-attrs,\n.xr-var-data,\n.xr-index-data {\n  grid-column: 1 / -1;\n}\n\ndl.xr-attrs {\n  padding: 0;\n  margin: 0;\n  display: grid;\n  grid-template-columns: 125px auto;\n}\n\n.xr-attrs dt,\n.xr-attrs dd {\n  padding: 0;\n  margin: 0;\n  float: left;\n  padding-right: 10px;\n  width: auto;\n}\n\n.xr-attrs dt {\n  font-weight: normal;\n  grid-column: 1;\n}\n\n.xr-attrs dt:hover span {\n  display: inline-block;\n  background: var(--xr-background-color);\n  padding-right: 10px;\n}\n\n.xr-attrs dd {\n  grid-column: 2;\n  white-space: pre-wrap;\n  word-break: break-all;\n}\n\n.xr-icon-database,\n.xr-icon-file-text2,\n.xr-no-icon {\n  display: inline-block;\n  vertical-align: middle;\n  width: 1em;\n  height: 1.5em !important;\n  stroke-width: 0;\n  stroke: currentColor;\n  fill: currentColor;\n}\n</style><pre class='xr-text-repr-fallback'>&lt;xarray.DataArray &#x27;radar_beam_width_h&#x27; ()&gt; Size: 4B\narray(0.95000005, dtype=float32)\nAttributes:\n    long_name:   half_power_radar_beam_width_h_channel\n    units:       degrees\n    meta_group:  radar_parameters</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.DataArray</div><div class='xr-array-name'>'radar_beam_width_h'</div></div><ul class='xr-sections'><li class='xr-section-item'><div class='xr-array-wrap'><input id='section-ca91d55b-c7aa-4e4e-92c4-fe586fcd2c99' class='xr-array-in' type='checkbox' checked><label for='section-ca91d55b-c7aa-4e4e-92c4-fe586fcd2c99' title='Show/hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-array-preview xr-preview'><span>0.95</span></div><div class='xr-array-data'><pre>array(0.95000005, dtype=float32)</pre></div></div></li><li class='xr-section-item'><input id='section-5503c6d4-b708-4777-94a8-154b1af0cdae' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-5503c6d4-b708-4777-94a8-154b1af0cdae' class='xr-section-summary'  title='Expand/collapse section'>Coordinates: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'></ul></div></li><li class='xr-section-item'><input id='section-e9d2e67e-2190-41bb-8175-427392a0a838' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-e9d2e67e-2190-41bb-8175-427392a0a838' class='xr-section-summary'  title='Expand/collapse section'>Indexes: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'></ul></div></li><li class='xr-section-item'><input id='section-36929d36-c9f4-4609-8b7b-d04a590d18cd' class='xr-section-summary-in' type='checkbox'  checked><label for='section-36929d36-c9f4-4609-8b7b-d04a590d18cd' class='xr-section-summary' >Attributes: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'><dt><span>long_name :</span></dt><dd>half_power_radar_beam_width_h_channel</dd><dt><span>units :</span></dt><dd>degrees</dd><dt><span>meta_group :</span></dt><dd>radar_parameters</dd></dl></div></li></ul></div></div>","content_type":"text/html"},"text/plain":{"content":"<xarray.DataArray 'radar_beam_width_h' ()> Size: 4B\narray(0.95000005, dtype=float32)\nAttributes:\n    long_name:   half_power_radar_beam_width_h_channel\n    units:       degrees\n    meta_group:  radar_parameters","content_type":"text/plain"}}}],"key":"XrBHxrrRaP"}],"key":"JbBVv2Zh4q"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Prepare DEM for Polar Processing","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"BPTl6DWPpD"}],"identifier":"prepare-dem-for-polar-processing","label":"Prepare DEM for Polar Processing","html_id":"prepare-dem-for-polar-processing","implicit":true,"key":"r3NnStBXQk"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Here the power of ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"uozGRgkYuc"},{"type":"link","url":"https://docs.xarray.dev/en/stable/generated/xarray.apply_ufunc.html","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"xr.apply_ufunc","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"lqke9xd5ke"}],"urlSource":"https://docs.xarray.dev/en/stable/generated/xarray.apply_ufunc.html","key":"V3dD1JHsU2"},{"type":"text","value":" is shown, a wrapper to xarray-ify numpy functions.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"G4KjbmsbIy"}],"key":"mpkd6vXz0O"}],"key":"k6oUwbnw9Y"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-06-25T20:15:27.575118Z","iopub.status.busy":"2025-06-25T20:15:27.574953Z","iopub.status.idle":"2025-06-25T20:15:27.579114Z","shell.execute_reply":"2025-06-25T20:15:27.578650Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"def interpolate_dem(obj, dem, **kwargs):\n    dim0 = obj.wrl.util.dim0()\n\n    def wrapper(sx, sy, dx, dy, dem, *args, **kwargs):\n        y, x = np.meshgrid(dy, dx)\n        rastercoords = np.dstack([x, y])\n        polcoords = np.dstack([sx, sy])\n        return wrl.ipol.cart_to_irregular_spline(rastercoords, dem, polcoords, **kwargs)\n\n    out = xr.apply_ufunc(\n        wrapper,\n        obj.x,\n        obj.y,\n        dem.x,\n        dem.y,\n        dem,\n        input_core_dims=[[dim0, \"range\"], [dim0, \"range\"], [\"x\"], [\"y\"], [\"y\", \"x\"]],\n        output_core_dims=[[dim0, \"range\"]],\n        dask=\"parallelized\",\n        vectorize=True,\n        kwargs=kwargs,\n        dask_gufunc_kwargs=dict(allow_rechunk=True),\n    )\n    out.name = \"DEM\"\n    return obj.assign(DEM=out)","key":"QkowWV97XX"},{"type":"output","id":"xdUhcl5cXaF329Ts7eDrQ","data":[],"key":"qy9kbRlqd8"}],"key":"q1YDGzg8Yt"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-06-25T20:15:27.580811Z","iopub.status.busy":"2025-06-25T20:15:27.580649Z","iopub.status.idle":"2025-06-25T20:15:27.808467Z","shell.execute_reply":"2025-06-25T20:15:27.807907Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"swp = interpolate_dem(swp, dem.DEM, order=3, prefilter=False)","key":"wX7E7eV4VJ"},{"type":"output","id":"x2KR62FbpHHN9uv4srKpm","data":[],"key":"c010pj6IaN"}],"key":"MrDH8kdizT"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-06-25T20:15:27.810722Z","iopub.status.busy":"2025-06-25T20:15:27.810533Z","iopub.status.idle":"2025-06-25T20:15:28.129742Z","shell.execute_reply":"2025-06-25T20:15:28.129089Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"swp.DEM.wrl.vis.plot(cmap=\"terrain\", vmin=0)","key":"v01Cf1bCop"},{"type":"output","id":"FtCRcPeEpqdMsjVSlT9GA","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"1fce0bc8d4f439047f4c3d5f29fbc91b","path":"/ams2025/_preview/3/build/1fce0bc8d4f439047f4c3d5f29fbc91b.png"},"text/plain":{"content":"<Figure size 640x480 with 2 Axes>","content_type":"text/plain"}}}],"key":"omgxgM0Zhx"}],"key":"IVCvcnLjOQ"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot scan strategy","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"mz7goSR5Ys"}],"identifier":"plot-scan-strategy","label":"Plot scan strategy","html_id":"plot-scan-strategy","implicit":true,"key":"NPgMbJHdBy"}],"key":"HE56ayDICY"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-06-25T20:15:28.132373Z","iopub.status.busy":"2025-06-25T20:15:28.131978Z","iopub.status.idle":"2025-06-25T20:15:28.454531Z","shell.execute_reply":"2025-06-25T20:15:28.453971Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"nrays = swp.azimuth.size\nnbins = swp.range.size\nrange_res = 300.0\nranges = np.arange(nbins) * range_res\nelevs = dtree.root.sweep_fixed_angle.values\nsitecoords = (\n    dtree.root.longitude.values.item(),\n    dtree.root.latitude.values.item(),\n    dtree.root.altitude.values.item(),\n)\n\nax = wrl.vis.plot_scan_strategy(\n    ranges,\n    elevs,\n    sitecoords,\n    beamwidth=radar_parameters[\"radar_beam_width_h\"].values,\n    terrain=None,\n)","key":"zFmkmSHJAO"},{"type":"output","id":"0a3HfE_4nEKC6B4XuhaoC","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"497f54f8a85a68647e3915f740ef8478","path":"/ams2025/_preview/3/build/497f54f8a85a68647e3915f740ef8478.png"},"text/plain":{"content":"<Figure size 1600x800 with 1 Axes>","content_type":"text/plain"}}}],"key":"LlDp0HI2x7"}],"key":"XV4joFdhOa"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Use ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"UJmwNLC5Cg"},{"type":"inlineCode","value":"terrain=swp.DEM.sel(azimuth=0, method=\"nearest\")","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"YaDTeHsvdH"},{"type":"text","value":" to get some arbitrary ray.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"wvva70LvHH"}],"key":"k4XFIaBHax"}],"key":"AIBprFK5wA"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-06-25T20:15:28.457915Z","iopub.status.busy":"2025-06-25T20:15:28.457732Z","iopub.status.idle":"2025-06-25T20:15:28.953851Z","shell.execute_reply":"2025-06-25T20:15:28.953170Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"ax = wrl.vis.plot_scan_strategy(\n    ranges,\n    elevs,\n    sitecoords,\n    beamwidth=radar_parameters[\"radar_beam_width_h\"].values,\n    terrain=swp.DEM.sel(azimuth=0, method=\"nearest\"),\n)","key":"uACUCAcnq0"},{"type":"output","id":"6ano8Wq-A5lE7A-oaN1Tv","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"a4316c9fa501cda459e9097d0f2243e6","path":"/ams2025/_preview/3/build/a4316c9fa501cda459e9097d0f2243e6.png"},"text/plain":{"content":"<Figure size 1600x800 with 1 Axes>","content_type":"text/plain"}}}],"key":"P3mhW8mhpX"}],"key":"hv6kOeYvpW"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Calculate clutter map","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"paNPvZ9DWb"}],"identifier":"calculate-clutter-map","label":"Calculate clutter map","html_id":"calculate-clutter-map","implicit":true,"key":"IBwijCkfMl"}],"key":"HqcnqfVRC3"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-06-25T20:15:28.956483Z","iopub.status.busy":"2025-06-25T20:15:28.956088Z","iopub.status.idle":"2025-06-25T20:15:28.983822Z","shell.execute_reply":"2025-06-25T20:15:28.983232Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"clmap = swp.DBZ_TOT.wrl.classify.filter_gabella(\n    wsize=5,\n    thrsnorain=0.0,\n    tr1=21.0,  # 21.,\n    n_p=23.0,  # 23,\n    tr2=1.3,\n    rm_nans=False,\n)\nswp = swp.assign({\"CMAP\": clmap})","key":"govMAECr67"},{"type":"output","id":"L0YX7fU3EZmzHDiTCymHb","data":[],"key":"FZyLoz77lo"}],"key":"ptevZefuOo"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot Reflectivities, Clutter and Cluttermap","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"kKtOeAn8gy"}],"identifier":"plot-reflectivities-clutter-and-cluttermap","label":"Plot Reflectivities, Clutter and Cluttermap","html_id":"plot-reflectivities-clutter-and-cluttermap","implicit":true,"key":"bXyi8ANtse"}],"key":"Ygy5wRDfmt"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-06-25T20:15:28.986469Z","iopub.status.busy":"2025-06-25T20:15:28.986278Z","iopub.status.idle":"2025-06-25T20:15:30.158397Z","shell.execute_reply":"2025-06-25T20:15:30.157791Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"fig = plt.figure(figsize=(15, 12))\nax1 = fig.add_subplot(221)\nfrom osgeo import osr\n\nwgs84 = osr.SpatialReference()\nwgs84.ImportFromEPSG(4326)\n# swp = swp.sel(range=slice(0, 100000)).set_coords(\"sweep_mode\").wrl.georef.georeference(crs=wgs84)\nswp.DBZ_TOT.plot(x=\"x\", y=\"y\", ax=ax1, vmin=0, vmax=60)\nax1.set_title(\"Reflectivity raw\")\nax2 = fig.add_subplot(222)\nswp.CMAP.plot(x=\"x\", y=\"y\", ax=ax2)\nax2.set_title(\"Cluttermap\")\nax3 = fig.add_subplot(223)\nswp.DBZ_TOT.where(swp.CMAP == 1).plot(x=\"x\", y=\"y\", ax=ax3, vmin=0, vmax=60)\nax3.set_title(\"Clutter\")\nax4 = fig.add_subplot(224)\nswp.DBZ_TOT.where(swp.CMAP < 1).plot(x=\"x\", y=\"y\", ax=ax4, vmin=0, vmax=60)\nax4.set_title(\"Reflectivity clutter removed\")","key":"GfE17VBq9w"},{"type":"output","id":"ZG-yQWtwsJnCBii2DYrdL","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"65df9054bc3eb5caea89aa70f22641b7","path":"/ams2025/_preview/3/build/65df9054bc3eb5caea89aa70f22641b7.png"},"text/plain":{"content":"<Figure size 1500x1200 with 8 Axes>","content_type":"text/plain"}}}],"key":"xfwD0fNXRL"}],"key":"V4LkOFJTYm"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":1,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Compare with corrected reflectivity from signal processor","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"cWdSBiW3sD"}],"identifier":"compare-with-corrected-reflectivity-from-signal-processor","label":"Compare with corrected reflectivity from signal processor","html_id":"compare-with-corrected-reflectivity-from-signal-processor","implicit":true,"key":"dmCACNAA7M"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"plus additional simple RHOHV filter","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ld8m9xSPzJ"}],"key":"IlU4jADnR6"}],"key":"kjrGDgznRf"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-06-25T20:15:30.161480Z","iopub.status.busy":"2025-06-25T20:15:30.161105Z","iopub.status.idle":"2025-06-25T20:15:30.742393Z","shell.execute_reply":"2025-06-25T20:15:30.741723Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"fig = plt.figure(figsize=(15, 6))\nax1 = fig.add_subplot(121)\nswp.DBZ.plot(x=\"x\", y=\"y\", ax=ax1, vmin=0, vmax=60)\nax1.set_title(\"Reflectivity corr\")\nax2 = fig.add_subplot(122)\nswp.DBZ_TOT.where((swp.CMAP < 1) & (swp.RHOHV >= 0.8)).plot(\n    x=\"x\", y=\"y\", ax=ax2, vmin=0, vmax=60\n)\nax2.set_title(\"Reflectivity clutter removed\")","key":"HDMtwDegKW"},{"type":"output","id":"t3oWTi_7xvCjqKgmNAfTv","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"7b7fed8ddec163c226e97463b00253f4","path":"/ams2025/_preview/3/build/7b7fed8ddec163c226e97463b00253f4.png"},"text/plain":{"content":"<Figure size 1500x600 with 4 Axes>","content_type":"text/plain"}}}],"key":"Zatpvg73Sk"}],"key":"xmLFScNRbs"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-06-25T20:15:30.744815Z","iopub.status.busy":"2025-06-25T20:15:30.744625Z","iopub.status.idle":"2025-06-25T20:15:42.062291Z","shell.execute_reply":"2025-06-25T20:15:42.061678Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"fig = plt.figure(figsize=(8, 5))\nax1 = fig.add_subplot(111)\nswp.CMAP.where(swp.CMAP == 1).plot(x=\"x\", y=\"y\", vmin=0, vmax=1, cmap=\"turbo\")\nax1.set_title(\"Reflectivity corr\")\ndem.DEM.plot(ax=ax1, zorder=-2, cmap=\"terrain\", vmin=0)","key":"PRs3tYOwHl"},{"type":"output","id":"ldEne1_zQttBawtCMHAvY","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"2d201621d9b01f80934c0fdb2efb4829","path":"/ams2025/_preview/3/build/2d201621d9b01f80934c0fdb2efb4829.png"},"text/plain":{"content":"<Figure size 800x500 with 3 Axes>","content_type":"text/plain"}}}],"key":"zXtUuzjhhF"}],"key":"BlEhIbZuDJ"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":1,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Use hvplot for zooming and panning","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"mzhLctqCIZ"}],"identifier":"use-hvplot-for-zooming-and-panning","label":"Use hvplot for zooming and panning","html_id":"use-hvplot-for-zooming-and-panning","implicit":true,"key":"Xh1WtE3eUW"}],"key":"pK0aFheBFF"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"We need to rechunk the coordinates as hvplot needs chunked variables and coords.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"MGE0X5x9On"}],"key":"X1dvMcJeHi"}],"key":"FGySD0r49p"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-06-25T20:15:42.065477Z","iopub.status.busy":"2025-06-25T20:15:42.065040Z","iopub.status.idle":"2025-06-25T20:15:52.085235Z","shell.execute_reply":"2025-06-25T20:15:52.084165Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"cl = (\n    swp.CMAP.where(swp.CMAP == 1)\n    .chunk(chunks={})\n    .hvplot.quadmesh(\n        x=\"x\", y=\"y\", cmap=\"turbo\", width=600, height=500, clim=(0, 1), rasterize=True\n    )\n)\ndm = dem.DEM.chunk(chunks={}).hvplot(\n    x=\"x\", y=\"y\", cmap=\"terrain\", width=600, height=500, rasterize=True\n)\ndm * cl","key":"EUeHGZuzHo"},{"type":"output","id":"XVM_7DUd3M1RIph44R_tw","data":[{"output_type":"display_data","metadata":{},"data":{}},{"output_type":"execute_result","execution_count":19,"metadata":{"application/vnd.holoviews_exec.v0+json":{"id":"b8d38e90-5840-4eeb-9dbd-1c69722e280a"}},"data":{"application/vnd.holoviews_exec.v0+json":{"content_type":"application/vnd.holoviews_exec.v0+json","hash":"d41d8cd98f00b204e9800998ecf8427e","path":"/ams2025/_preview/3/build/d41d8cd98f00b204e9800998ecf8427e.json"},"text/html":{"content_type":"text/html","hash":"217a630fb984caade125559602e1ae32","path":"/ams2025/_preview/3/build/217a630fb984caade125559602e1ae32.html"},"text/plain":{"content":":DynamicMap   []\n   :Overlay\n      .Image.I  :Image   [x,y]   (DEM)\n      .Image.II :Image   [x,y]   (CMAP)","content_type":"text/plain"}}}],"key":"csquEsqGAC"}],"key":"tLyCvOP61e"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"BeamBlockage Calculation","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"hDdZNON64U"}],"identifier":"beamblockage-calculation","label":"BeamBlockage Calculation","html_id":"beamblockage-calculation","implicit":true,"key":"VOQXu9u5w5"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Can you xarray-ify the following, too?","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"yyarkzfKdQ"}],"key":"YOtybaDaRr"}],"key":"GaMQo1TS55"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-06-25T20:15:52.131330Z","iopub.status.busy":"2025-06-25T20:15:52.131102Z","iopub.status.idle":"2025-06-25T20:15:52.222612Z","shell.execute_reply":"2025-06-25T20:15:52.222044Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"beamradius = wrl.util.half_power_radius(swp.range, bw)\nPBB = wrl.qual.beam_block_frac(swp.DEM.values, swp.z.values, beamradius)\nPBB = np.ma.masked_invalid(PBB)\nCBB = wrl.qual.cum_beam_block_frac(PBB)","key":"XDuTBAxtiw"},{"type":"output","id":"ONPRO5nVYjwz597QdX_z6","data":[{"name":"stderr","output_type":"stream","text":"/srv/conda/envs/notebook/lib/python3.11/site-packages/wradlib/qual.py:184: RuntimeWarning: invalid value encountered in sqrt\n  numer = (ya * np.sqrt(a**2 - y**2)) + (a * np.arcsin(ya)) + (np.pi * a / 2.0)\n/srv/conda/envs/notebook/lib/python3.11/site-packages/wradlib/qual.py:184: RuntimeWarning: invalid value encountered in arcsin\n  numer = (ya * np.sqrt(a**2 - y**2)) + (a * np.arcsin(ya)) + (np.pi * a / 2.0)\n"}],"key":"sVGdPl05YX"}],"key":"i39G2Cglyy"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-06-25T20:15:52.224688Z","iopub.status.busy":"2025-06-25T20:15:52.224515Z","iopub.status.idle":"2025-06-25T20:15:52.228578Z","shell.execute_reply":"2025-06-25T20:15:52.228102Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"swp = swp.assign(\n    CBB=([\"azimuth\", \"range\"], CBB),\n    PBB=([\"azimuth\", \"range\"], PBB),\n)","key":"U3iwqYcNf7"},{"type":"output","id":"WX0EkJiFfxqVH9NpajAMO","data":[],"key":"cX9Q5Ik1zd"}],"key":"CuTowFZrqf"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-06-25T20:15:52.230426Z","iopub.status.busy":"2025-06-25T20:15:52.230262Z","iopub.status.idle":"2025-06-25T20:15:52.233372Z","shell.execute_reply":"2025-06-25T20:15:52.232899Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"# just a little helper function to style x and y axes of our maps\ndef annotate_map(ax, cm=None, title=\"\"):\n    # ticks = (ax.get_xticks() / 1000).astype(int)\n    # ax.set_xticklabels(ticks)\n    # ticks = (ax.get_yticks() / 1000).astype(int)\n    # ax.set_yticklabels(ticks)\n    # ax.set_xlabel(\"Kilometers\")\n    # ax.set_ylabel(\"Kilometers\")\n    if not cm is None:\n        plt.colorbar(cm, ax=ax)\n    if not title == \"\":\n        ax.set_title(title)\n    ax.grid()","key":"N3lCFb2vun"},{"type":"output","id":"nUMaGRNU9jDvwWZ0dqHhN","data":[],"key":"lZlgltYtEj"}],"key":"qIqGozwirW"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-06-25T20:15:52.235136Z","iopub.status.busy":"2025-06-25T20:15:52.234975Z","iopub.status.idle":"2025-06-25T20:15:53.067014Z","shell.execute_reply":"2025-06-25T20:15:53.066413Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"import matplotlib as mpl\n\nsitecoords = (swp.longitude.values, swp.latitude.values, swp.altitude.values)\nr = swp.range.values\naz = swp.azimuth.values\n\nalt = swp.z.values\nfig = plt.figure(figsize=(15, 12))\n\n# create subplots\nax1 = plt.subplot2grid((2, 2), (0, 0))\nax2 = plt.subplot2grid((2, 2), (0, 1))\nax3 = plt.subplot2grid((2, 2), (1, 0), colspan=2, rowspan=1)\n\n# azimuth angle\nangle = 0\n\n# Plot terrain (on ax1)\ndem_pm = swp.DEM.wrl.vis.plot(ax=ax1, cmap=mpl.cm.terrain, vmin=0.0, add_colorbar=False)\nswp.sel(azimuth=0, method=\"nearest\").plot.scatter(\n    x=\"x\", y=\"y\", marker=\".\", color=\"r\", alpha=0.2, ax=ax1\n)\nax1.plot(swp.longitude.values, swp.latitude.values, \"ro\")\nannotate_map(\n    ax1,\n    dem_pm,\n    \"Terrain within {0} km range\".format(np.max(swp.range.values / 1000.0) + 0.1),\n)\n\n# Plot CBB (on ax2)\ncbb = swp.CBB.wrl.vis.plot(ax=ax2, cmap=mpl.cm.PuRd, vmin=0, vmax=1, add_colorbar=False)\nannotate_map(ax2, cbb, \"Beam-Blockage Fraction\")\n\n# Plot single ray terrain profile on ax3\n(bc,) = ax3.plot(\n    swp.range / 1000.0, swp.z[angle, :], \"-b\", linewidth=3, label=\"Beam Center\"\n)\n(b3db,) = ax3.plot(\n    swp.range.values / 1000.0,\n    (swp.z[angle, :] + beamradius),\n    \":b\",\n    linewidth=1.5,\n    label=\"3 dB Beam width\",\n)\nax3.plot(swp.range / 1000.0, (swp.z[angle, :] - beamradius), \":b\")\nax3.fill_between(swp.range / 1000.0, 0.0, swp.DEM[angle, :], color=\"0.75\")\nax3.set_xlim(0.0, np.max(swp.range / 1000.0) + 0.1)\nax3.set_ylim(0.0, 3000)\nax3.set_xlabel(\"Range (km)\")\nax3.set_ylabel(\"Altitude (m)\")\nax3.grid()\n\naxb = ax3.twinx()\n(bbf,) = axb.plot(swp.range / 1000.0, swp.CBB[angle, :], \"-k\", label=\"BBF\")\naxb.set_ylabel(\"Beam-blockage fraction\")\naxb.set_ylim(0.0, 1.0)\naxb.set_xlim(0.0, np.max(swp.range / 1000.0) + 0.1)\n\n\nlegend = ax3.legend(\n    (bc, b3db, bbf),\n    (\"Beam Center\", \"3 dB Beam width\", \"BBF\"),\n    loc=\"upper left\",\n    fontsize=10,\n)","key":"EM9M6CxkDd"},{"type":"output","id":"GGf4xn8lqIQQOf9WLl5jw","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"8fa10aecf8f197c4843a55a56c9758c6","path":"/ams2025/_preview/3/build/8fa10aecf8f197c4843a55a56c9758c6.png"},"text/plain":{"content":"<Figure size 1500x1200 with 6 Axes>","content_type":"text/plain"}}}],"key":"YWrtxqcmB5"}],"key":"nITKMilbW2"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Some EyeCandy","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"iLJU1GS7Aa"}],"identifier":"some-eyecandy","label":"Some EyeCandy","html_id":"some-eyecandy","implicit":true,"key":"oOHhmpMM1q"}],"key":"v66SI0JCSl"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-06-25T20:15:53.069701Z","iopub.status.busy":"2025-06-25T20:15:53.069371Z","iopub.status.idle":"2025-06-25T20:15:53.072581Z","shell.execute_reply":"2025-06-25T20:15:53.072089Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"def height_formatter(x, pos):\n    x = (x - 6370000) / 1000\n    fmt_str = \"{:g}\".format(x)\n    return fmt_str\n\n\ndef range_formatter(x, pos):\n    x = x / 1000.0\n    fmt_str = \"{:g}\".format(x)\n    return fmt_str","key":"IQzy3mGR7b"},{"type":"output","id":"J_O0rvyCcthbpMw5druL1","data":[],"key":"NQQJDOmfOz"}],"key":"RGUglFQRyn"},{"type":"block","kind":"notebook-code","data":{"execution":{"iopub.execute_input":"2025-06-25T20:15:53.074376Z","iopub.status.busy":"2025-06-25T20:15:53.074120Z","iopub.status.idle":"2025-06-25T20:15:53.377941Z","shell.execute_reply":"2025-06-25T20:15:53.377401Z"}},"children":[{"type":"code","lang":"python","executable":true,"value":"fig = plt.figure(figsize=(10, 6))\n\ncgax, caax, paax = wrl.vis.create_cg(fig=fig, rot=0, scale=1)\n\n# azimuth angle\nangle = 0\n\n# fix grid_helper\ner = 6370000\ngh = cgax.get_grid_helper()\ngh.grid_finder.grid_locator2._nbins = 80\ngh.grid_finder.grid_locator2._steps = [1, 2, 4, 5, 10]\n\n# calculate beam_height and arc_distance for ke=1\n# means line of sight\nbhe = wrl.georef.bin_altitude(r, 0, sitecoords[2], re=er, ke=1.0)\nade = wrl.georef.bin_distance(r, 0, sitecoords[2], re=er, ke=1.0)\nnn0 = np.zeros_like(r)\n# for nice plotting we assume earth_radius = 6370000 m\necp = nn0 + er\n# theta (arc_distance sector angle)\nthetap = -np.degrees(ade / er) + 90.0\n\n# zero degree elevation with standard refraction\nbh0 = wrl.georef.bin_altitude(r, 0, sitecoords[2], re=er)\n\n# plot (ecp is earth surface normal null)\n(bes,) = paax.plot(thetap, ecp, \"-k\", linewidth=3, label=\"Earth Surface NN\")\n(bc,) = paax.plot(thetap, ecp + alt[angle, :], \"-b\", linewidth=3, label=\"Beam Center\")\n(bc0r,) = paax.plot(thetap, ecp + bh0, \"-g\", label=\"0 deg Refraction\")\n(bc0n,) = paax.plot(thetap, ecp + bhe, \"-r\", label=\"0 deg line of sight\")\n(b3db,) = paax.plot(\n    thetap, ecp + alt[angle, :] + beamradius, \":b\", label=\"+3 dB Beam width\"\n)\npaax.plot(thetap, ecp + alt[angle, :] - beamradius, \":b\", label=\"-3 dB Beam width\")\n\n# orography\npaax.fill_between(thetap, ecp, ecp + swp.DEM[angle, :], color=\"0.75\")\n\n# shape axes\ncgax.set_xlim(0, np.max(ade))\ncgax.set_ylim([ecp.min() - 1000, ecp.max() + 2500])\ncaax.grid(True, axis=\"x\")\ncgax.grid(True, axis=\"y\")\ncgax.axis[\"top\"].toggle(all=False)\ncaax.yaxis.set_major_locator(\n    mpl.ticker.MaxNLocator(steps=[1, 2, 4, 5, 10], nbins=20, prune=\"both\")\n)\ncaax.xaxis.set_major_locator(mpl.ticker.MaxNLocator())\ncaax.yaxis.set_major_formatter(mpl.ticker.FuncFormatter(height_formatter))\ncaax.xaxis.set_major_formatter(mpl.ticker.FuncFormatter(range_formatter))\n\ncaax.set_xlabel(\"Range (km)\")\ncaax.set_ylabel(\"Altitude (km)\")\n\nlegend = paax.legend(\n    (bes, bc0n, bc0r, bc, b3db),\n    (\n        \"Earth Surface NN\",\n        \"0 deg line of sight\",\n        \"0 deg std refraction\",\n        \"Beam Center\",\n        \"3 dB Beam width\",\n    ),\n    loc=\"lower left\",\n    fontsize=10,\n)","key":"TR1cc9GsXX"},{"type":"output","id":"_Op-__9YkqAu2q_vqzDou","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"a7e6050667891433ae1c6efd99394117","path":"/ams2025/_preview/3/build/a7e6050667891433ae1c6efd99394117.png"},"text/plain":{"content":"<Figure size 1000x600 with 1 Axes>","content_type":"text/plain"}}}],"key":"Rjlt8Zdemi"}],"key":"ku6Y1hCe0a"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"thematicBreak","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"b2jj4iSoTx"}],"key":"Jc6Lrqr359"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Summary","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"T66hFhrnYl"}],"identifier":"summary","label":"Summary","html_id":"summary","implicit":true,"key":"tVGGUwONlD"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"We’ve just learned how to use ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"Q30vriVRnT"},{"type":"inlineMath","value":"\\omega radlib","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ω</mi><mi>r</mi><mi>a</mi><mi>d</mi><mi>l</mi><mi>i</mi><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">\\omega radlib</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">ω</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">ib</span></span></span></span>","key":"i3GAbKLzQu"},{"type":"text","value":"’s Gabella clutter detection for single sweeps. We’ve looked into digital elevation maps and beam blockage calculations.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"Hyti9WwKgj"}],"key":"VeV5IhD03x"}],"key":"jxBL1wGckP"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Resources and references","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"wiHFxh9Hip"}],"identifier":"resources-and-references","label":"Resources and references","html_id":"resources-and-references","implicit":true,"key":"TgIjRC1Wik"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"link","url":"https://docs.xarray.dev","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"xarray","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"uNAsvaQ4wH"}],"urlSource":"https://docs.xarray.dev","key":"CbxrQ1Gy67"}],"key":"tI7XOMHk8K"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"link","url":"https://docs.dask.org/","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"dask","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"MCUQ9qC4eq"}],"urlSource":"https://docs.dask.org/","key":"RHZ1DtLR1C"}],"key":"sTmpwhXv4u"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"link","url":"https://gdal.org","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"GDAL","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"cLDS1uhFH6"}],"urlSource":"https://gdal.org","key":"rJ9CueUEQK"}],"key":"VefyKY93uA"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"link","url":"https://docs.openradarscience.org/projects/xradar/en/stable/importers.html","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"xradar backends","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"VpZWDWDNV1"}],"urlSource":"https://docs.openradarscience.org/projects/xradar/en/stable/importers.html","key":"KJzmq8zrnC"}],"key":"Y4nSdpG1ow"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"link","url":"https://ncar.github.io/CfRadial/","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"CfRadial1","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"KZhfPiS2za"}],"urlSource":"https://ncar.github.io/CfRadial/","key":"L5rkN72Pqx"}],"key":"FZ5br8wUo7"}],"key":"WjHK0sBIWY"}],"key":"IJLGh9jlb8"}],"key":"M4oXWrmM4U"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Py-ART Basics with Xradar","url":"/pyart-basics","group":"Py-ART and wradlib"},"next":{"title":"Introduction to GPM-API","url":"/gpm-api-intro","group":"Py-ART and wradlib"}}},"domain":"http://localhost:3000"}