{"version":2,"kind":"Notebook","sha256":"97ec28446e8911cdc9f1d2d3e018b33543bfd7e20e8a6abf8036a40f8441f4c3","slug":"baltrad-io","location":"/notebooks/baltrad/baltrad_short_course/0_BALTRAD_IO.ipynb","dependencies":[],"frontmatter":{"title":"I/O model","content_includes_title":false,"authors":[{"nameParsed":{"literal":"Alfonso Ladino","given":"Alfonso","family":"Ladino"},"name":"Alfonso Ladino","orcid":"0000-0001-8081-7827","github":"aladinor","id":"contributors-myst-generated-uid-0"},{"nameParsed":{"literal":"Anna del Moral Méndez","given":"Anna","non_dropping_particle":"del","family":"Moral Méndez"},"name":"Anna del Moral Méndez","orcid":"0000-0002-5015-840X","id":"contributors-myst-generated-uid-1"},{"nameParsed":{"literal":"Brenda Javornik","given":"Brenda","family":"Javornik"},"name":"Brenda Javornik","orcid":"0009-0004-9266-9293","github":"leavesntwigs","id":"contributors-myst-generated-uid-2"},{"nameParsed":{"literal":"Daniel Michelson","given":"Daniel","family":"Michelson"},"name":"Daniel Michelson","orcid":"0000-0003-3222-9881","github":"DanielMichelson","id":"contributors-myst-generated-uid-3"},{"nameParsed":{"literal":"Daniel Wolfensberger","given":"Daniel","family":"Wolfensberger"},"name":"Daniel Wolfensberger","orcid":"0009-0006-1419-0556","github":"wolfidan","id":"contributors-myst-generated-uid-4"},{"nameParsed":{"literal":"Gionata Ghiggi","given":"Gionata","family":"Ghiggi"},"name":"Gionata Ghiggi","orcid":"0000-0002-0818-0865","github":"ghiggi","id":"contributors-myst-generated-uid-5"},{"nameParsed":{"literal":"Jen DeHart","given":"Jen","family":"DeHart"},"name":"Jen DeHart","orcid":"0000-0001-8536-4927","github":"jcdehart","id":"contributors-myst-generated-uid-6"},{"nameParsed":{"literal":"Jordi Figueras i Ventura","given":"Jordi Figueras","non_dropping_particle":"i","family":"Ventura"},"name":"Jordi Figueras i Ventura","orcid":"0000-0002-4949-422X","github":"jfigui","id":"contributors-myst-generated-uid-7"},{"nameParsed":{"literal":"Julian Giles","given":"Julian","family":"Giles"},"name":"Julian Giles","orcid":"0000-0001-8134-008X","github":"JulianGiles","id":"contributors-myst-generated-uid-8"},{"nameParsed":{"literal":"Kai Mühlbauer","given":"Kai","family":"Mühlbauer"},"name":"Kai Mühlbauer","orcid":"0000-0001-6599-1034","github":"kmuehlbauer","id":"contributors-myst-generated-uid-9"},{"nameParsed":{"literal":"Maxwell Grover","given":"Maxwell","family":"Grover"},"name":"Maxwell Grover","orcid":"0000-0002-0370-8974","github":"mgrover1","id":"contributors-myst-generated-uid-10"},{"nameParsed":{"literal":"Mike Dixon","given":"Mike","family":"Dixon"},"name":"Mike Dixon","orcid":"0000-0002-9597-9113","github":"mike-dixon","id":"contributors-myst-generated-uid-11"},{"nameParsed":{"literal":"Robert Jackson","given":"Robert","family":"Jackson"},"name":"Robert Jackson","orcid":"0000-0003-2518-1234","github":"rcjackson","id":"contributors-myst-generated-uid-12"},{"nameParsed":{"literal":"Scott Collis","given":"Scott","family":"Collis"},"name":"Scott Collis","orcid":"0000-0002-2303-687X","github":"scollis","id":"contributors-myst-generated-uid-13"},{"nameParsed":{"literal":"Ting-Yu Cha","given":"Ting-Yu","family":"Cha"},"name":"Ting-Yu Cha","orcid":"0000-0002-6292-8483","github":"tingyucha","id":"contributors-myst-generated-uid-14"}],"open_access":true,"license":{"content":{"id":"Apache-2.0","url":"https://opensource.org/licenses/Apache-2.0","name":"Apache License 2.0","free":true,"osi":true},"code":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true}},"github":"https://github.com/openradar/erad2024","copyright":"2024","abbreviations":{"ARM":"Atmospheric Radiation Measurement","NCAR":"National Center for Atmospheric Research"},"settings":{"output_matplotlib_strings":"remove"},"numbering":{"title":{"offset":2}},"exports":[{"format":"ipynb","filename":"0_BALTRAD_IO.ipynb","url":"/ams2025/build/0_BALTRAD_IO-0ed10db7f7bdfb2a96e709c1388a2332.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"making sense out of data and metadata","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"q6vM1UzF7o"}],"key":"SsLCgJ09Z3"}],"key":"AHe7xxUnQ6"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"retrieve data from s3 bucket","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"HHq6xZOG66"}],"identifier":"retrieve-data-from-s3-bucket","label":"retrieve data from s3 bucket","html_id":"retrieve-data-from-s3-bucket","implicit":true,"key":"P6xa2jDmEd"}],"key":"IZBTf7jS5X"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import os\nimport urllib.request\nfrom pathlib import Path\n\n# Set the URL for the cloud\nURL = \"https://js2.jetstream-cloud.org:8001/\"\n!mkdir -p data\nfiles = [\n    \"pythia/radar/erad2024/baltrad/baltrad_short_course/201405190715_SUR.h5\",\n]\nfor file in files:\n    name = os.path.join(\"data\", Path(file).name)\n    if not os.path.exists(name):\n        print(f\"downloading, {name}\")\n        urllib.request.urlretrieve(f\"{URL}{file}\", name)","key":"ZOpXivpL37"},{"type":"output","id":"X0dvlMH9d8K2rmWncPn8B","data":[],"key":"jsQrAtvGGF"}],"key":"Jo3hi1G7mq"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Import the file I/O module along with the main RAVE module containing useful constants","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"XtPjANwCt3"}],"identifier":"import-the-file-i-o-module-along-with-the-main-rave-module-containing-useful-constants","label":"Import the file I/O module along with the main RAVE module containing useful constants","html_id":"import-the-file-i-o-module-along-with-the-main-rave-module-containing-useful-constants","implicit":true,"key":"XiY5KjKUhq"}],"key":"heS1v4y6tk"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"%matplotlib inline\nimport _raveio, _rave","key":"oXSiGbug0I"},{"type":"output","id":"lJ4Ga8uKZqH51x0tSvuXD","data":[],"key":"qtd9DP1eMV"}],"key":"azl04RNjCh"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Read an input ODIM_H5 file","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"YLTGvNz5FE"}],"identifier":"read-an-input-odim-h5-file","label":"Read an input ODIM_H5 file","html_id":"read-an-input-odim-h5-file","implicit":true,"key":"omJ8ZAFbhD"}],"key":"CtLJcSZsr0"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"rio = _raveio.open(\"data/201405190715_SUR.h5\")","key":"UdoiFqCLww"},{"type":"output","id":"RS-ZmZC5hBQCquYXkYbKV","data":[],"key":"cel9KKO1HV"}],"key":"hLuE4QUZ8Y"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"What is the payload in the I/O container?","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"t02xvdMZFi"}],"identifier":"what-is-the-payload-in-the-i-o-container","label":"What is the payload in the I/O container?","html_id":"what-is-the-payload-in-the-i-o-container","implicit":true,"key":"JJpEjT5aJs"}],"key":"I8qGGFbMkd"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"rio.objectType is _rave.Rave_ObjectType_PVOL","key":"ZJdVlMIJcj"},{"type":"output","id":"XZyC1QS1ij3jbAl3Zb7Xq","data":[],"key":"tTCi9al3Di"}],"key":"mjC4eTbDQd"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"How many scans does this volume contain?","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"xwPrlrJ1A8"}],"identifier":"how-many-scans-does-this-volume-contain","label":"How many scans does this volume contain?","html_id":"how-many-scans-does-this-volume-contain","implicit":true,"key":"dFC5hHrVws"}],"key":"yCDnptXwTe"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"pvol = rio.object\nprint(\"%i scans in polar volume\" % pvol.getNumberOfScans())","key":"UVSm8eaNrY"},{"type":"output","id":"3JAdQ5MF_S4XO9NEX8iwB","data":[],"key":"Ij5F1KmJOu"}],"key":"V5Ujga0bis"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Ascending or descending scan strategy?","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"LXapSbDDmX"}],"identifier":"ascending-or-descending-scan-strategy","label":"Ascending or descending scan strategy?","html_id":"ascending-or-descending-scan-strategy","implicit":true,"key":"Fl6LD1Wi0a"}],"key":"lUd69hgNLn"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"pvol.isAscendingScans()","key":"ZU2matRGJa"},{"type":"output","id":"qO7ui_g3Hyp2C6AGR9iiM","data":[],"key":"RMdWXsF2ZL"}],"key":"xt24t0xRBi"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Where is this site?","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"oGgPqkNJoa"}],"identifier":"where-is-this-site","label":"Where is this site?","html_id":"where-is-this-site","implicit":true,"key":"Gjl1owyGd9"}],"key":"mO14ZByN7h"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Note that all angles are represented internally in radians","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ULlF8l6DQ5"}],"identifier":"note-that-all-angles-are-represented-internally-in-radians","label":"Note that all angles are represented internally in radians","html_id":"note-that-all-angles-are-represented-internally-in-radians","implicit":true,"key":"WLBWLmJjbX"}],"key":"SqXl431mn6"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"from Proj import rd\n\nprint(\n    \"Site is located at %2.3f° lon, %2.3f° lat and %3.1f masl\"\n    % (pvol.longitude * rd, pvol.latitude * rd, pvol.height)\n)\nprint(\"Site's ODIM source identifiers are: %s\" % pvol.source)","key":"o5PfqnbC4y"},{"type":"output","id":"lE4bnxJJqiXemGldbnEtd","data":[],"key":"kcQ1ngj5gw"}],"key":"KZ1umMKw32"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Access lowest scan and query some characteristics","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"rUmILaW0Na"}],"identifier":"access-lowest-scan-and-query-some-characteristics","label":"Access lowest scan and query some characteristics","html_id":"access-lowest-scan-and-query-some-characteristics","implicit":true,"key":"KrSqjbNMDF"}],"key":"pQuuyrzdsE"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"scan = pvol.getScan(0)\nnrays, nbins = scan.nrays, scan.nbins\nprint(\"Elevation angle %2.1f°\" % (scan.elangle * rd))\nprint(\"%i rays per sweep\" % nrays)\nprint(\"%i bins per ray\" % nbins)\nprint(\"%3.1f meter range bins\" % scan.rscale)\nprint(\"First ray scanned is ray %i (indexing starts at 0)\" % scan.a1gate)\nprint(\"Data acquisition started on %s:%sZ\" % (scan.startdate, scan.starttime))\nprint(\"Data acquisition ended on %s:%sZ\" % (scan.enddate, scan.endtime))\nprint(\n    \"Scan contains %i quantities: %s\"\n    % (len(scan.getParameterNames()), scan.getParameterNames())\n)","key":"gRWkQu9sIx"},{"type":"output","id":"8nAZXq-Tz0_futq7TFpMS","data":[],"key":"ehQi8ySWTY"}],"key":"O0SD6ju7Rk"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Access horizontal reflectivity and query some characteristics","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"G1uKkgP1Xg"}],"identifier":"access-horizontal-reflectivity-and-query-some-characteristics","label":"Access horizontal reflectivity and query some characteristics","html_id":"access-horizontal-reflectivity-and-query-some-characteristics","implicit":true,"key":"ngPl7mkJg9"}],"key":"nBXWqJbNih"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"dbzh = scan.getParameter(\"DBZH\")\nprint(\"Quantity is %s\" % dbzh.quantity)\nprint(\"8-bit unsigned byte data? %s\" % str(dbzh.datatype is _rave.RaveDataType_UCHAR))\nprint(\n    \"Linear scaling coefficients from 0-255 to dBZ: gain=%2.1f, offset=%2.1f\"\n    % (dbzh.gain, dbzh.offset)\n)\nprint(\n    \"Unradiated areas = %2.1f, radiated areas with no echo = %2.1f\"\n    % (dbzh.nodata, dbzh.undetect)\n)\n\ndbzh_data = dbzh.getData()  # Accesses the NumPy array containing the reflectivities\nprint(\n    \"NumPy array's dimensions = %s and type = %s\"\n    % (str(dbzh_data.shape), dbzh_data.dtype)\n)","key":"KZfxWT6zQg"},{"type":"output","id":"yyQz3DHsA_PtevESdAFGU","data":[],"key":"AJWpuHywia"}],"key":"jFBmnrAlAW"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"A primitive visualizer for plotting B-scans","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"eYkaverr2X"}],"identifier":"a-primitive-visualizer-for-plotting-b-scans","label":"A primitive visualizer for plotting B-scans","html_id":"a-primitive-visualizer-for-plotting-b-scans","implicit":true,"key":"LU9ENAPTE6"}],"key":"v3ltptq4tL"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Convenience functionality. First convert a palette from GoogleMapsPlugin for use with matplotlib\nimport matplotlib\nfrom GmapColorMap import dbzh as pal\n\ncolorlist = []\nfor i in range(0, len(pal), 3):\n    colorlist.append([pal[i] / 255.0, pal[i + 1] / 255.0, pal[i + 2] / 255.0])\n\n# Then create a simple plotter\nimport matplotlib.pyplot as plt\n\n\ndef plot(data):\n    fig = plt.figure(figsize=(16, 12))\n    plt.title(\"B-scan\")\n    plt.imshow(data, cmap=matplotlib.colors.ListedColormap(colorlist), clim=(0, 255))\n    plt.colorbar(shrink=float(nrays) / nbins)","key":"kDukYaqTjQ"},{"type":"output","id":"oc_IAecf512-0LV5qTacW","data":[],"key":"dWAXk06Ifu"}],"key":"lFa1o51mgs"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"plot(dbzh_data)","key":"PMyQYMQgmN"},{"type":"output","id":"yQYX9b6Z_JQ7usNk770wT","data":[],"key":"V8972yDmxS"}],"key":"IC3seHwhqo"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Management of optional metadata","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Pi4x8m9Hnz"}],"identifier":"management-of-optional-metadata","label":"Management of optional metadata","html_id":"management-of-optional-metadata","implicit":true,"key":"NVl8mQ0EA9"}],"key":"dljnsE3KC0"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"While manadatory metadata are represented as object attributes in Python, optional metadata are not!","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ZqOzi0Qy5J"}],"identifier":"while-manadatory-metadata-are-represented-as-object-attributes-in-python-optional-metadata-are-not","label":"While manadatory metadata are represented as object attributes in Python, optional metadata are not!","html_id":"while-manadatory-metadata-are-represented-as-object-attributes-in-python-optional-metadata-are-not","implicit":true,"key":"USv7WspYKs"}],"key":"K9pnYOYXg4"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"print(\"Polar volume has %i optional attributes\" % len(pvol.getAttributeNames()))\nprint(\"Polar scan has %i optional attributes\" % len(scan.getAttributeNames()))\nprint(\n    \"Quantity %s has %i optional attributes\"\n    % (dbzh.quantity, len(dbzh.getAttributeNames()))\n)\n\nprint(\"Mandatory attribute: beamwidth is %2.1f°\" % (pvol.beamwidth * rd))\nprint(\n    \"Optional attributes: Radar is a %s running %s\"\n    % (pvol.getAttribute(\"how/system\"), pvol.getAttribute(\"how/software\"))\n)","key":"lShNc6fryO"},{"type":"output","id":"qLQrXUqi8dHHzR9cVGwpB","data":[],"key":"fYwNr9uIfo"}],"key":"KuTseuthYa"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Add a bogus attribute","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"mBu3Yo7aca"}],"identifier":"add-a-bogus-attribute","label":"Add a bogus attribute","html_id":"add-a-bogus-attribute","implicit":true,"key":"QtQTSREbIt"}],"key":"OJZVPxX1Wm"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"dbzh.addAttribute(\"how/foo\", \"bar\")\nprint(\n    \"Quantity %s now has %i optional attributes\"\n    % (dbzh.quantity, len(dbzh.getAttributeNames()))\n)","key":"cGIlCMQESg"},{"type":"output","id":"gBH4G8mPtfE_3ey_MfwIM","data":[],"key":"tZL1ELcScU"}],"key":"nglBEjfvkw"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Create an empty parameter and populate it","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"EBIPIYa2ZZ"}],"identifier":"create-an-empty-parameter-and-populate-it","label":"Create an empty parameter and populate it","html_id":"create-an-empty-parameter-and-populate-it","implicit":true,"key":"cWN0GqwkAC"}],"key":"VMmT6LfcIr"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import _polarscanparam\n\nparam = _polarscanparam.new()\nparam.quantity = \"DBZH\"\nparam.nodata, param.undetect = 255.0, 0.0\nparam.gain, param.offset = 0.4, -30.0\n\nimport numpy\n\ndata = numpy.zeros((420, 500), numpy.uint8)\nparam.setData(data)","key":"tMbqpYN1gG"},{"type":"output","id":"K1nwWzTDPQOzH1LkzIdb_","data":[],"key":"zJtlawgwLz"}],"key":"T9krFY4K7k"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Create an empty scan and add the parameter to it","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"NFFMP37pDd"}],"identifier":"create-an-empty-scan-and-add-the-parameter-to-it","label":"Create an empty scan and add the parameter to it","html_id":"create-an-empty-scan-and-add-the-parameter-to-it","implicit":true,"key":"k7FkzGgqPI"}],"key":"VFK9BoUYDp"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import _polarscan\nfrom Proj import dr\n\nnewscan = _polarscan.new()\nnewscan.elangle = 25.0 * dr\nnewscan.addAttribute(\"how/simulated\", \"True\")\n\nnewscan.addParameter(param)\nprint(\"%i rays per sweep\" % newscan.nrays)\nprint(\"%i bins per ray\" % newscan.nbins)","key":"NsEBpVYTTw"},{"type":"output","id":"nTkqGJ8ovhkgWIVMKFOXu","data":[],"key":"QPwkuW4dWs"}],"key":"Ghjdv4zbKM"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"See how the parameter’s dimensions were passed along to the scan, so they don’t have to be set explicitly. Nevertheless, plenty of metadata must be handled explicitly or ODIM_H5 files risk being incomplete.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"w2wfQSFGWY"}],"identifier":"see-how-the-parameters-dimensions-were-passed-along-to-the-scan-so-they-dont-have-to-be-set-explicitly-nevertheless-plenty-of-metadata-must-be-handled-explicitly-or-odim-h5-files-risk-being-incomplete","label":"See how the parameter’s dimensions were passed along to the scan, so they don’t have to be set explicitly. Nevertheless, plenty of metadata must be handled explicitly or ODIM_H5 files risk being incomplete.","html_id":"see-how-the-parameters-dimensions-were-passed-along-to-the-scan-so-they-dont-have-to-be-set-explicitly-nevertheless-plenty-of-metadata-must-be-handled-explicitly-or-odim-h5-files-risk-being-incomplete","implicit":true,"key":"WqKWfh5uwj"}],"key":"uZGgm0eYUn"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"newscan.a1gate = 0\nnewscan.beamwidth = 1.0 * dr\nnewscan.rscale = 500.0\nnewscan.rstart = (\n    0.0  # Distance in meters to the start of the first range bin, unknown=0.0\n)\nnewscan.startdate = \"20140831\"\nnewscan.starttime = \"145005\"\nnewscan.enddate = \"20140831\"\nnewscan.endtime = \"145020\"\n\n# Top-level attributes\nnewscan.date = \"20140831\"\nnewscan.time = \"145000\"\nnewscan.source = \"WMO:26232,RAD:EE41,PLC:Sürgavere,NOD:eesur\"\nnewscan.longitude = 25.519 * dr\nnewscan.latitude = 58.482 * dr\nnewscan.height = 157.0","key":"ErRdanRBGo"},{"type":"output","id":"lmWBv-qgftSVcJXcsZUEn","data":[],"key":"jAlTIDBXBV"}],"key":"MbeKCKQZqr"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Now create a new I/O container and write the scan to ODIM_H5 file.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"pZ2xbmMu3X"}],"identifier":"now-create-a-new-i-o-container-and-write-the-scan-to-odim-h5-file","label":"Now create a new I/O container and write the scan to ODIM_H5 file.","html_id":"now-create-a-new-i-o-container-and-write-the-scan-to-odim-h5-file","implicit":true,"key":"vjiKJZYG8i"}],"key":"qPfAabP1iv"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"container = _raveio.new()\ncontainer.object = newscan\ncontainer.save(\"data/myscan.h5\")\n\nimport os\n\nprint(\"ODIM_H5 file is %i bytes large\" % os.path.getsize(\"data/myscan.h5\"))","key":"FR8mqxxq3v"},{"type":"output","id":"IYv4oR8tf0cSKvNYI03VJ","data":[],"key":"sanla6bYt3"}],"key":"GQXEJ6RxPZ"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Remove compression. It makes file I/O faster. You can also tune HDF5 file-creation properties through the I/O container object.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"tYY5PhPItJ"}],"identifier":"remove-compression-it-makes-file-i-o-faster-you-can-also-tune-hdf5-file-creation-properties-through-the-i-o-container-object","label":"Remove compression. It makes file I/O faster. You can also tune HDF5 file-creation properties through the I/O container object.","html_id":"remove-compression-it-makes-file-i-o-faster-you-can-also-tune-hdf5-file-creation-properties-through-the-i-o-container-object","implicit":true,"key":"f4tKc1bmBo"}],"key":"WPkI2OfpjQ"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"container.compression_level = 0  # ZLIB compression levels 0-9\ncontainer.save(\"data/myscan.h5\")\nprint(\"ODIM_H5 file is now %i bytes large\" % os.path.getsize(\"data/myscan.h5\"))","key":"zydPPbN4kg"},{"type":"output","id":"v0VeEWjW_luNNX_0Qc5nq","data":[],"key":"pAFvsiDQuZ"}],"key":"AlFXQvn18E"}],"key":"h3BrFA90Z2"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Introduction to GPM-API","url":"/gpm-api-intro","group":"Py-ART and wradlib"},"next":{"title":"Quality Control","url":"/baltrad-qc","group":"BALTRAD"}}},"domain":"http://localhost:3000"}