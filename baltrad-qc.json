{"version":2,"kind":"Notebook","sha256":"ae5e5279b7f8c7e69aff93634d8cd9c8cddad992ee5073762fa3056415c8c21a","slug":"baltrad-qc","location":"/notebooks/baltrad/baltrad_short_course/1_BALTRAD_QC.ipynb","dependencies":[],"frontmatter":{"title":"Quality Control","content_includes_title":false,"authors":[{"nameParsed":{"literal":"Alfonso Ladino","given":"Alfonso","family":"Ladino"},"name":"Alfonso Ladino","orcid":"0000-0001-8081-7827","github":"aladinor","id":"contributors-myst-generated-uid-0"},{"nameParsed":{"literal":"Anna del Moral Méndez","given":"Anna","non_dropping_particle":"del","family":"Moral Méndez"},"name":"Anna del Moral Méndez","orcid":"0000-0002-5015-840X","id":"contributors-myst-generated-uid-1"},{"nameParsed":{"literal":"Brenda Javornik","given":"Brenda","family":"Javornik"},"name":"Brenda Javornik","orcid":"0009-0004-9266-9293","github":"leavesntwigs","id":"contributors-myst-generated-uid-2"},{"nameParsed":{"literal":"Daniel Michelson","given":"Daniel","family":"Michelson"},"name":"Daniel Michelson","orcid":"0000-0003-3222-9881","github":"DanielMichelson","id":"contributors-myst-generated-uid-3"},{"nameParsed":{"literal":"Daniel Wolfensberger","given":"Daniel","family":"Wolfensberger"},"name":"Daniel Wolfensberger","orcid":"0009-0006-1419-0556","github":"wolfidan","id":"contributors-myst-generated-uid-4"},{"nameParsed":{"literal":"Gionata Ghiggi","given":"Gionata","family":"Ghiggi"},"name":"Gionata Ghiggi","orcid":"0000-0002-0818-0865","github":"ghiggi","id":"contributors-myst-generated-uid-5"},{"nameParsed":{"literal":"Jen DeHart","given":"Jen","family":"DeHart"},"name":"Jen DeHart","orcid":"0000-0001-8536-4927","github":"jcdehart","id":"contributors-myst-generated-uid-6"},{"nameParsed":{"literal":"Jordi Figueras i Ventura","given":"Jordi Figueras","non_dropping_particle":"i","family":"Ventura"},"name":"Jordi Figueras i Ventura","orcid":"0000-0002-4949-422X","github":"jfigui","id":"contributors-myst-generated-uid-7"},{"nameParsed":{"literal":"Julian Giles","given":"Julian","family":"Giles"},"name":"Julian Giles","orcid":"0000-0001-8134-008X","github":"JulianGiles","id":"contributors-myst-generated-uid-8"},{"nameParsed":{"literal":"Kai Mühlbauer","given":"Kai","family":"Mühlbauer"},"name":"Kai Mühlbauer","orcid":"0000-0001-6599-1034","github":"kmuehlbauer","id":"contributors-myst-generated-uid-9"},{"nameParsed":{"literal":"Maxwell Grover","given":"Maxwell","family":"Grover"},"name":"Maxwell Grover","orcid":"0000-0002-0370-8974","github":"mgrover1","id":"contributors-myst-generated-uid-10"},{"nameParsed":{"literal":"Mike Dixon","given":"Mike","family":"Dixon"},"name":"Mike Dixon","orcid":"0000-0002-9597-9113","github":"mike-dixon","id":"contributors-myst-generated-uid-11"},{"nameParsed":{"literal":"Robert Jackson","given":"Robert","family":"Jackson"},"name":"Robert Jackson","orcid":"0000-0003-2518-1234","github":"rcjackson","id":"contributors-myst-generated-uid-12"},{"nameParsed":{"literal":"Scott Collis","given":"Scott","family":"Collis"},"name":"Scott Collis","orcid":"0000-0002-2303-687X","github":"scollis","id":"contributors-myst-generated-uid-13"},{"nameParsed":{"literal":"Ting-Yu Cha","given":"Ting-Yu","family":"Cha"},"name":"Ting-Yu Cha","orcid":"0000-0002-6292-8483","github":"tingyucha","id":"contributors-myst-generated-uid-14"}],"open_access":true,"license":{"content":{"id":"Apache-2.0","url":"https://opensource.org/licenses/Apache-2.0","name":"Apache License 2.0","free":true,"osi":true},"code":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true}},"github":"https://github.com/openradar/erad2024","copyright":"2024","abbreviations":{"ARM":"Atmospheric Radiation Measurement","NCAR":"National Center for Atmospheric Research"},"settings":{"output_matplotlib_strings":"remove"},"numbering":{"title":{"offset":2}},"exports":[{"format":"ipynb","filename":"1_BALTRAD_QC.ipynb","url":"/ams2025/build/1_BALTRAD_QC-99cd12f433f6370b849f9de2d0007bee.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"retriev data from s3 bucket","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"QlQZhf8l2V"}],"identifier":"retriev-data-from-s3-bucket","label":"retriev data from s3 bucket","html_id":"retriev-data-from-s3-bucket","implicit":true,"key":"wM8HMf0Ein"}],"key":"NCvJMa7C07"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import os\nimport urllib.request\nfrom pathlib import Path\n\n# Set the URL for the cloud\nURL = \"https://js2.jetstream-cloud.org:8001/\"\npath = \"pythia/radar/erad2024/baltrad/baltrad_short_course/\"\n!mkdir -p data\nfiles = [\"201405190715_SUR.h5\", \"plrze_pvol_20120205T0430Z.h5\", \"sekir.h5\"]\nfor file in files:\n    file0 = os.path.join(path, file)\n    name = os.path.join(\"data\", Path(file).name)\n    if not os.path.exists(name):\n        print(f\"downloading, {name}\")\n        urllib.request.urlretrieve(\n            f\"{URL}{file0}\", os.path.join(\"data\", Path(file).name)\n        )","key":"tG8ORmauZ3"},{"type":"output","id":"8JQ4dhG599WGxhm00RF4R","data":[],"key":"fv9Lnwy5pg"}],"key":"XtKtFd5hHv"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Import the file I/O module along with the main RAVE module containing useful constants","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"M2ypP3ImfJ"}],"identifier":"import-the-file-i-o-module-along-with-the-main-rave-module-containing-useful-constants","label":"Import the file I/O module along with the main RAVE module containing useful constants","html_id":"import-the-file-i-o-module-along-with-the-main-rave-module-containing-useful-constants","implicit":true,"key":"FDbk1qqVHf"}],"key":"PK0sygoKjN"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"%matplotlib inline\nimport matplotlib\nimport _raveio, _rave","key":"VNDfRne57m"},{"type":"output","id":"P0cVckB0QLArblMHiPyl9","data":[],"key":"cITDCUvcG9"}],"key":"jbZRR4t4D2"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Read an input ODIM_H5 file","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"R0JO1kiJrO"}],"identifier":"read-an-input-odim-h5-file","label":"Read an input ODIM_H5 file","html_id":"read-an-input-odim-h5-file","implicit":true,"key":"RggRhNTa5O"}],"key":"tJ6fzZOEEL"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"rio = _raveio.open(\"data/201405190715_SUR.h5\")","key":"Wz6iSisR38"},{"type":"output","id":"fA3ZQJWLC-PK6tzWne4eQ","data":[],"key":"Yn9KGFjh1g"}],"key":"CiR3SOjjYR"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Create a simple plotter for B-scans, elaborating the example from the I/O exercise","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Q2We7L3thz"}],"identifier":"create-a-simple-plotter-for-b-scans-elaborating-the-example-from-the-i-o-exercise","label":"Create a simple plotter for B-scans, elaborating the example from the I/O exercise","html_id":"create-a-simple-plotter-for-b-scans-elaborating-the-example-from-the-i-o-exercise","implicit":true,"key":"jjXrZXoQ87"}],"key":"q3l6qYjkt8"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Two color palettes, one used in GoogleMapsPlugin, and the other from RAVE\nfrom GmapColorMap import dbzh as dbzp\nfrom rave_win_colors import continuous_MS as vradp\n\n\n# Convert a 768-list palette to a matplotlib colorlist\ndef make_colorlist(pal):\n    colorlist = []\n    for i in range(0, len(pal), 3):\n        colorlist.append([pal[i] / 255.0, pal[i + 1] / 255.0, pal[i + 2] / 255.0])\n    return colorlist\n\n\n# Convert lists to colormaps\ndbzcl = make_colorlist(dbzp)\nvradcl = make_colorlist(vradp)\n\n# Then create a simple plotter\nimport matplotlib.pyplot as plt\n\n# from types import StringType\nStringType = type(\"\")\n\n\ndef plot(data, colorlist=dbzcl, title=\"B-scan\"):\n    mini, maxi = data.shape.index(min(data.shape)), data.shape.index(max(data.shape))\n    figsize = (16, 12) if mini == 0 else (12, 8)\n    fig = plt.figure(figsize=figsize)\n    plt.title(title)\n    clist = (\n        colorlist\n        if type(colorlist) == StringType\n        else matplotlib.colors.ListedColormap(colorlist)\n    )\n    plt.imshow(data, cmap=clist, clim=(0, 255))\n    plt.colorbar(shrink=float(data.shape[mini]) / data.shape[maxi])","key":"r6hZXVdYaf"},{"type":"output","id":"P3BnbHf_SvkZtIWbSCwQi","data":[],"key":"nzc0m5PxZn"}],"key":"hXRKxZAiQn"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Access the polar volume and plot VRAD data from the lowest scan","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"YNIIoWQwlD"}],"identifier":"access-the-polar-volume-and-plot-vrad-data-from-the-lowest-scan","label":"Access the polar volume and plot VRAD data from the lowest scan","html_id":"access-the-polar-volume-and-plot-vrad-data-from-the-lowest-scan","implicit":true,"key":"XwvgQjvqih"}],"key":"fAEjzYVO2w"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"pvol = rio.object\nplot(pvol.getScan(0).getParameter(\"VRADH\").getData(), vradcl, \"Original VRAD\")","key":"H6RvUtr7da"},{"type":"output","id":"dyZmMDP4Me41WCtwHFN2Z","data":[],"key":"max8lfuxJf"}],"key":"dLbKISJnkn"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Dealias the volume","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"zb7Hr8z6AS"}],"identifier":"dealias-the-volume","label":"Dealias the volume","html_id":"dealias-the-volume","implicit":true,"key":"IvqVkxMkm7"}],"key":"tGIHaJHqo5"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import _dealias\n\nret = _dealias.dealias(pvol)","key":"ebOEb4kWd7"},{"type":"output","id":"GV30NfEd_3IBc80nnScuw","data":[],"key":"tpNMfi1wr6"}],"key":"vcUBOscftS"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Check whether the first scan’s been dealiased","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"NgXPykDkJa"}],"identifier":"check-whether-the-first-scans-been-dealiased","label":"Check whether the first scan’s been dealiased","html_id":"check-whether-the-first-scans-been-dealiased","implicit":true,"key":"LIVcp8oznc"}],"key":"BZfevIvCXo"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"print(\"This first scan is dealiased: %s\" % str(_dealias.dealiased(pvol.getScan(0))))","key":"cMdUns59NS"},{"type":"output","id":"_RA16pDtMXnJG_ncrxVJu","data":[],"key":"c8aiv5ph0w"}],"key":"PsT0lPKPJ5"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Replot for comparison","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"aqrm7QHHqP"}],"identifier":"replot-for-comparison","label":"Replot for comparison","html_id":"replot-for-comparison","implicit":true,"key":"ikFb2dgafv"}],"key":"hLC3kxof4D"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"plot(pvol.getScan(0).getParameter(\"VRADH\").getData(), vradcl, \"Dealiased VRAD\")","key":"Ob0mIQSTGR"},{"type":"output","id":"jEnp5IYVvWE0rQUN7xB0S","data":[],"key":"xdghfbGZpi"}],"key":"BLt5UZ4e7q"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Shift gears - back to reflectivity","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"olAYFGhvip"}],"identifier":"shift-gears-back-to-reflectivity","label":"Shift gears - back to reflectivity","html_id":"shift-gears-back-to-reflectivity","implicit":true,"key":"xXCjaocktL"}],"key":"oEAQHmLyd6"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"rio = _raveio.open(\"data/plrze_pvol_20120205T0430Z.h5\")\npvol = rio.object\nplot(pvol.getScan(0).getParameter(\"DBZH\").getData(), title=\"Original DBZH\")","key":"iW5yjU0Amr"},{"type":"output","id":"x67ROR4SoiXFUoXReZI-e","data":[],"key":"IN0ITOdIEE"}],"key":"razRAunmru"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Use the bRopo package’s quality plugin to identify and remove non-precipitation echoes","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"KoJkCmDHhi"}],"identifier":"use-the-bropo-packages-quality-plugin-to-identify-and-remove-non-precipitation-echoes","label":"Use the bRopo package’s quality plugin to identify and remove non-precipitation echoes","html_id":"use-the-bropo-packages-quality-plugin-to-identify-and-remove-non-precipitation-echoes","implicit":true,"key":"wqAnb29hqZ"}],"key":"tLNNw1hsCk"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import odc_polarQC\nimport warnings\n\nwarnings.filterwarnings(\"ignore\")  # Suppress SyntaxWarning from Python2 code\n\nodc_polarQC.algorithm_ids = [\"ropo\"]\npvol = odc_polarQC.QC(pvol)","key":"ttuAX9IkuY"},{"type":"output","id":"bVpCLOZgmOgnfwDsWKyUz","data":[],"key":"uCraUC0SHb"}],"key":"xSviElnO73"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot the resulting DBZH","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"T40DGhb9M6"}],"identifier":"plot-the-resulting-dbzh","label":"Plot the resulting DBZH","html_id":"plot-the-resulting-dbzh","implicit":true,"key":"x5GJ7XYZwd"}],"key":"FQcYRbXExi"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"plot(pvol.getScan(0).getParameter(\"DBZH\").getData(), title=\"DBZH after bRopo\")","key":"mCQcO9DGnp"},{"type":"output","id":"LLdRWmfL2NyuT4ZA445lm","data":[],"key":"AIdpXjNH75"}],"key":"fJB3OcCAUT"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Topographical beam-blockage QC using the beamb package’s quality plugin","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"JHAFFDe6IS"}],"identifier":"topographical-beam-blockage-qc-using-the-beamb-packages-quality-plugin","label":"Topographical beam-blockage QC using the beamb package’s quality plugin","html_id":"topographical-beam-blockage-qc-using-the-beamb-packages-quality-plugin","implicit":true,"key":"qAV3kTCbTu"}],"key":"plaJenP7oo"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import time\n\nodc_polarQC.algorithm_ids = [\"beamb\"]\nbefore = time.time()\npvol = odc_polarQC.QC(pvol)\nafter = time.time()\nprint(\"beamb runtime = %2.2f seconds\" % (after - before))","key":"M5ldkF6XKk"},{"type":"output","id":"BFM1kGr-T7ZbU-lgcRBxc","data":[],"key":"ITNxONzrlx"}],"key":"kazvDnBvq9"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Probability of overshooting","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"prAoZ44IK7"}],"identifier":"probability-of-overshooting","label":"Probability of overshooting","html_id":"probability-of-overshooting","implicit":true,"key":"sFTCQOdOyT"}],"key":"aagd3e7tZe"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"odc_polarQC.algorithm_ids = [\"rave-overshooting\"]\npvol = odc_polarQC.QC(pvol)","key":"llhUqzvXby"},{"type":"output","id":"4VEd68ftfykbA3YJN8N__","data":[],"key":"CzFqmzowXr"}],"key":"Pwk06qUuUb"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Accessing and manging data quality fields","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"YWKrrOnd7S"}],"identifier":"accessing-and-manging-data-quality-fields","label":"Accessing and manging data quality fields","html_id":"accessing-and-manging-data-quality-fields","implicit":true,"key":"lfSXqTIswv"}],"key":"UNOnekRTTS"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"scan = pvol.getScan(0)\nprint(\"Scan contains %i quality fields\" % scan.getNumberOfQualityFields())","key":"cok1mC9F4U"},{"type":"output","id":"rTZ2WI6xxklGZ4cG8irV4","data":[],"key":"rBCunpV8EL"}],"key":"G9RpA4Ffb2"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"for i in range(scan.getNumberOfQualityFields()):\n    qf = scan.getQualityField(i)\n    print(\"Quality field %i has identifier %s\" % (i, qf.getAttribute(\"how/task\")))","key":"IOvTUs930V"},{"type":"output","id":"XY5P7jszqb5ZR0eag22b6","data":[],"key":"n9vXE2Ytxz"}],"key":"cIGndwGPG0"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot quality fields","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"PRAFXhCotK"}],"identifier":"plot-quality-fields","label":"Plot quality fields","html_id":"plot-quality-fields","implicit":true,"key":"XUa0dLo9cU"}],"key":"kuFCdLdV48"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Beam blockage","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"yASPlpKIaR"}],"identifier":"beam-blockage","label":"Beam blockage","html_id":"beam-blockage","implicit":true,"key":"xziPoBJAl1"}],"key":"KyMWOPYVsq"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"bb = scan.getQualityFieldByHowTask(\"se.smhi.detector.beamblockage\")\nplot(bb.getData(), \"binary\", \"Quality indicator for beam blockage\")","key":"K1Eip5lEYs"},{"type":"output","id":"j6yN3FB5H6VdnPqoU9SRm","data":[],"key":"lN5XylSfnO"}],"key":"fmQW38w0Jg"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Probability of non-precipitation","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"cAI7gBZGHI"}],"identifier":"probability-of-non-precipitation","label":"Probability of non-precipitation","html_id":"probability-of-non-precipitation","implicit":true,"key":"AKbsKhjoLF"}],"key":"Nn9CnkiYEh"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"bb = scan.getQualityFieldByHowTask(\"fi.fmi.ropo.detector.classification\")\nplot(bb.getData(), \"binary\", \"Quality indicator for ropo\")","key":"EeR177kLsr"},{"type":"output","id":"MINjJxv_nO6vGjEEhS9c2","data":[],"key":"EZ5ycjprnm"}],"key":"s4fYh2hxNw"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Probability of overshooting","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"yvRyFVmy4i"}],"identifier":"probability-of-overshooting","label":"Probability of overshooting","html_id":"probability-of-overshooting-1","implicit":true,"key":"S3hlZrqem3"}],"key":"urXkq2x2aa"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"bb = scan.getQualityFieldByHowTask(\"se.smhi.detector.poo\")\nplot(bb.getData(), \"binary\", \"Quality indicator for PoO\")","key":"T6UZHPFzvx"},{"type":"output","id":"WqDWIX-qPbRk9TS0iWGcp","data":[],"key":"jKRjsqknKb"}],"key":"jCLRdx2Udf"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Chaining algorithms - new data","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Eau7vKf5iF"}],"identifier":"chaining-algorithms-new-data","label":"Chaining algorithms - new data","html_id":"chaining-algorithms-new-data","implicit":true,"key":"JUXaXVeukG"}],"key":"SPAqcb3CUv"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"rio = _raveio.open(\"data/sekir.h5\")\npvol = rio.object\n\nodc_polarQC.algorithm_ids = [\n    \"ropo\",\n    \"beamb\",\n    \"radvol-att\",\n    \"radvol-broad\",\n    \"rave-overshooting\",\n]\npvol = odc_polarQC.QC(pvol)","key":"Gi6XWdkAxw"},{"type":"output","id":"wGJRJSJ_az3l1n-dyVi8-","data":[],"key":"cQaCHybUIW"}],"key":"nYPNtqJHCY"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"scan = pvol.getScan(0)\natt = scan.getQualityField(2)\nplot(att.getData(), \"binary\", \"Attenuation\")","key":"yI5Oc4itF9"},{"type":"output","id":"xu7J1JUsHHC322kjRfu7P","data":[],"key":"sstBoM1C4e"}],"key":"RouGCqtzKX"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"“Total Quality”","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"HHOldFkrIF"}],"identifier":"total-quality","label":"“Total Quality”","html_id":"total-quality","implicit":true,"key":"h96odEOnwh"}],"key":"c2cuhL7YQf"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"odc_polarQC.algorithm_ids = [\"qi-total\"]\npvol = odc_polarQC.QC(pvol)","key":"aP2njLznpJ"},{"type":"output","id":"UVdVexJkX2ioMpdMsZqIx","data":[],"key":"BUy3aYGzcr"}],"key":"Lv7RptNZdL"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"qitot = scan.getQualityField(5)\nplot(qitot.getData(), \"binary\", \"Total quality index\")","key":"H5SLfxEGo6"},{"type":"output","id":"KV221cbc6SfOvd6JUmTb1","data":[],"key":"zza9OZJMQi"}],"key":"PzXKilmRfH"}],"key":"wopqmcdOUD"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"I/O model","url":"/baltrad-io","group":"BALTRAD"},"next":{"title":"Quality Control using DR","url":"/baltrad-drqc","group":"BALTRAD"}}},"domain":"http://localhost:3000"}